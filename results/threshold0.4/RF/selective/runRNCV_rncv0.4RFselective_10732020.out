========================================
numpy version: 1.21.2
pandas version: 1.3.5
scikit-learn version: 1.0.2
scipy version: 1.7.3
========================================

data file: /beegfs/work/tu_iizre01/MalariaVaccineEfficacyPrediction/data/proteome_data/correlationFiltering/preprocessed_selective_data_spearman_filtered_threshold0.4.csv

start time: 16.09.2022_12-31-47

++++++++++++++++++++++++++++++++++++++++
III14 start: 16.09.2022_12-31-47

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [ 0  2  1  4  4  4  0  2  2  3  3  4  3  1  2  0  0  1  0  4  4  3  2  2
  3  2  1  1  3  2  4  3  1  1  0  0  0  1  4  3 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 0  6 15 16 18 34 35 36]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [ 2 13 17 26 27 32 33 37]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  7  8 14 22 23 25 29]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [ 9 10 12 21 24 28 31 39]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [ 3  4  5 11 19 20 30 38]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [ 1  0  0  3  0  4  3  3  0  3  3  4  2  1  4  1  0  4  4  1  0  0  2  2
  3  1  0  1  4  4  3  2  2  4  2  2  1  3  2  1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  2  4  8 16 20 21 26]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [ 0 13 15 19 25 27 36 39]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [12 22 23 31 32 34 35 38]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 3  6  7  9 10 24 30 37]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 5 11 14 17 18 28 29 33]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [ 2  3  1  3  0  2  3  4  0  2  2  4  0  1  4  3  0  3  0  0  3  4  1  4
  4  2  3  2  0  2  1  1  0  1  1  4  1  3  4  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 4  8 12 16 18 19 28 32]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [ 2 13 22 30 31 33 34 36]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 0  5  9 10 25 27 29 39]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [ 1  3  6 15 17 20 26 37]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [ 7 11 14 21 23 24 35 38]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [ 2  1  0  3  2  4  1  0  3  1  3  0  0  3  3  2  1  3  1  1  3  2  2  4
  4  2  4  1  4  1  0  4  0  4  0  4  3  2  0  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [ 2  7 11 12 30 32 34 38]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  6  9 16 18 19 27 29]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [ 0  4 15 21 22 25 37 39]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [ 3  8 10 13 14 17 20 36]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [ 5 23 24 26 28 31 33 35]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [ 1  2  0  1  4  1  4  4  2  1  3  4  4  0  3  0  3  1  4  3  2  0  3  2
  3  3  2  1  0  4  2  0  0  4  1  2  2  0  1  3 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [ 2 13 15 21 28 31 32 37]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [ 0  3  5  9 17 27 34 38]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [ 1  8 20 23 26 30 35 36]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [10 14 16 19 22 24 25 39]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 4  6  7 11 12 18 29 33]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [ 1  2  0  4  0  3  4  2  0  2  1  0  2  4  4  2  0  1  3  1  1  1  2  0
  2  3  2  4  0  4  3  1  4  3  1  3  3  4  3  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 2  4  8 11 16 23 28 39]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 0 10 17 19 20 21 31 34]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  7  9 12 15 22 24 26]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [ 5 18 25 30 33 35 36 38]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [ 3  6 13 14 27 29 32 37]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [ 1  2  4  4  1  3  2  0  2  2  1  3  3  1  0  2  4  0  1  3  3  4  0  1
  0  3  4  4  0  3  2  3  1  0  4  1  4  0  2  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [ 7 14 17 22 24 28 33 37]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [ 0  4 10 13 18 23 32 35]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [ 1  6  8  9 15 30 38 39]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [ 5 11 12 19 20 25 29 31]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [ 2  3 16 21 26 27 34 36]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [ 3  4  3  0  1  0  2  4  2  1  2  3  4  0  3  4  4  2  0  0  2  1  4  3
  4  0  2  1  1  3  2  0  3  1  0  1  3  2  1  4 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 3  5 13 18 19 25 31 34]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [ 4  9 21 27 28 33 35 38]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 6  8 10 17 20 26 30 37]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [ 0  2 11 14 23 29 32 36]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 1  7 12 15 16 22 24 39]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [ 3  2  1  4  0  4  2  4  2  1  3  0  4  1  4  3  2  1  0  3  0  3  4  1
  1  0  0  2  3  4  1  3  4  0  2  2  3  1  2  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [ 4 11 18 20 25 26 33 39]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 2  9 13 17 23 24 30 37]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [ 1  6  8 16 27 34 35 38]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [ 0 10 15 19 21 28 31 36]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 3  5  7 12 14 22 29 32]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [ 4  4  1  4  3  1  3  0  1  1  0  2  3  3  3  4  3  4  2  0  3  2  0  0
  2  1  3  1  2  1  1  2  0  0  4  4  4  2  2  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [ 7 10 19 22 23 32 33 39]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 2  5  8  9 25 27 29 30]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [11 18 21 24 28 31 37 38]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 4  6 12 13 14 16 20 26]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 0  1  3 15 17 34 35 36]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_12-31-47.
End of grid search at 16.09.2022_12-32-00.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_12-32-00.
End of grid search at 16.09.2022_12-32-12.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_12-32-12.
End of grid search at 16.09.2022_12-32-24.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_12-32-24.
End of grid search at 16.09.2022_12-32-35.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_12-32-35.
End of grid search at 16.09.2022_12-32-47.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_12-32-54.
End of grid search at 16.09.2022_12-33-06.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_12-33-06.
End of grid search at 16.09.2022_12-33-19.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_12-33-19.
End of grid search at 16.09.2022_12-33-31.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_12-33-31.
End of grid search at 16.09.2022_12-33-43.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_12-33-43.
End of grid search at 16.09.2022_12-33-56.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_12-34-09.
End of grid search at 16.09.2022_12-34-26.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_12-34-26.
End of grid search at 16.09.2022_12-34-43.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_12-34-43.
End of grid search at 16.09.2022_12-35-01.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_12-35-01.
End of grid search at 16.09.2022_12-35-18.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_12-35-18.
End of grid search at 16.09.2022_12-35-36.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_12-35-46.
End of grid search at 16.09.2022_12-35-58.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_12-35-58.
End of grid search at 16.09.2022_12-36-11.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_12-36-11.
End of grid search at 16.09.2022_12-36-23.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_12-36-23.
End of grid search at 16.09.2022_12-36-35.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_12-36-35.
End of grid search at 16.09.2022_12-36-48.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_12-36-57.
End of grid search at 16.09.2022_12-37-14.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_12-37-14.
End of grid search at 16.09.2022_12-37-32.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_12-37-32.
End of grid search at 16.09.2022_12-37-49.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_12-37-49.
End of grid search at 16.09.2022_12-38-07.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_12-38-07.
End of grid search at 16.09.2022_12-38-24.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_12-38-39.
End of grid search at 16.09.2022_12-38-56.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_12-38-56.
End of grid search at 16.09.2022_12-39-14.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_12-39-14.
End of grid search at 16.09.2022_12-39-31.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_12-39-31.
End of grid search at 16.09.2022_12-39-49.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_12-39-49.
End of grid search at 16.09.2022_12-40-06.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_12-40-18.
End of grid search at 16.09.2022_12-40-44.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_12-40-44.
End of grid search at 16.09.2022_12-41-09.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_12-41-09.
End of grid search at 16.09.2022_12-41-35.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_12-41-35.
End of grid search at 16.09.2022_12-42-01.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_12-42-01.
End of grid search at 16.09.2022_12-42-27.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_12-42-38.
End of grid search at 16.09.2022_12-42-50.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_12-42-50.
End of grid search at 16.09.2022_12-43-03.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_12-43-03.
End of grid search at 16.09.2022_12-43-15.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_12-43-15.
End of grid search at 16.09.2022_12-43-28.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_12-43-28.
End of grid search at 16.09.2022_12-43-40.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_12-43-51.
End of grid search at 16.09.2022_12-44-08.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_12-44-08.
End of grid search at 16.09.2022_12-44-25.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_12-44-25.
End of grid search at 16.09.2022_12-44-43.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_12-44-43.
End of grid search at 16.09.2022_12-45-00.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_12-45-00.
End of grid search at 16.09.2022_12-45-18.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_12-45-35.
End of grid search at 16.09.2022_12-46-01.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_12-46-01.
End of grid search at 16.09.2022_12-46-26.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_12-46-26.
End of grid search at 16.09.2022_12-46-52.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_12-46-52.
End of grid search at 16.09.2022_12-47-18.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_12-47-18.
End of grid search at 16.09.2022_12-47-43.

III14 results:
{'mcc': {'best_inner_indices': array([1, 1, 0, 0, 0, 0, 5, 0, 3, 1, 4, 3, 2, 1, 0, 4, 3, 1, 0, 1, 0, 3,
       4, 3, 4, 2, 3, 0, 0, 2, 4, 1, 0, 1, 3, 0, 3, 0, 0, 1, 2, 1, 0, 2,
       2, 3, 0, 0, 0, 2]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}],
         'best_inner_scores': array([0.53132337, 0.83493673, 0.83493673, 0.73364642, 0.68640255,
       0.81165105, 0.72801788, 0.53132337, 0.77271394, 0.64569247,
       0.66144338, 0.66017494, 0.72430102, 0.67149188, 0.76980234,
       0.78898957, 0.64381101, 0.66144338, 0.83475753, 0.68803296,
       0.70276422, 0.83192777, 0.64381101, 0.74902076, 0.73037345,
       0.78835979, 0.70796881, 0.83192777, 0.64569247, 0.6659598 ,
       0.83493673, 0.68139693, 0.6407648 , 0.60335198, 0.72848087,
       0.59713826, 0.72801788, 0.70311315, 0.85471582, 0.75035867,
       0.62360956, 0.81527096, 0.66144338, 0.66535948, 0.81505443,
       0.69324884, 0.78898957, 0.57906602, 0.73364642, 0.60559177]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [500, 100, 1000]},
         'max_ncv_average_precision': 0.8702153630301206,
         'max_ncv_balanced_accuracy': 0.8712121212121212,
         'max_ncv_brier_loss': 0.13462999999999997,
         'max_ncv_f1': 0.8571428571428571,
         'max_ncv_informedness': 0.7424242424242424,
         'max_ncv_log_loss': 0.48563079936325576,
         'max_ncv_markedness': 0.7519181585677748,
         'max_ncv_mcc': 0.74715612106153,
         'max_ncv_negative_predictive_value': 0.8695652173913043,
         'max_ncv_precision': 0.9285714285714286,
         'max_ncv_precision_recall_auc': 0.8643117417975519,
         'max_ncv_roc_auc': 0.9027777777777778,
         'max_ncv_sensitivity': 0.8333333333333334,
         'max_ncv_specificity': 0.9545454545454546,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.36496249999999997,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 1.3456801624938026,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.01564825,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.109481383784491,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.8339965077548499,
         'mean_ncv_balanced_accuracy': 0.8472222222222223,
         'mean_ncv_brier_loss': 0.1253817075,
         'mean_ncv_f1': 0.8283852177234529,
         'mean_ncv_informedness': 0.6944444444444444,
         'mean_ncv_log_loss': 0.42969957267091113,
         'mean_ncv_markedness': 0.7117042431140896,
         'mean_ncv_mcc': 0.7029662807988909,
         'mean_ncv_negative_predictive_value': 0.8438225904530252,
         'mean_ncv_precision': 0.8678816526610644,
         'mean_ncv_precision_recall_auc': 0.8177086942506641,
         'mean_ncv_roc_auc': 0.8869949494949496,
         'mean_ncv_sensitivity': 0.7944444444444444,
         'mean_ncv_specificity': 0.8999999999999998,
         'mean_test_average_precision': 0.9064761904761904,
         'mean_test_balanced_accuracy': 0.8489999999999999,
         'mean_test_brier_loss': 0.12538170749999997,
         'mean_test_f1': 0.8200634920634918,
         'mean_test_informedness': 0.698,
         'mean_test_log_loss': 0.4296995726709112,
         'mean_test_markedness': 0.7386190476190477,
         'mean_test_mcc': 0.7167167690288268,
         'mean_test_negative_predictive_value': 0.8549523809523809,
         'mean_test_precision': 0.8836666666666666,
         'mean_test_precision_recall_auc': 0.8929325396825395,
         'mean_test_roc_auc': 0.9017916666666668,
         'mean_test_sensitivity': 0.795,
         'mean_test_specificity': 0.9029999999999998,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011019042708333333,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.08054030379782672,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.8143404316784538,
         'min_ncv_balanced_accuracy': 0.7929292929292929,
         'min_ncv_brier_loss': 0.11752310000000002,
         'min_ncv_f1': 0.7647058823529411,
         'min_ncv_informedness': 0.5858585858585859,
         'min_ncv_log_loss': 0.39334194812448353,
         'min_ncv_markedness': 0.6041666666666665,
         'min_ncv_mcc': 0.5949422064001082,
         'min_ncv_negative_predictive_value': 0.7916666666666666,
         'min_ncv_precision': 0.8125,
         'min_ncv_precision_recall_auc': 0.774670435718241,
         'min_ncv_roc_auc': 0.8611111111111112,
         'min_ncv_sensitivity': 0.7222222222222222,
         'min_ncv_specificity': 0.8636363636363636,
         'min_test_average_precision': 0.6333333333333333,
         'min_test_balanced_accuracy': 0.5666666666666667,
         'min_test_brier_loss': 0.0046125,
         'min_test_f1': 0.4,
         'min_test_informedness': 0.1333333333333333,
         'min_test_log_loss': 0.06369347157311131,
         'min_test_markedness': 0.16666666666666652,
         'min_test_mcc': 0.14907119849998599,
         'min_test_negative_predictive_value': 0.6,
         'min_test_precision': 0.5,
         'min_test_precision_recall_auc': 0.5138888888888888,
         'min_test_roc_auc': 0.6,
         'min_test_sensitivity': 0.3333333333333333,
         'min_test_specificity': 0.5,
         'min_train_average_precision': 0.9999999999999999,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.004604166666666667,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.042182403459485436,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999999,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.82651183, 0.81950801, 0.82174554, 0.82728876, 0.82168866,
       0.86366928, 0.87021536, 0.81434043, 0.82994959, 0.84504761]),
         'ncv_balanced_accuracy': array([0.87121212, 0.79292929, 0.87121212, 0.84848485, 0.81565657,
       0.84343434, 0.83838384, 0.87121212, 0.84848485, 0.87121212]),
         'ncv_brier_loss': array([0.126378  , 0.13463   , 0.13012865, 0.1271133 , 0.1175614 ,
       0.12137557, 0.1175231 , 0.1334924 , 0.1268529 , 0.11876175]),
         'ncv_f1': array([0.85714286, 0.76470588, 0.85714286, 0.83333333, 0.78787879,
       0.82352941, 0.8125    , 0.85714286, 0.83333333, 0.85714286]),
         'ncv_informedness': array([0.74242424, 0.58585859, 0.74242424, 0.6969697 , 0.63131313,
       0.68686869, 0.67676768, 0.74242424, 0.6969697 , 0.74242424]),
         'ncv_log_loss': array([0.44879877, 0.45042647, 0.46639103, 0.42329201, 0.39334195,
       0.3965163 , 0.40267231, 0.4856308 , 0.42737962, 0.40254648]),
         'ncv_markedness': array([0.75191816, 0.60416667, 0.75191816, 0.6969697 , 0.66666667,
       0.70833333, 0.73626374, 0.75191816, 0.6969697 , 0.75191816]),
         'ncv_mcc': array([0.74715612, 0.59494221, 0.74715612, 0.6969697 , 0.64874912,
       0.69751845, 0.70588915, 0.74715612, 0.6969697 , 0.74715612]),
         'ncv_negative_predictive_value': array([0.86956522, 0.79166667, 0.86956522, 0.86363636, 0.8       ,
       0.83333333, 0.80769231, 0.86956522, 0.86363636, 0.86956522]),
         'ncv_precision': array([0.88235294, 0.8125    , 0.88235294, 0.83333333, 0.86666667,
       0.875     , 0.92857143, 0.88235294, 0.83333333, 0.88235294]),
         'ncv_precision_recall_auc': array([0.81225126, 0.80496723, 0.80831254, 0.81374058, 0.77467044,
       0.85777078, 0.86431174, 0.80035142, 0.81589503, 0.82481592]),
         'ncv_roc_auc': array([0.88636364, 0.88383838, 0.87752525, 0.88131313, 0.89646465,
       0.90277778, 0.89015152, 0.86111111, 0.88888889, 0.90151515]),
         'ncv_sensitivity': array([0.83333333, 0.72222222, 0.83333333, 0.83333333, 0.72222222,
       0.77777778, 0.72222222, 0.83333333, 0.83333333, 0.83333333]),
         'ncv_specificity': array([0.90909091, 0.86363636, 0.90909091, 0.86363636, 0.90909091,
       0.90909091, 0.95454545, 0.90909091, 0.86363636, 0.90909091]),
         'ranked_best_inner_params': [{'frequency': 18, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 1, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
         'std_ncv_average_precision': 0.019234357740247923,
         'std_ncv_balanced_accuracy': 0.026545197022258386,
         'std_ncv_brier_loss': 0.006349024290218509,
         'std_ncv_f1': 0.032195104185617274,
         'std_ncv_informedness': 0.05309039404451677,
         'std_ncv_log_loss': 0.03198290761994096,
         'std_ncv_markedness': 0.0484310449810259,
         'std_ncv_mcc': 0.05003311035681207,
         'std_ncv_negative_predictive_value': 0.03247560494615688,
         'std_ncv_precision': 0.03337891702066436,
         'std_ncv_precision_recall_auc': 0.026416210979165758,
         'std_ncv_roc_auc': 0.012317349012341647,
         'std_ncv_sensitivity': 0.05270462766947301,
         'std_ncv_specificity': 0.028747978728803445,
         'std_test_average_precision': 0.09389246467854352,
         'std_test_balanced_accuracy': 0.11438041711147107,
         'std_test_brier_loss': 0.06480592576159,
         'std_test_f1': 0.1399300638398848,
         'std_test_informedness': 0.2287608342229421,
         'std_test_log_loss': 0.21770308930523455,
         'std_test_markedness': 0.2185459724627499,
         'std_test_mcc': 0.22103415968980852,
         'std_test_negative_predictive_value': 0.12641246037987638,
         'std_test_precision': 0.1572326583237001,
         'std_test_precision_recall_auc': 0.11250236124558698,
         'std_test_roc_auc': 0.09443486616929522,
         'std_test_sensitivity': 0.1883888606361623,
         'std_test_specificity': 0.13530389076867988,
         'std_train_average_precision': 4.485978453382214e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.002308468985998461,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.0144062909499185,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 4.485978453382214e-17,
         'std_train_roc_auc': 2.242989226691107e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([0.95      , 0.83035714, 0.80416667, 1.        , 1.        ,
       0.95      , 0.89285714, 0.9       , 0.91666667, 0.80555556,
       1.        , 0.91666667, 0.95      , 0.91666667, 0.75555556,
       0.91666667, 1.        , 0.89285714, 0.80555556, 1.        ,
       0.89285714, 0.8875    , 1.        , 0.63888889, 1.        ,
       0.91666667, 0.80416667, 0.95      , 1.        , 1.        ,
       0.77083333, 0.89285714, 1.        , 1.        , 0.79166667,
       1.        , 1.        , 0.95      , 0.63333333, 0.91666667,
       1.        , 0.83035714, 1.        , 0.86666667, 0.80555556,
       0.95      , 0.95      , 1.        , 0.80555556, 0.86666667]),
         'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 1.        ,
       0.875     , 0.875     , 0.625     , 0.83333333, 0.8       ,
       1.        , 0.875     , 0.875     , 0.9       , 0.73333333,
       0.75      , 1.        , 0.875     , 0.8       , 0.9       ,
       0.875     , 0.625     , 0.875     , 0.9       , 0.83333333,
       0.875     , 0.75      , 0.75      , 1.        , 0.9       ,
       0.75      , 0.875     , 1.        , 0.83333333, 0.66666667,
       1.        , 1.        , 0.875     , 0.56666667, 0.83333333,
       1.        , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.73333333]),
         'test_brier_loss': array([0.1457185 , 0.180734  , 0.198325  , 0.0456    , 0.0615125 ,
       0.1157625 , 0.1389465 , 0.121175  , 0.114325  , 0.182941  ,
       0.071525  , 0.128225  , 0.12276875, 0.127087  , 0.2010375 ,
       0.1704745 , 0.081175  , 0.1287575 , 0.1978375 , 0.057322  ,
       0.109425  , 0.1563625 , 0.087928  , 0.1632    , 0.0708915 ,
       0.12400387, 0.1770625 , 0.1513    , 0.0046125 , 0.149899  ,
       0.1899875 , 0.1451575 , 0.0309    , 0.054433  , 0.1671375 ,
       0.02565   , 0.06285   , 0.1165875 , 0.3649625 , 0.097412  ,
       0.03582813, 0.22626   , 0.0584625 , 0.12800538, 0.1857085 ,
       0.1022    , 0.1303125 , 0.0207625 , 0.15435   , 0.18618375]),
         'test_f1': array([0.85714286, 0.75      , 0.75      , 1.        , 1.        ,
       0.85714286, 0.85714286, 0.57142857, 0.8       , 0.75      ,
       1.        , 0.85714286, 0.85714286, 0.85714286, 0.66666667,
       0.66666667, 1.        , 0.85714286, 0.75      , 0.85714286,
       0.85714286, 0.57142857, 0.85714286, 0.85714286, 0.8       ,
       0.85714286, 0.75      , 0.66666667, 1.        , 0.85714286,
       0.75      , 0.85714286, 1.        , 0.8       , 0.5       ,
       1.        , 1.        , 0.88888889, 0.4       , 0.8       ,
       1.        , 0.66666667, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.66666667]),
         'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 0.25      , 0.66666667, 0.6       ,
       1.        , 0.75      , 0.75      , 0.8       , 0.46666667,
       0.5       , 1.        , 0.75      , 0.6       , 0.8       ,
       0.75      , 0.25      , 0.75      , 0.8       , 0.66666667,
       0.75      , 0.5       , 0.5       , 1.        , 0.8       ,
       0.5       , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 0.75      , 0.13333333, 0.66666667,
       1.        , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.46666667]),
         'test_log_loss': array([0.45300246, 0.52937547, 0.81761056, 0.22074523, 0.22326013,
       0.37185148, 0.4418034 , 0.38155178, 0.38235639, 0.6745693 ,
       0.2999633 , 0.43891972, 0.37540124, 0.40219316, 0.81547771,
       0.51078577, 0.3047805 , 0.43304197, 0.66226921, 0.20558257,
       0.37530601, 0.45533344, 0.3095496 , 0.5661936 , 0.26032709,
       0.38720249, 0.52478757, 0.44125424, 0.06369347, 0.56564373,
       0.59583996, 0.45224193, 0.17350806, 0.21672837, 0.57504325,
       0.14797029, 0.25726759, 0.35909586, 1.34568016, 0.3181401 ,
       0.16892698, 0.66840323, 0.22394216, 0.40905997, 0.66656575,
       0.34535911, 0.39148153, 0.14052548, 0.60260815, 0.5327581 ]),
         'test_markedness': array([0.8       , 0.5       , 0.5       , 1.        , 1.        ,
       0.8       , 0.8       , 0.26666667, 0.83333333, 0.6       ,
       1.        , 0.8       , 0.8       , 0.75      , 0.46666667,
       0.66666667, 1.        , 0.8       , 0.6       , 0.75      ,
       0.8       , 0.26666667, 0.8       , 0.75      , 0.83333333,
       0.8       , 0.5       , 0.66666667, 1.        , 0.75      ,
       0.5       , 0.8       , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 0.8       , 0.16666667, 0.83333333,
       1.        , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.8       , 0.8       , 1.        , 0.75      , 0.46666667]),
         'test_mcc': array([0.77459667, 0.5       , 0.5       , 1.        , 1.        ,
       0.77459667, 0.77459667, 0.25819889, 0.74535599, 0.6       ,
       1.        , 0.77459667, 0.77459667, 0.77459667, 0.46666667,
       0.57735027, 1.        , 0.77459667, 0.6       , 0.77459667,
       0.77459667, 0.25819889, 0.77459667, 0.77459667, 0.74535599,
       0.77459667, 0.5       , 0.57735027, 1.        , 0.77459667,
       0.5       , 0.77459667, 1.        , 0.74535599, 0.48795004,
       1.        , 1.        , 0.77459667, 0.1490712 , 0.74535599,
       1.        , 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.46666667]),
         'test_negative_predictive_value': array([0.8       , 0.75      , 0.75      , 1.        , 1.        ,
       0.8       , 0.8       , 0.6       , 0.83333333, 1.        ,
       1.        , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 1.        ,
       0.8       , 0.6       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.75      , 0.66666667, 1.        , 1.        ,
       0.75      , 0.8       , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.66666667, 1.        , 0.83333333, 0.8       ,
       0.8       , 0.8       , 1.        , 1.        , 0.8       ]),
         'test_precision': array([1.        , 0.75      , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 1.        , 0.6       ,
       1.        , 1.        , 1.        , 0.75      , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.75      ,
       1.        , 0.66666667, 1.        , 0.75      , 1.        ,
       1.        , 0.75      , 1.        , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 0.5       , 1.        ,
       1.        , 0.6       , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 0.66666667]),
         'test_precision_recall_auc': array([0.94375   , 0.8110119 , 0.76666667, 1.        , 1.        ,
       0.94375   , 0.88392857, 0.86666667, 0.90277778, 0.76388889,
       1.        , 0.90833333, 0.94375   , 0.90277778, 0.73888889,
       0.90833333, 1.        , 0.88392857, 0.76388889, 1.        ,
       0.91517857, 0.87083333, 1.        , 0.51388889, 1.        ,
       0.90833333, 0.76666667, 0.975     , 1.        , 1.        ,
       0.73125   , 0.88392857, 1.        , 1.        , 0.78472222,
       1.        , 1.        , 0.94375   , 0.59166667, 0.90277778,
       1.        , 0.8110119 , 1.        , 0.85      , 0.76388889,
       0.94375   , 0.94375   , 1.        , 0.76388889, 0.85      ]),
         'test_roc_auc': array([0.9375    , 0.75      , 0.8125    , 1.        , 1.        ,
       0.9375    , 0.8125    , 0.875     , 0.93333333, 0.86666667,
       1.        , 0.875     , 0.9375    , 0.93333333, 0.83333333,
       0.875     , 1.        , 0.8125    , 0.86666667, 1.        ,
       0.875     , 0.875     , 1.        , 0.8       , 1.        ,
       0.875     , 0.8125    , 0.96875   , 1.        , 1.        ,
       0.75      , 0.8125    , 1.        , 1.        , 0.7       ,
       1.        , 1.        , 0.9375    , 0.6       , 0.93333333,
       1.        , 0.75      , 1.        , 0.86666667, 0.86666667,
       0.9375    , 0.9375    , 1.        , 0.86666667, 0.86666667]),
         'test_sensitivity': array([0.75      , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 0.5       , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 1.        ,
       0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 0.75, 0.75, 1.  , 1.  , 1.  , 1.  , 0.75, 1.  , 0.6 , 1.  ,
       1.  , 1.  , 0.8 , 0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 , 1.  , 0.75,
       1.  , 0.8 , 1.  , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 1.  , 0.5 , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 0.8 ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01034458, 0.00831858, 0.00785313, 0.00982708, 0.01139167,
       0.01203646, 0.01303194, 0.01320417, 0.01056875, 0.00822337,
       0.01461917, 0.01455833, 0.00875037, 0.00918108, 0.00962396,
       0.01206612, 0.01427813, 0.00970558, 0.00821667, 0.01244025,
       0.01082604, 0.01114167, 0.01564825, 0.01138646, 0.01280792,
       0.01076221, 0.01167187, 0.00834896, 0.01396979, 0.00958237,
       0.01093679, 0.00878883, 0.01223646, 0.01241092, 0.01321458,
       0.01265104, 0.01531667, 0.0105625 , 0.00460417, 0.01084492,
       0.01156018, 0.00778658, 0.01248333, 0.01047407, 0.00736369,
       0.01291979, 0.01010313, 0.01387917, 0.00923646, 0.00919393]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.07623976, 0.06363906, 0.06297095, 0.07562264, 0.07813397,
       0.07740618, 0.09638666, 0.08619041, 0.09058528, 0.06699361,
       0.10492381, 0.10411785, 0.06624728, 0.0688374 , 0.07095698,
       0.09219644, 0.10072137, 0.07143545, 0.06371471, 0.08572971,
       0.07164916, 0.08644585, 0.10876782, 0.08906445, 0.1011804 ,
       0.07846851, 0.08809591, 0.06621954, 0.09316197, 0.07257271,
       0.08673444, 0.06552942, 0.08358305, 0.08729843, 0.09309964,
       0.08833121, 0.10948138, 0.07067907, 0.0421824 , 0.07964852,
       0.08275966, 0.06150813, 0.08618899, 0.073709  , 0.06111282,
       0.09797939, 0.07032883, 0.09003933, 0.06797991, 0.07016572]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([0, 4, 1, 0, 0, 5, 5, 0, 0, 2, 3, 4, 3, 1, 0, 1, 1, 3, 0, 0, 5, 0,
       2, 0, 2, 3, 3, 0, 1, 2, 0, 0, 3, 0, 5, 0, 3, 0, 2, 5, 2, 4, 0, 4,
       1, 4, 3, 0, 2, 0]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
                          'best_inner_scores': array([0.85439132, 0.92701816, 0.94758101, 0.89082295, 0.86738604,
       0.88894368, 0.87101815, 0.79480399, 0.9172155 , 0.87935138,
       0.85041834, 0.79284986, 0.9182514 , 0.8950869 , 0.92771241,
       0.91623453, 0.85573185, 0.87000967, 0.96445771, 0.82917796,
       0.86447125, 0.91392739, 0.84137488, 0.94229823, 0.85358512,
       0.90164919, 0.88798866, 0.91064161, 0.83366722, 0.87601245,
       0.9524557 , 0.84039487, 0.86486139, 0.8172269 , 0.88585688,
       0.8199447 , 0.84415986, 0.86100786, 0.97530887, 0.86786344,
       0.83195226, 0.89341863, 0.83643229, 0.87185534, 0.93458699,
       0.88275179, 0.84741872, 0.80666627, 0.93427451, 0.8763544 ]),
                          'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [100, 500, 1000]},
                          'max_ncv_average_precision': 0.8568222446217273,
                          'max_ncv_balanced_accuracy': 0.8712121212121212,
                          'max_ncv_brier_loss': 0.1468934,
                          'max_ncv_f1': 0.8571428571428571,
                          'max_ncv_informedness': 0.7424242424242424,
                          'max_ncv_log_loss': 1.172878970983146,
                          'max_ncv_markedness': 0.7733333333333334,
                          'max_ncv_mcc': 0.7525489793561388,
                          'max_ncv_negative_predictive_value': 0.8695652173913043,
                          'max_ncv_precision': 0.9333333333333333,
                          'max_ncv_precision_recall_auc': 0.8494928351498229,
                          'max_ncv_roc_auc': 0.904040404040404,
                          'max_ncv_sensitivity': 0.8333333333333334,
                          'max_ncv_specificity': 0.9545454545454546,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.3599125,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 4.498160506707352,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.015602083333333336,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.10744815121330038,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.8310396475881741,
                          'mean_ncv_balanced_accuracy': 0.8421717171717173,
                          'mean_ncv_brier_loss': 0.12907540999999997,
                          'mean_ncv_f1': 0.8228444104914694,
                          'mean_ncv_informedness': 0.6843434343434344,
                          'mean_ncv_log_loss': 0.5214784323618457,
                          'mean_ncv_markedness': 0.7015776951096646,
                          'mean_ncv_mcc': 0.6928651556401288,
                          'mean_ncv_negative_predictive_value': 0.83932279314888,
                          'mean_ncv_precision': 0.8622549019607841,
                          'mean_ncv_precision_recall_auc': 0.8174501177630583,
                          'mean_ncv_roc_auc': 0.8869949494949495,
                          'mean_ncv_sensitivity': 0.788888888888889,
                          'mean_ncv_specificity': 0.8954545454545453,
                          'mean_test_average_precision': 0.9012817460317462,
                          'mean_test_balanced_accuracy': 0.8453333333333333,
                          'mean_test_brier_loss': 0.12907541,
                          'mean_test_f1': 0.8135079365079363,
                          'mean_test_informedness': 0.6906666666666667,
                          'mean_test_log_loss': 0.5214784323618457,
                          'mean_test_markedness': 0.7349523809523809,
                          'mean_test_mcc': 0.7110837709716971,
                          'mean_test_negative_predictive_value': 0.8549523809523809,
                          'mean_test_precision': 0.8799999999999999,
                          'mean_test_precision_recall_auc': 0.8839722222222223,
                          'mean_test_roc_auc': 0.8952500000000001,
                          'mean_test_sensitivity': 0.7916666666666667,
                          'mean_test_specificity': 0.8989999999999998,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.010991196875,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.08097404841291876,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.8044896685256162,
                          'min_ncv_balanced_accuracy': 0.8156565656565656,
                          'min_ncv_brier_loss': 0.12032239999999998,
                          'min_ncv_f1': 0.7878787878787877,
                          'min_ncv_informedness': 0.6313131313131313,
                          'min_ncv_log_loss': 0.41228828574006976,
                          'min_ncv_markedness': 0.6496163682864449,
                          'min_ncv_mcc': 0.6455022270395531,
                          'min_ncv_negative_predictive_value': 0.8,
                          'min_ncv_precision': 0.8235294117647058,
                          'min_ncv_precision_recall_auc': 0.7817496900340037,
                          'min_ncv_roc_auc': 0.8674242424242423,
                          'min_ncv_sensitivity': 0.7222222222222222,
                          'min_ncv_specificity': 0.8636363636363636,
                          'min_test_average_precision': 0.5916666666666666,
                          'min_test_balanced_accuracy': 0.5666666666666667,
                          'min_test_brier_loss': 0.005466499999999999,
                          'min_test_f1': 0.4,
                          'min_test_informedness': 0.1333333333333333,
                          'min_test_log_loss': 0.06917237220077285,
                          'min_test_markedness': 0.16666666666666652,
                          'min_test_mcc': 0.14907119849998599,
                          'min_test_negative_predictive_value': 0.6,
                          'min_test_precision': 0.5,
                          'min_test_precision_recall_auc': 0.40555555555555556,
                          'min_test_roc_auc': 0.4666666666666667,
                          'min_test_sensitivity': 0.3333333333333333,
                          'min_test_specificity': 0.5,
                          'min_train_average_precision': 0.9999999999999999,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.00520584375,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.04736672350827878,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999999,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.83530077, 0.80448967, 0.81230097, 0.84283775, 0.80904944,
       0.85682224, 0.84824637, 0.82384205, 0.85440083, 0.82310637]),
                          'ncv_balanced_accuracy': array([0.84343434, 0.84848485, 0.81565657, 0.84848485, 0.82070707,
       0.81565657, 0.86616162, 0.87121212, 0.84848485, 0.84343434]),
                          'ncv_brier_loss': array([0.1275739 , 0.1468934 , 0.137204  , 0.1225541 , 0.1203224 ,
       0.13096437, 0.1225471 , 0.129778  , 0.1246595 , 0.12825733]),
                          'ncv_f1': array([0.82352941, 0.83333333, 0.78787879, 0.83333333, 0.8       ,
       0.78787879, 0.84848485, 0.85714286, 0.83333333, 0.82352941]),
                          'ncv_informedness': array([0.68686869, 0.6969697 , 0.63131313, 0.6969697 , 0.64141414,
       0.63131313, 0.73232323, 0.74242424, 0.6969697 , 0.68686869]),
                          'ncv_log_loss': array([0.45226644, 0.48606524, 0.48318774, 0.41228829, 1.17287897,
       0.43284699, 0.42821345, 0.48366967, 0.4215462 , 0.44182134]),
                          'ncv_markedness': array([0.70833333, 0.6969697 , 0.66666667, 0.6969697 , 0.64961637,
       0.66666667, 0.77333333, 0.75191816, 0.6969697 , 0.70833333]),
                          'ncv_mcc': array([0.69751845, 0.6969697 , 0.64874912, 0.6969697 , 0.64550223,
       0.64874912, 0.75254898, 0.74715612, 0.6969697 , 0.69751845]),
                          'ncv_negative_predictive_value': array([0.83333333, 0.86363636, 0.8       , 0.86363636, 0.82608696,
       0.8       , 0.84      , 0.86956522, 0.86363636, 0.83333333]),
                          'ncv_precision': array([0.875     , 0.83333333, 0.86666667, 0.83333333, 0.82352941,
       0.86666667, 0.93333333, 0.88235294, 0.83333333, 0.875     ]),
                          'ncv_precision_recall_auc': array([0.82145911, 0.78955261, 0.79891709, 0.83974849, 0.78174969,
       0.84949284, 0.83254869, 0.80600298, 0.84568704, 0.80934265]),
                          'ncv_roc_auc': array([0.89520202, 0.87121212, 0.86742424, 0.90025253, 0.89646465,
       0.89393939, 0.9040404 , 0.86868687, 0.89772727, 0.875     ]),
                          'ncv_sensitivity': array([0.77777778, 0.83333333, 0.72222222, 0.83333333, 0.77777778,
       0.72222222, 0.77777778, 0.83333333, 0.83333333, 0.77777778]),
                          'ncv_specificity': array([0.90909091, 0.86363636, 0.90909091, 0.86363636, 0.86363636,
       0.90909091, 0.95454545, 0.90909091, 0.86363636, 0.90909091]),
                          'ranked_best_inner_params': [{'frequency': 19, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
                          'std_ncv_average_precision': 0.01920145265486633,
                          'std_ncv_balanced_accuracy': 0.019460653235179957,
                          'std_ncv_brier_loss': 0.007970794750666341,
                          'std_ncv_f1': 0.023879007712294814,
                          'std_ncv_informedness': 0.038921306470359913,
                          'std_ncv_log_loss': 0.23047555108752488,
                          'std_ncv_markedness': 0.03797009263644285,
                          'std_ncv_mcc': 0.03762270587676936,
                          'std_ncv_negative_predictive_value': 0.025880088257129147,
                          'std_ncv_precision': 0.033046956418842095,
                          'std_ncv_precision_recall_auc': 0.02394054806184756,
                          'std_ncv_roc_auc': 0.0145217268510826,
                          'std_ncv_sensitivity': 0.04382281320814532,
                          'std_ncv_specificity': 0.030679479895934218,
                          'std_test_average_precision': 0.10793431365852538,
                          'std_test_balanced_accuracy': 0.12056367988341049,
                          'std_test_brier_loss': 0.06580164335661011,
                          'std_test_f1': 0.14941043686154573,
                          'std_test_informedness': 0.24112735976682098,
                          'std_test_log_loss': 0.6152717443495468,
                          'std_test_markedness': 0.22738823580599068,
                          'std_test_mcc': 0.23184559204158628,
                          'std_test_negative_predictive_value': 0.13794925429522628,
                          'std_test_precision': 0.16235930591649828,
                          'std_test_precision_recall_auc': 0.1352818127620343,
                          'std_test_roc_auc': 0.10815988862760771,
                          'std_test_sensitivity': 0.20499018283003054,
                          'std_test_specificity': 0.14123724432200407,
                          'std_train_average_precision': 6.344131569286608e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.002465865103968506,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.014449619236926337,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 6.344131569286608e-17,
                          'std_train_roc_auc': 2.74708955197652e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([0.95      , 0.83035714, 0.80416667, 1.        , 1.        ,
       0.95      , 0.89285714, 1.        , 0.83333333, 0.80555556,
       1.        , 0.95      , 0.89285714, 0.91666667, 0.80555556,
       1.        , 1.        , 0.875     , 0.63888889, 1.        ,
       0.89285714, 0.85416667, 1.        , 0.63888889, 0.91666667,
       0.91666667, 0.80416667, 0.95      , 1.        , 1.        ,
       0.80416667, 0.875     , 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.95      , 0.59166667, 1.        ,
       1.        , 0.89285714, 1.        , 0.86666667, 0.80555556,
       0.95      , 0.89285714, 1.        , 0.80555556, 0.64444444]),
                          'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 1.        , 1.        ,
       0.875     , 0.875     , 0.875     , 0.83333333, 0.8       ,
       0.875     , 0.875     , 0.75      , 0.9       , 0.73333333,
       0.75      , 1.        , 0.875     , 0.8       , 0.9       ,
       0.875     , 0.625     , 1.        , 0.8       , 0.83333333,
       0.875     , 0.625     , 0.75      , 1.        , 0.9       ,
       0.75      , 0.875     , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 0.875     , 0.56666667, 0.83333333,
       1.        , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.75      , 1.        , 0.9       , 0.73333333]),
                          'test_brier_loss': array([0.14095   , 0.2041355 , 0.2043215 , 0.0442625 , 0.0442    ,
       0.15625025, 0.13918375, 0.1063375 , 0.1405    , 0.1921955 ,
       0.0831625 , 0.1258535 , 0.1523    , 0.1250165 , 0.1996875 ,
       0.1678675 , 0.053603  , 0.1469875 , 0.187525  , 0.0567875 ,
       0.13017525, 0.1573875 , 0.06038388, 0.1733    , 0.08036537,
       0.147125  , 0.1975875 , 0.153175  , 0.0054665 , 0.15146788,
       0.1854375 , 0.159875  , 0.0717625 , 0.0460625 , 0.149598  ,
       0.023625  , 0.0522375 , 0.1178375 , 0.3599125 , 0.0952775 ,
       0.0352315 , 0.202422  , 0.0682625 , 0.135008  , 0.1823735 ,
       0.10892   , 0.16935   , 0.02175   , 0.14114162, 0.200125  ]),
                          'test_f1': array([0.85714286, 0.57142857, 0.75      , 1.        , 1.        ,
       0.85714286, 0.85714286, 0.88888889, 0.8       , 0.75      ,
       0.85714286, 0.85714286, 0.66666667, 0.85714286, 0.66666667,
       0.66666667, 1.        , 0.85714286, 0.75      , 0.85714286,
       0.85714286, 0.57142857, 1.        , 0.75      , 0.8       ,
       0.85714286, 0.57142857, 0.66666667, 1.        , 0.85714286,
       0.75      , 0.85714286, 1.        , 1.        , 0.5       ,
       1.        , 1.        , 0.88888889, 0.4       , 0.8       ,
       1.        , 0.66666667, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.66666667, 1.        , 0.85714286, 0.66666667]),
                          'test_informedness': array([0.75      , 0.25      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.6       ,
       0.75      , 0.75      , 0.5       , 0.8       , 0.46666667,
       0.5       , 1.        , 0.75      , 0.6       , 0.8       ,
       0.75      , 0.25      , 1.        , 0.6       , 0.66666667,
       0.75      , 0.25      , 0.5       , 1.        , 0.8       ,
       0.5       , 0.75      , 1.        , 1.        , 0.33333333,
       1.        , 1.        , 0.75      , 0.13333333, 0.66666667,
       1.        , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.5       , 1.        , 0.8       , 0.46666667]),
                          'test_log_loss': array([0.43987876, 0.61429834, 0.81341735, 0.20459797, 0.1891398 ,
       0.49953279, 0.44208877, 0.34504806, 0.42486931, 0.71878727,
       0.32228969, 0.42651393, 0.46697028, 0.3985195 , 0.80164529,
       0.47725779, 0.22487482, 0.4901189 , 0.6721302 , 0.19705972,
       0.43500149, 0.45219014, 0.22479245, 4.49816051, 0.25425028,
       0.46783942, 0.56174293, 0.45857124, 0.06917237, 0.60690899,
       0.691045  , 0.51032189, 0.28167421, 0.19599628, 0.46202987,
       0.13171368, 0.23265076, 0.3618502 , 1.35404562, 0.33808807,
       0.16730919, 0.61113028, 0.25533567, 0.43448146, 0.63947439,
       0.37147358, 0.58051868, 0.14252486, 0.54603866, 0.56855092]),
                          'test_markedness': array([0.8       , 0.26666667, 0.5       , 1.        , 1.        ,
       0.8       , 0.8       , 0.8       , 0.83333333, 0.6       ,
       0.8       , 0.8       , 0.66666667, 0.75      , 0.46666667,
       0.66666667, 1.        , 0.8       , 0.6       , 0.75      ,
       0.8       , 0.26666667, 1.        , 0.6       , 0.83333333,
       0.8       , 0.26666667, 0.66666667, 1.        , 0.75      ,
       0.5       , 0.8       , 1.        , 1.        , 0.71428571,
       1.        , 1.        , 0.8       , 0.16666667, 0.83333333,
       1.        , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.8       , 0.66666667, 1.        , 0.75      , 0.46666667]),
                          'test_mcc': array([0.77459667, 0.25819889, 0.5       , 1.        , 1.        ,
       0.77459667, 0.77459667, 0.77459667, 0.74535599, 0.6       ,
       0.77459667, 0.77459667, 0.57735027, 0.77459667, 0.46666667,
       0.57735027, 1.        , 0.77459667, 0.6       , 0.77459667,
       0.77459667, 0.25819889, 1.        , 0.6       , 0.74535599,
       0.77459667, 0.25819889, 0.57735027, 1.        , 0.77459667,
       0.5       , 0.77459667, 1.        , 1.        , 0.48795004,
       1.        , 1.        , 0.77459667, 0.1490712 , 0.74535599,
       1.        , 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.57735027, 1.        , 0.77459667, 0.46666667]),
                          'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 1.        , 1.        ,
       0.8       , 0.8       , 1.        , 0.83333333, 1.        ,
       0.8       , 0.8       , 0.66666667, 1.        , 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 1.        ,
       0.8       , 0.6       , 1.        , 1.        , 0.83333333,
       0.8       , 0.6       , 0.66666667, 1.        , 1.        ,
       0.75      , 0.8       , 1.        , 1.        , 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.66666667, 1.        , 0.83333333, 0.8       ,
       0.8       , 0.66666667, 1.        , 1.        , 0.8       ]),
                          'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 1.        , 0.6       ,
       1.        , 1.        , 1.        , 0.75      , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.75      ,
       1.        , 0.66666667, 1.        , 0.6       , 1.        ,
       1.        , 0.66666667, 1.        , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 0.5       , 1.        ,
       1.        , 0.6       , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 0.66666667]),
                          'test_precision_recall_auc': array([0.94375   , 0.8110119 , 0.76666667, 1.        , 1.        ,
       0.94375   , 0.88392857, 1.        , 0.81666667, 0.76388889,
       1.        , 0.94375   , 0.88392857, 0.90277778, 0.76388889,
       1.        , 1.        , 0.86607143, 0.68055556, 1.        ,
       0.88392857, 0.83541667, 1.        , 0.51388889, 0.90277778,
       0.90833333, 0.76666667, 0.94375   , 1.        , 1.        ,
       0.76666667, 0.86607143, 1.        , 1.        , 0.85      ,
       1.        , 1.        , 0.94375   , 0.55178571, 1.        ,
       1.        , 0.88392857, 1.        , 0.85      , 0.76388889,
       0.94375   , 0.88392857, 1.        , 0.76388889, 0.40555556]),
                          'test_roc_auc': array([0.9375    , 0.75      , 0.8125    , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 0.8       , 0.86666667,
       1.        , 0.9375    , 0.8125    , 0.93333333, 0.86666667,
       1.        , 1.        , 0.75      , 0.83333333, 1.        ,
       0.8125    , 0.8125    , 1.        , 0.8       , 0.93333333,
       0.875     , 0.8125    , 0.9375    , 1.        , 1.        ,
       0.8125    , 0.75      , 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.9375    , 0.46666667, 1.        ,
       1.        , 0.8125    , 1.        , 0.86666667, 0.86666667,
       0.9375    , 0.8125    , 1.        , 0.86666667, 0.73333333]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.5       , 1.        , 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 1.        ,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667,
       0.75      , 0.5       , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 1.        , 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 0.75, 0.75, 1.  , 1.  , 1.  , 1.  , 0.75, 1.  , 0.6 , 1.  ,
       1.  , 1.  , 0.8 , 0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 , 1.  , 0.75,
       1.  , 0.6 , 1.  , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 1.  , 0.5 , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 0.8 ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.01076771, 0.00996287, 0.00766592, 0.01175625, 0.01199583,
       0.01256835, 0.01320361, 0.01243125, 0.00738958, 0.00751067,
       0.01560208, 0.01397483, 0.01135417, 0.00929129, 0.00865417,
       0.00931842, 0.00998404, 0.0139875 , 0.00725729, 0.01335104,
       0.01344547, 0.00865938, 0.01150194, 0.00947813, 0.00969571,
       0.01425729, 0.01257083, 0.00939583, 0.01231317, 0.0090403 ,
       0.00643437, 0.00812396, 0.01354687, 0.01355417, 0.01293343,
       0.01293646, 0.0146125 , 0.00983958, 0.00520584, 0.01337659,
       0.01119166, 0.00958887, 0.01266458, 0.013596  , 0.00868383,
       0.01251837, 0.01113437, 0.01389375, 0.00854385, 0.00879583]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.07580771, 0.07927039, 0.06365455, 0.07765511, 0.08235034,
       0.0922534 , 0.09658595, 0.08764883, 0.06367729, 0.06518642,
       0.10744815, 0.1017898 , 0.08775049, 0.06977291, 0.06651104,
       0.07033851, 0.07556718, 0.09712361, 0.06316672, 0.08612179,
       0.09713496, 0.06984608, 0.08385969, 0.06931028, 0.07431109,
       0.09988981, 0.0904732 , 0.07010179, 0.08997065, 0.07019927,
       0.05500967, 0.06068936, 0.09946868, 0.08707174, 0.09467766,
       0.08765433, 0.1057857 , 0.07103102, 0.04736672, 0.0993657 ,
       0.08099083, 0.07779752, 0.08729407, 0.09786164, 0.06550297,
       0.09537756, 0.08450336, 0.09478614, 0.06714065, 0.06455006]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([2, 0, 0, 0, 0, 2, 3, 0, 0, 2, 0, 4, 3, 1, 2, 1, 1, 0, 0, 5, 1, 5,
       2, 2, 0, 4, 2, 0, 1, 0, 2, 1, 0, 0, 5, 5, 5, 0, 3, 1, 2, 4, 2, 4,
       1, 0, 5, 2, 2, 0]),
             'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
             'best_inner_scores': array([0.86750441, 0.93474427, 0.93628748, 0.89281046, 0.89237473,
       0.92350088, 0.88205467, 0.8106261 , 0.90675381, 0.86666667,
       0.89594356, 0.84171076, 0.91820988, 0.92854031, 0.90762527,
       0.90806878, 0.88932981, 0.88315697, 0.96623094, 0.8416122 ,
       0.90145503, 0.91049383, 0.86022928, 0.9416122 , 0.91089325,
       0.91820988, 0.9047619 , 0.91181658, 0.83572985, 0.8664488 ,
       0.93518519, 0.86706349, 0.90013228, 0.80326797, 0.90087146,
       0.81481481, 0.86816578, 0.89528219, 0.97363834, 0.88496732,
       0.84898589, 0.89153439, 0.8595679 , 0.86666667, 0.90283224,
       0.90321869, 0.87411817, 0.84766314, 0.92527233, 0.86688453]),
             'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [1000, 100, 500]},
             'max_ncv_average_precision': 0.870969450807473,
             'max_ncv_balanced_accuracy': 0.8712121212121212,
             'max_ncv_brier_loss': 0.131842675,
             'max_ncv_f1': 0.8571428571428571,
             'max_ncv_informedness': 0.7424242424242424,
             'max_ncv_log_loss': 0.4577723241428922,
             'max_ncv_markedness': 0.7519181585677748,
             'max_ncv_mcc': 0.74715612106153,
             'max_ncv_negative_predictive_value': 0.8695652173913043,
             'max_ncv_precision': 0.9285714285714286,
             'max_ncv_precision_recall_auc': 0.863999554196343,
             'max_ncv_roc_auc': 0.9090909090909091,
             'max_ncv_sensitivity': 0.8333333333333334,
             'max_ncv_specificity': 0.9545454545454546,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.3187625,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 0.9604235663793153,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.014937406250000002,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.10810091356183764,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.8336956212365253,
             'mean_ncv_balanced_accuracy': 0.8522727272727272,
             'mean_ncv_brier_loss': 0.12534559,
             'mean_ncv_f1': 0.8342675706646295,
             'mean_ncv_informedness': 0.7045454545454545,
             'mean_ncv_log_loss': 0.4288286216153603,
             'mean_ncv_markedness': 0.7221209097807563,
             'mean_ncv_mcc': 0.7132239050471687,
             'mean_ncv_negative_predictive_value': 0.8479892571196919,
             'mean_ncv_precision': 0.8741316526610646,
             'mean_ncv_precision_recall_auc': 0.8210809768038093,
             'mean_ncv_roc_auc': 0.8904040404040403,
             'mean_ncv_sensitivity': 0.7999999999999999,
             'mean_ncv_specificity': 0.9045454545454545,
             'mean_test_average_precision': 0.904063492063492,
             'mean_test_balanced_accuracy': 0.8526666666666667,
             'mean_test_brier_loss': 0.12534558999999998,
             'mean_test_f1': 0.8223174603174602,
             'mean_test_informedness': 0.7053333333333334,
             'mean_test_log_loss': 0.42882862161536023,
             'mean_test_markedness': 0.7517142857142858,
             'mean_test_mcc': 0.7263243505956716,
             'mean_test_negative_predictive_value': 0.8623809523809524,
             'mean_test_precision': 0.8893333333333332,
             'mean_test_precision_recall_auc': 0.884406746031746,
             'mean_test_roc_auc': 0.900375,
             'mean_test_sensitivity': 0.7983333333333333,
             'mean_test_specificity': 0.9069999999999999,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.010544080625,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.07889152039236659,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.8093454626951357,
             'min_ncv_balanced_accuracy': 0.8156565656565656,
             'min_ncv_brier_loss': 0.11493357500000001,
             'min_ncv_f1': 0.7878787878787877,
             'min_ncv_informedness': 0.6313131313131313,
             'min_ncv_log_loss': 0.41355581486024207,
             'min_ncv_markedness': 0.6666666666666667,
             'min_ncv_mcc': 0.6487491201346025,
             'min_ncv_negative_predictive_value': 0.8,
             'min_ncv_precision': 0.8333333333333334,
             'min_ncv_precision_recall_auc': 0.7909933217456662,
             'min_ncv_roc_auc': 0.8699494949494949,
             'min_ncv_sensitivity': 0.7222222222222222,
             'min_ncv_specificity': 0.8636363636363636,
             'min_test_average_precision': 0.5916666666666666,
             'min_test_balanced_accuracy': 0.5666666666666667,
             'min_test_brier_loss': 0.005374500000000001,
             'min_test_f1': 0.4,
             'min_test_informedness': 0.1333333333333333,
             'min_test_log_loss': 0.06614973009735522,
             'min_test_markedness': 0.16666666666666652,
             'min_test_mcc': 0.14907119849998599,
             'min_test_negative_predictive_value': 0.5714285714285714,
             'min_test_precision': 0.5,
             'min_test_precision_recall_auc': 0.40555555555555556,
             'min_test_roc_auc': 0.5333333333333333,
             'min_test_sensitivity': 0.25,
             'min_test_specificity': 0.6,
             'min_train_average_precision': 0.9999999999999999,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.007076041666666667,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.05635304245361439,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999999,
             'min_train_roc_auc': 0.9999999999999999,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.83229158, 0.82763408, 0.83053815, 0.8464338 , 0.81814832,
       0.87096945, 0.83716392, 0.83796381, 0.82646764, 0.80934546]),
             'ncv_balanced_accuracy': array([0.87121212, 0.84848485, 0.87121212, 0.84343434, 0.84343434,
       0.81565657, 0.83838384, 0.87121212, 0.87121212, 0.84848485]),
             'ncv_brier_loss': array([0.12855842, 0.1286391 , 0.12169143, 0.12437825, 0.11493358,
       0.1289823 , 0.11951185, 0.1279547 , 0.1269636 , 0.13184267]),
             'ncv_f1': array([0.85714286, 0.83333333, 0.85714286, 0.82352941, 0.82352941,
       0.78787879, 0.8125    , 0.85714286, 0.85714286, 0.83333333]),
             'ncv_informedness': array([0.74242424, 0.6969697 , 0.74242424, 0.68686869, 0.68686869,
       0.63131313, 0.67676768, 0.74242424, 0.74242424, 0.6969697 ]),
             'ncv_log_loss': array([0.45777232, 0.43556922, 0.43862357, 0.41355581, 0.42118914,
       0.41431148, 0.41662189, 0.42167496, 0.42926612, 0.43970171]),
             'ncv_markedness': array([0.75191816, 0.6969697 , 0.75191816, 0.70833333, 0.70833333,
       0.66666667, 0.73626374, 0.75191816, 0.75191816, 0.6969697 ]),
             'ncv_mcc': array([0.74715612, 0.6969697 , 0.74715612, 0.69751845, 0.69751845,
       0.64874912, 0.70588915, 0.74715612, 0.74715612, 0.6969697 ]),
             'ncv_negative_predictive_value': array([0.86956522, 0.86363636, 0.86956522, 0.83333333, 0.83333333,
       0.8       , 0.80769231, 0.86956522, 0.86956522, 0.86363636]),
             'ncv_precision': array([0.88235294, 0.83333333, 0.88235294, 0.875     , 0.875     ,
       0.86666667, 0.92857143, 0.88235294, 0.88235294, 0.83333333]),
             'ncv_precision_recall_auc': array([0.81902614, 0.81265873, 0.81693604, 0.83689781, 0.79099332,
       0.86399955, 0.82453513, 0.83827694, 0.81219525, 0.79529085]),
             'ncv_roc_auc': array([0.89015152, 0.89393939, 0.89141414, 0.88888889, 0.90909091,
       0.89646465, 0.89772727, 0.87752525, 0.88888889, 0.86994949]),
             'ncv_sensitivity': array([0.83333333, 0.83333333, 0.83333333, 0.77777778, 0.77777778,
       0.72222222, 0.72222222, 0.83333333, 0.83333333, 0.83333333]),
             'ncv_specificity': array([0.90909091, 0.86363636, 0.90909091, 0.90909091, 0.90909091,
       0.90909091, 0.95454545, 0.90909091, 0.90909091, 0.86363636]),
             'ranked_best_inner_params': [{'frequency': 17, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}}],
             'std_ncv_average_precision': 0.016724638943729615,
             'std_ncv_balanced_accuracy': 0.018718313095906637,
             'std_ncv_brier_loss': 0.005193628025459014,
             'std_ncv_f1': 0.02345497563592842,
             'std_ncv_informedness': 0.037436626191813274,
             'std_ncv_log_loss': 0.014142438446586211,
             'std_ncv_markedness': 0.030681261566318306,
             'std_ncv_mcc': 0.033062397000007876,
             'std_ncv_negative_predictive_value': 0.027301113667502624,
             'std_ncv_precision': 0.027121716044156117,
             'std_ncv_precision_recall_auc': 0.021451494966308937,
             'std_ncv_roc_auc': 0.01075993345540389,
             'std_ncv_sensitivity': 0.04684855792842046,
             'std_ncv_specificity': 0.02580210055443394,
             'std_test_average_precision': 0.10253310356930513,
             'std_test_balanced_accuracy': 0.11246617027258603,
             'std_test_brier_loss': 0.06270195973682699,
             'std_test_f1': 0.14777045852137907,
             'std_test_informedness': 0.22493234054517205,
             'std_test_log_loss': 0.19815311268043503,
             'std_test_markedness': 0.20683966283010702,
             'std_test_mcc': 0.21345018806336777,
             'std_test_negative_predictive_value': 0.12472376808651038,
             'std_test_precision': 0.1503118451541687,
             'std_test_precision_recall_auc': 0.1333277996957483,
             'std_test_roc_auc': 0.10042223253550464,
             'std_test_sensitivity': 0.1978412405505612,
             'std_test_specificity': 0.12536070406011995,
             'std_train_average_precision': 8.392497208503151e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.0020828481690528277,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.012801247758333597,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 8.392497208503151e-17,
             'std_train_roc_auc': 3.546477361781819e-17,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([0.95      , 0.83035714, 0.80416667, 1.        , 1.        ,
       0.95      , 0.91666667, 1.        , 0.91666667, 0.80555556,
       1.        , 0.95      , 0.91666667, 0.91666667, 0.80555556,
       1.        , 1.        , 0.89285714, 0.83333333, 1.        ,
       0.91666667, 0.85416667, 1.        , 0.63888889, 0.91666667,
       0.91666667, 0.77083333, 0.95      , 1.        , 1.        ,
       0.77083333, 0.89285714, 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.95      , 0.59166667, 0.91666667,
       1.        , 0.83035714, 1.        , 0.83333333, 0.80555556,
       0.95      , 0.89285714, 1.        , 0.80555556, 0.64444444]),
             'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 1.        ,
       0.875     , 0.875     , 0.875     , 0.83333333, 0.8       ,
       1.        , 0.875     , 0.875     , 0.9       , 0.73333333,
       0.75      , 1.        , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.625     , 1.        , 0.9       , 0.83333333,
       0.875     , 0.75      , 0.625     , 1.        , 0.9       ,
       0.75      , 0.875     , 1.        , 0.83333333, 0.66666667,
       1.        , 1.        , 0.875     , 0.56666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.83333333, 0.73333333,
       0.75      , 0.875     , 1.        , 0.9       , 0.73333333]),
             'test_brier_loss': array([0.15011713, 0.178725  , 0.1972875 , 0.0512625 , 0.0654    ,
       0.1251245 , 0.1222875 , 0.0891625 , 0.1203375 , 0.1862835 ,
       0.0300625 , 0.1217705 , 0.1319625 , 0.1260595 , 0.19860213,
       0.165831  , 0.05781   , 0.1235125 , 0.198175  , 0.07656275,
       0.1127745 , 0.15633375, 0.05803862, 0.163096  , 0.084425  ,
       0.1486825 , 0.181042  , 0.1661125 , 0.0053745 , 0.1437    ,
       0.19264913, 0.1453635 , 0.0378375 , 0.0679375 , 0.15377163,
       0.04462613, 0.06268337, 0.1214875 , 0.3187625 , 0.092214  ,
       0.0342575 , 0.2098775 , 0.05608   , 0.1488645 , 0.1857385 ,
       0.1097875 , 0.16789525, 0.01854825, 0.14386987, 0.2191125 ]),
             'test_f1': array([0.85714286, 0.75      , 0.75      , 1.        , 1.        ,
       0.85714286, 0.85714286, 0.88888889, 0.8       , 0.75      ,
       1.        , 0.85714286, 0.85714286, 0.85714286, 0.66666667,
       0.66666667, 1.        , 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.57142857, 1.        , 0.85714286, 0.8       ,
       0.85714286, 0.75      , 0.4       , 1.        , 0.85714286,
       0.75      , 0.85714286, 1.        , 0.8       , 0.5       ,
       1.        , 1.        , 0.88888889, 0.4       , 0.8       ,
       1.        , 0.75      , 1.        , 0.8       , 0.66666667,
       0.75      , 0.85714286, 1.        , 0.85714286, 0.66666667]),
             'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.6       ,
       1.        , 0.75      , 0.75      , 0.8       , 0.46666667,
       0.5       , 1.        , 0.75      , 0.6       , 0.66666667,
       0.75      , 0.25      , 1.        , 0.8       , 0.66666667,
       0.75      , 0.5       , 0.25      , 1.        , 0.8       ,
       0.5       , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 0.75      , 0.13333333, 0.66666667,
       1.        , 0.5       , 1.        , 0.66666667, 0.46666667,
       0.5       , 0.75      , 1.        , 0.8       , 0.46666667]),
             'test_log_loss': array([0.46702312, 0.52956646, 0.82053302, 0.23146618, 0.24027285,
       0.3943187 , 0.39235109, 0.31675631, 0.37270234, 0.70171765,
       0.16929121, 0.4066607 , 0.42358956, 0.40166518, 0.79191123,
       0.46558877, 0.23711822, 0.41240761, 0.66889015, 0.28377433,
       0.38075043, 0.4576206 , 0.21752195, 0.79175343, 0.25829929,
       0.47761088, 0.51620451, 0.48943626, 0.06614973, 0.52215602,
       0.72835992, 0.44334628, 0.18287478, 0.25661367, 0.47191477,
       0.21803594, 0.25553328, 0.37803003, 0.96042357, 0.29635197,
       0.16593041, 0.62869963, 0.23278662, 0.46885151, 0.65006243,
       0.35445263, 0.55919728, 0.13394286, 0.54336132, 0.60755444]),
             'test_markedness': array([0.8       , 0.5       , 0.5       , 1.        , 1.        ,
       0.8       , 0.8       , 0.8       , 0.83333333, 0.6       ,
       1.        , 0.8       , 0.8       , 0.75      , 0.46666667,
       0.66666667, 1.        , 0.8       , 0.6       , 0.83333333,
       0.8       , 0.26666667, 1.        , 0.75      , 0.83333333,
       0.8       , 0.5       , 0.57142857, 1.        , 0.75      ,
       0.5       , 0.8       , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 0.8       , 0.16666667, 0.83333333,
       1.        , 0.5       , 1.        , 0.83333333, 0.46666667,
       0.5       , 0.8       , 1.        , 0.75      , 0.46666667]),
             'test_mcc': array([0.77459667, 0.5       , 0.5       , 1.        , 1.        ,
       0.77459667, 0.77459667, 0.77459667, 0.74535599, 0.6       ,
       1.        , 0.77459667, 0.77459667, 0.77459667, 0.46666667,
       0.57735027, 1.        , 0.77459667, 0.6       , 0.74535599,
       0.77459667, 0.25819889, 1.        , 0.77459667, 0.74535599,
       0.77459667, 0.5       , 0.37796447, 1.        , 0.77459667,
       0.5       , 0.77459667, 1.        , 0.74535599, 0.48795004,
       1.        , 1.        , 0.77459667, 0.1490712 , 0.74535599,
       1.        , 0.5       , 1.        , 0.74535599, 0.46666667,
       0.5       , 0.77459667, 1.        , 0.77459667, 0.46666667]),
             'test_negative_predictive_value': array([0.8       , 0.75      , 0.75      , 1.        , 1.        ,
       0.8       , 0.8       , 1.        , 0.83333333, 1.        ,
       1.        , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 0.83333333,
       0.8       , 0.6       , 1.        , 1.        , 0.83333333,
       0.8       , 0.75      , 0.57142857, 1.        , 1.        ,
       0.75      , 0.8       , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.83333333, 0.8       ,
       0.75      , 0.8       , 1.        , 1.        , 0.8       ]),
             'test_precision': array([1.        , 0.75      , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 1.        , 0.6       ,
       1.        , 1.        , 1.        , 0.75      , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 0.66666667, 1.        , 0.75      , 1.        ,
       1.        , 0.75      , 1.        , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 0.5       , 1.        ,
       1.        , 0.75      , 1.        , 1.        , 0.66666667,
       0.75      , 1.        , 1.        , 0.75      , 0.66666667]),
             'test_precision_recall_auc': array([0.94375   , 0.8235119 , 0.76666667, 1.        , 1.        ,
       0.94375   , 0.90833333, 1.        , 0.90277778, 0.76388889,
       1.        , 0.94375   , 0.90833333, 0.90277778, 0.76388889,
       1.        , 1.        , 0.88392857, 0.75      , 1.        ,
       0.90833333, 0.83541667, 1.        , 0.51388889, 0.90277778,
       0.90833333, 0.73125   , 0.94375   , 1.        , 1.        ,
       0.73125   , 0.88392857, 1.        , 1.        , 0.85      ,
       1.        , 1.        , 0.94375   , 0.57083333, 0.90277778,
       1.        , 0.8110119 , 1.        , 0.81666667, 0.76388889,
       0.94375   , 0.88392857, 1.        , 0.76388889, 0.40555556]),
             'test_roc_auc': array([0.9375    , 0.78125   , 0.8125    , 1.        , 1.        ,
       0.9375    , 0.875     , 1.        , 0.93333333, 0.86666667,
       1.        , 0.9375    , 0.875     , 0.93333333, 0.86666667,
       1.        , 1.        , 0.8125    , 0.86666667, 1.        ,
       0.875     , 0.8125    , 1.        , 0.8       , 0.93333333,
       0.875     , 0.75      , 0.9375    , 1.        , 1.        ,
       0.75      , 0.8125    , 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.9375    , 0.53333333, 0.93333333,
       1.        , 0.75      , 1.        , 0.8       , 0.86666667,
       0.9375    , 0.8125    , 1.        , 0.86666667, 0.73333333]),
             'test_sensitivity': array([0.75      , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667,
       0.75      , 0.75      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 0.75, 0.75, 1.  , 1.  , 1.  , 1.  , 0.75, 1.  , 0.6 , 1.  ,
       1.  , 1.  , 0.8 , 0.8 , 1.  , 1.  , 1.  , 0.6 , 1.  , 1.  , 0.75,
       1.  , 0.8 , 1.  , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 1.  , 0.75, 1.  , 1.  ,
       0.8 , 0.75, 1.  , 1.  , 0.8 , 0.8 ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01056564, 0.00707604, 0.00865208, 0.01185313, 0.01128646,
       0.01015135, 0.0139375 , 0.01226667, 0.0079625 , 0.00773089,
       0.01218021, 0.01353883, 0.01259583, 0.00882413, 0.00799601,
       0.00963708, 0.01062729, 0.00968958, 0.00708646, 0.01370991,
       0.01154375, 0.009707  , 0.01191829, 0.00885982, 0.00864167,
       0.01317287, 0.00864001, 0.00873021, 0.01269117, 0.00935625,
       0.0076215 , 0.00845104, 0.01203333, 0.01224062, 0.01240448,
       0.01493741, 0.0136783 , 0.00828854, 0.00900729, 0.01054962,
       0.01145327, 0.01024546, 0.01163695, 0.01326017, 0.00793467,
       0.01085729, 0.01177421, 0.01252671, 0.00811829, 0.00955625]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.07713559, 0.05635304, 0.06853622, 0.08117939, 0.08117816,
       0.07198571, 0.09564655, 0.08757864, 0.06173189, 0.06666649,
       0.07987469, 0.1007771 , 0.09151872, 0.06795738, 0.06622471,
       0.07087933, 0.0779492 , 0.07185193, 0.06082744, 0.10142744,
       0.07943951, 0.08281066, 0.08460149, 0.06849728, 0.06521399,
       0.09898417, 0.06695344, 0.07159032, 0.091142  , 0.07307389,
       0.06085831, 0.06634362, 0.08458878, 0.08870055, 0.0925156 ,
       0.10810091, 0.10383954, 0.06551166, 0.07567236, 0.07705995,
       0.08210252, 0.08121003, 0.08716019, 0.09719923, 0.06296876,
       0.07671466, 0.0885251 , 0.08867417, 0.06580108, 0.07144264]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

III14 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.906 ± 0.093892'],
 'mean_test_balanced_accuracy': ['0.849 ± 0.114380'],
 'mean_test_brier_loss': ['0.12538 ± 0.064806'],
 'mean_test_f1': ['0.820 ± 0.139930'],
 'mean_test_informedness': ['0.698 ± 0.228761'],
 'mean_test_log_loss': ['0.4297 ± 0.217703'],
 'mean_test_markedness': ['0.739 ± 0.218546'],
 'mean_test_mcc': ['0.717 ± 0.221034'],
 'mean_test_negative_predictive_value': ['0.855 ± 0.126412'],
 'mean_test_precision': ['0.884 ± 0.157233'],
 'mean_test_precision_recall_auc': ['0.893 ± 0.112502'],
 'mean_test_roc_auc': ['0.902 ± 0.094435'],
 'mean_test_sensitivity': ['0.795 ± 0.188389'],
 'mean_test_specificity': ['0.903 ± 0.135304'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01102 ± 0.002308'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0805 ± 0.014406'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.901 ± 0.107934'],
 'mean_test_balanced_accuracy': ['0.845 ± 0.120564'],
 'mean_test_brier_loss': ['0.12908 ± 0.065802'],
 'mean_test_f1': ['0.814 ± 0.149410'],
 'mean_test_informedness': ['0.691 ± 0.241127'],
 'mean_test_log_loss': ['0.5215 ± 0.615272'],
 'mean_test_markedness': ['0.735 ± 0.227388'],
 'mean_test_mcc': ['0.711 ± 0.231846'],
 'mean_test_negative_predictive_value': ['0.855 ± 0.137949'],
 'mean_test_precision': ['0.880 ± 0.162359'],
 'mean_test_precision_recall_auc': ['0.884 ± 0.135282'],
 'mean_test_roc_auc': ['0.895 ± 0.108160'],
 'mean_test_sensitivity': ['0.792 ± 0.204990'],
 'mean_test_specificity': ['0.899 ± 0.141237'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01099 ± 0.002466'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0810 ± 0.014450'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.904 ± 0.102533'],
 'mean_test_balanced_accuracy': ['0.853 ± 0.112466'],
 'mean_test_brier_loss': ['0.12535 ± 0.062702'],
 'mean_test_f1': ['0.822 ± 0.147770'],
 'mean_test_informedness': ['0.705 ± 0.224932'],
 'mean_test_log_loss': ['0.4288 ± 0.198153'],
 'mean_test_markedness': ['0.752 ± 0.206840'],
 'mean_test_mcc': ['0.726 ± 0.213450'],
 'mean_test_negative_predictive_value': ['0.862 ± 0.124724'],
 'mean_test_precision': ['0.889 ± 0.150312'],
 'mean_test_precision_recall_auc': ['0.884 ± 0.133328'],
 'mean_test_roc_auc': ['0.900 ± 0.100422'],
 'mean_test_sensitivity': ['0.798 ± 0.197841'],
 'mean_test_specificity': ['0.907 ± 0.125361'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01054 ± 0.002083'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0789 ± 0.012801'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.834 ± 0.019234'],
 'mean_ncv_balanced_accuracy': ['0.847 ± 0.026545'],
 'mean_ncv_brier_loss': ['0.12538 ± 0.006349'],
 'mean_ncv_f1': ['0.828 ± 0.032195'],
 'mean_ncv_informedness': ['0.694 ± 0.053090'],
 'mean_ncv_log_loss': ['0.4297 ± 0.031983'],
 'mean_ncv_markedness': ['0.712 ± 0.048431'],
 'mean_ncv_mcc': ['0.703 ± 0.050033'],
 'mean_ncv_negative_predictive_value': ['0.844 ± 0.032476'],
 'mean_ncv_precision': ['0.868 ± 0.033379'],
 'mean_ncv_precision_recall_auc': ['0.818 ± 0.026416'],
 'mean_ncv_roc_auc': ['0.887 ± 0.012317'],
 'mean_ncv_sensitivity': ['0.794 ± 0.052705'],
 'mean_ncv_specificity': ['0.900 ± 0.028748']}

III14 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.831 ± 0.019201'],
 'mean_ncv_balanced_accuracy': ['0.842 ± 0.019461'],
 'mean_ncv_brier_loss': ['0.12908 ± 0.007971'],
 'mean_ncv_f1': ['0.823 ± 0.023879'],
 'mean_ncv_informedness': ['0.684 ± 0.038921'],
 'mean_ncv_log_loss': ['0.5215 ± 0.230476'],
 'mean_ncv_markedness': ['0.702 ± 0.037970'],
 'mean_ncv_mcc': ['0.693 ± 0.037623'],
 'mean_ncv_negative_predictive_value': ['0.839 ± 0.025880'],
 'mean_ncv_precision': ['0.862 ± 0.033047'],
 'mean_ncv_precision_recall_auc': ['0.817 ± 0.023941'],
 'mean_ncv_roc_auc': ['0.887 ± 0.014522'],
 'mean_ncv_sensitivity': ['0.789 ± 0.043823'],
 'mean_ncv_specificity': ['0.895 ± 0.030679']}

III14 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.834 ± 0.016725'],
 'mean_ncv_balanced_accuracy': ['0.852 ± 0.018718'],
 'mean_ncv_brier_loss': ['0.12535 ± 0.005194'],
 'mean_ncv_f1': ['0.834 ± 0.023455'],
 'mean_ncv_informedness': ['0.705 ± 0.037437'],
 'mean_ncv_log_loss': ['0.4288 ± 0.014142'],
 'mean_ncv_markedness': ['0.722 ± 0.030681'],
 'mean_ncv_mcc': ['0.713 ± 0.033062'],
 'mean_ncv_negative_predictive_value': ['0.848 ± 0.027301'],
 'mean_ncv_precision': ['0.874 ± 0.027122'],
 'mean_ncv_precision_recall_auc': ['0.821 ± 0.021451'],
 'mean_ncv_roc_auc': ['0.890 ± 0.010760'],
 'mean_ncv_sensitivity': ['0.800 ± 0.046849'],
 'mean_ncv_specificity': ['0.905 ± 0.025802']}

III14 end: 16.09.2022_12-47-55
++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++
C-1 start: 16.09.2022_12-47-55

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  2  1  4  4  4  0  2
  2  3  3  4  3  1  2  0  0  1  0  4  4  3  2  2  3  2  1  1  3  2  4  3
  1  1  0  0  0  1  4  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [40 46 55 56 58 74 75 76]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [42 53 57 66 67 72 73 77]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 47 48 54 62 63 65 69]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [49 50 52 61 64 68 71 79]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [43 44 45 51 59 60 70 78]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  0  0  3  0  4  3  3
  0  3  3  4  2  1  4  1  0  4  4  1  0  0  2  2  3  1  0  1  4  4  3  2
  2  4  2  2  1  3  2  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 42 44 48 56 60 61 66]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [40 53 55 59 65 67 76 79]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [52 62 63 71 72 74 75 78]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [43 46 47 49 50 64 70 77]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [45 51 54 57 58 68 69 73]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  2  3  1  3  0  2  3  4
  0  2  2  4  0  1  4  3  0  3  0  0  3  4  1  4  4  2  3  2  0  2  1  1
  0  1  1  4  1  3  4  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [44 48 52 56 58 59 68 72]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [42 53 62 70 71 73 74 76]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [40 45 49 50 65 67 69 79]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [41 43 46 55 57 60 66 77]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [47 51 54 61 63 64 75 78]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  2  1  0  3  2  4  1  0
  3  1  3  0  0  3  3  2  1  3  1  1  3  2  2  4  4  2  4  1  4  1  0  4
  0  4  0  4  3  2  0  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [42 47 51 52 70 72 74 78]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 46 49 56 58 59 67 69]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [40 44 55 61 62 65 77 79]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [43 48 50 53 54 57 60 76]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [45 63 64 66 68 71 73 75]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  1  4  1  4  4
  2  1  3  4  4  0  3  0  3  1  4  3  2  0  3  2  3  3  2  1  0  4  2  0
  0  4  1  2  2  0  1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [42 53 55 61 68 71 72 77]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [40 43 45 49 57 67 74 78]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [41 48 60 63 66 70 75 76]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [50 54 56 59 62 64 65 79]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [44 46 47 51 52 58 69 73]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  4  0  3  4  2
  0  2  1  0  2  4  4  2  0  1  3  1  1  1  2  0  2  3  2  4  0  4  3  1
  4  3  1  3  3  4  3  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [42 44 48 51 56 63 68 79]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [40 50 57 59 60 61 71 74]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 47 49 52 55 62 64 66]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [45 58 65 70 73 75 76 78]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [43 46 53 54 67 69 72 77]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  4  4  1  3  2  0
  2  2  1  3  3  1  0  2  4  0  1  3  3  4  0  1  0  3  4  4  0  3  2  3
  1  0  4  1  4  0  2  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [47 54 57 62 64 68 73 77]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [40 44 50 53 58 63 72 75]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [41 46 48 49 55 70 78 79]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [45 51 52 59 60 65 69 71]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [42 43 56 61 66 67 74 76]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  3  4  3  0  1  0  2  4
  2  1  2  3  4  0  3  4  4  2  0  0  2  1  4  3  4  0  2  1  1  3  2  0
  3  1  0  1  3  2  1  4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [43 45 53 58 59 65 71 74]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [44 49 61 67 68 73 75 78]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [46 48 50 57 60 66 70 77]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [40 42 51 54 63 69 72 76]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [41 47 52 55 56 62 64 79]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  3  2  1  4  0  4  2  4
  2  1  3  0  4  1  4  3  2  1  0  3  0  3  4  1  1  0  0  2  3  4  1  3
  4  0  2  2  3  1  2  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [44 51 58 60 65 66 73 79]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [42 49 53 57 63 64 70 77]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [41 46 48 56 67 74 75 78]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [40 50 55 59 61 68 71 76]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [43 45 47 52 54 62 69 72]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  4  4  1  4  3  1  3  0
  1  1  0  2  3  3  3  4  3  4  2  0  3  2  0  0  2  1  3  1  2  1  1  2
  0  0  4  4  4  2  2  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [47 50 59 62 63 72 73 79]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [42 45 48 49 65 67 69 70]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [51 58 61 64 68 71 77 78]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [44 46 52 53 54 56 60 66]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [40 41 43 55 57 74 75 76]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_12-47-55.
End of grid search at 16.09.2022_12-48-20.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_12-48-20.
End of grid search at 16.09.2022_12-48-46.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_12-48-46.
End of grid search at 16.09.2022_12-49-12.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_12-49-12.
End of grid search at 16.09.2022_12-49-38.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_12-49-38.
End of grid search at 16.09.2022_12-50-04.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_12-50-20.
End of grid search at 16.09.2022_12-50-46.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_12-50-46.
End of grid search at 16.09.2022_12-51-12.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_12-51-12.
End of grid search at 16.09.2022_12-51-38.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_12-51-38.
End of grid search at 16.09.2022_12-52-04.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_12-52-04.
End of grid search at 16.09.2022_12-52-30.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_12-52-39.
End of grid search at 16.09.2022_12-52-57.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_12-52-57.
End of grid search at 16.09.2022_12-53-14.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_12-53-14.
End of grid search at 16.09.2022_12-53-31.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_12-53-31.
End of grid search at 16.09.2022_12-53-49.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_12-53-49.
End of grid search at 16.09.2022_12-54-07.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_12-54-20.
End of grid search at 16.09.2022_12-54-33.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_12-54-33.
End of grid search at 16.09.2022_12-54-45.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_12-54-45.
End of grid search at 16.09.2022_12-54-57.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_12-54-57.
End of grid search at 16.09.2022_12-55-10.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_12-55-10.
End of grid search at 16.09.2022_12-55-22.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_12-55-36.
End of grid search at 16.09.2022_12-55-48.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_12-55-48.
End of grid search at 16.09.2022_12-56-01.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_12-56-01.
End of grid search at 16.09.2022_12-56-13.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_12-56-13.
End of grid search at 16.09.2022_12-56-25.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_12-56-25.
End of grid search at 16.09.2022_12-56-38.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_12-56-53.
End of grid search at 16.09.2022_12-57-06.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_12-57-06.
End of grid search at 16.09.2022_12-57-18.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_12-57-18.
End of grid search at 16.09.2022_12-57-31.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_12-57-31.
End of grid search at 16.09.2022_12-57-43.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_12-57-43.
End of grid search at 16.09.2022_12-57-55.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_12-58-10.
End of grid search at 16.09.2022_12-58-35.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_12-58-35.
End of grid search at 16.09.2022_12-59-01.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_12-59-01.
End of grid search at 16.09.2022_12-59-27.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_12-59-27.
End of grid search at 16.09.2022_12-59-53.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_12-59-53.
End of grid search at 16.09.2022_13-00-19.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_13-00-33.
End of grid search at 16.09.2022_13-00-46.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_13-00-46.
End of grid search at 16.09.2022_13-00-58.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_13-00-58.
End of grid search at 16.09.2022_13-01-11.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_13-01-11.
End of grid search at 16.09.2022_13-01-23.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_13-01-23.
End of grid search at 16.09.2022_13-01-36.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_13-01-48.
End of grid search at 16.09.2022_13-02-01.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_13-02-01.
End of grid search at 16.09.2022_13-02-13.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_13-02-13.
End of grid search at 16.09.2022_13-02-25.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_13-02-25.
End of grid search at 16.09.2022_13-02-38.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_13-02-38.
End of grid search at 16.09.2022_13-02-50.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_13-03-03.
End of grid search at 16.09.2022_13-03-29.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_13-03-29.
End of grid search at 16.09.2022_13-03-54.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_13-03-54.
End of grid search at 16.09.2022_13-04-20.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_13-04-20.
End of grid search at 16.09.2022_13-04-46.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_13-04-46.
End of grid search at 16.09.2022_13-05-12.

C-1 results:
{'mcc': {'best_inner_indices': array([1, 1, 0, 2, 2, 0, 4, 4, 0, 1, 0, 3, 5, 1, 0, 3, 4, 4, 2, 0, 1, 3,
       5, 3, 3, 0, 4, 1, 1, 2, 0, 0, 0, 1, 0, 5, 3, 1, 3, 3, 3, 1, 0, 1,
       2, 0, 1, 1, 0, 1]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}],
         'best_inner_scores': array([0.53132337, 0.83493673, 0.83493673, 0.68640255, 0.6659598 ,
       0.81165105, 0.70481672, 0.4884436 , 0.72848087, 0.6659598 ,
       0.63907408, 0.66144338, 0.74819006, 0.69096154, 0.74902076,
       0.78898957, 0.64834204, 0.66144338, 0.81505443, 0.68803296,
       0.68185115, 0.81527096, 0.64381101, 0.70815923, 0.70815923,
       0.8102069 , 0.71269665, 0.83192777, 0.64569247, 0.6659598 ,
       0.85479529, 0.68139693, 0.66406377, 0.60335198, 0.72848087,
       0.5832629 , 0.68439134, 0.62015873, 0.85739492, 0.77055918,
       0.60343523, 0.81527096, 0.66144338, 0.66535948, 0.81505443,
       0.76690557, 0.78898957, 0.59960081, 0.73364642, 0.60559177]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [500, 100, 1000]},
         'max_ncv_average_precision': 0.9123677248677251,
         'max_ncv_balanced_accuracy': 0.8434343434343434,
         'max_ncv_brier_loss': 0.1450768,
         'max_ncv_f1': 0.823529411764706,
         'max_ncv_informedness': 0.6868686868686869,
         'max_ncv_log_loss': 0.4602719017762292,
         'max_ncv_markedness': 0.7083333333333335,
         'max_ncv_mcc': 0.6975184488828855,
         'max_ncv_negative_predictive_value': 0.8333333333333334,
         'max_ncv_precision': 0.875,
         'max_ncv_precision_recall_auc': 0.9118033063427802,
         'max_ncv_roc_auc': 0.898989898989899,
         'max_ncv_sensitivity': 0.7777777777777778,
         'max_ncv_specificity': 0.9090909090909091,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.30667400000000006,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 0.9045055392454223,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.016028125,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.11128112684508175,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.8930031266431001,
         'mean_ncv_balanced_accuracy': 0.810858585858586,
         'mean_ncv_brier_loss': 0.13298340250000001,
         'mean_ncv_f1': 0.7858157202274849,
         'mean_ncv_informedness': 0.6217171717171717,
         'mean_ncv_log_loss': 0.4225961550642935,
         'mean_ncv_markedness': 0.6423047203577894,
         'mean_ncv_mcc': 0.6318822291670326,
         'mean_ncv_negative_predictive_value': 0.8080528529441573,
         'mean_ncv_precision': 0.8342518674136322,
         'mean_ncv_precision_recall_auc': 0.8907859713167527,
         'mean_ncv_roc_auc': 0.877020202020202,
         'mean_ncv_sensitivity': 0.7444444444444445,
         'mean_ncv_specificity': 0.8772727272727272,
         'mean_test_average_precision': 0.9139126984126985,
         'mean_test_balanced_accuracy': 0.815,
         'mean_test_brier_loss': 0.13298340250000001,
         'mean_test_f1': 0.7776825396825395,
         'mean_test_informedness': 0.63,
         'mean_test_log_loss': 0.4225961550642935,
         'mean_test_markedness': 0.6966666666666668,
         'mean_test_mcc': 0.6599884974579093,
         'mean_test_negative_predictive_value': 0.8263333333333333,
         'mean_test_precision': 0.8703333333333333,
         'mean_test_precision_recall_auc': 0.9043670634920634,
         'mean_test_roc_auc': 0.8928333333333334,
         'mean_test_sensitivity': 0.75,
         'mean_test_specificity': 0.8799999999999999,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011087898125,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.08115024400999835,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.8647427020672636,
         'min_ncv_balanced_accuracy': 0.7702020202020202,
         'min_ncv_brier_loss': 0.11803899999999998,
         'min_ncv_f1': 0.7428571428571428,
         'min_ncv_informedness': 0.5404040404040404,
         'min_ncv_log_loss': 0.3762618909367077,
         'min_ncv_markedness': 0.547314578005115,
         'min_ncv_mcc': 0.5438483330175762,
         'min_ncv_negative_predictive_value': 0.7692307692307693,
         'min_ncv_precision': 0.7647058823529411,
         'min_ncv_precision_recall_auc': 0.8606368098546462,
         'min_ncv_roc_auc': 0.8573232323232323,
         'min_ncv_sensitivity': 0.6666666666666666,
         'min_ncv_specificity': 0.8181818181818182,
         'min_test_average_precision': 0.625,
         'min_test_balanced_accuracy': 0.625,
         'min_test_brier_loss': 0.0285465,
         'min_test_f1': 0.4,
         'min_test_informedness': 0.25,
         'min_test_log_loss': 0.14886855419245842,
         'min_test_markedness': 0.2666666666666666,
         'min_test_mcc': 0.2581988897471611,
         'min_test_negative_predictive_value': 0.5714285714285714,
         'min_test_precision': 0.5,
         'min_test_precision_recall_auc': 0.5823412698412699,
         'min_test_roc_auc': 0.5333333333333333,
         'min_test_sensitivity': 0.25,
         'min_test_specificity': 0.4,
         'min_train_average_precision': 0.9999999999999998,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.007565625000000002,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.058233578431446296,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999998,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.8782024 , 0.8647427 , 0.8882602 , 0.89478913, 0.9095334 ,
       0.90960694, 0.91236772, 0.90100991, 0.87237069, 0.89914818]),
         'ncv_balanced_accuracy': array([0.82070707, 0.78787879, 0.77020202, 0.82070707, 0.81565657,
       0.81565657, 0.84343434, 0.84343434, 0.79292929, 0.7979798 ]),
         'ncv_brier_loss': array([0.13563102, 0.1450768 , 0.14070015, 0.13303048, 0.1209294 ,
       0.12439992, 0.118039  , 0.13040205, 0.1436022 , 0.138023  ]),
         'ncv_f1': array([0.8       , 0.75      , 0.74285714, 0.8       , 0.78787879,
       0.78787879, 0.82352941, 0.82352941, 0.76470588, 0.77777778]),
         'ncv_informedness': array([0.64141414, 0.57575758, 0.54040404, 0.64141414, 0.63131313,
       0.63131313, 0.68686869, 0.68686869, 0.58585859, 0.5959596 ]),
         'ncv_log_loss': array([0.4280859 , 0.4602719 , 0.42652629, 0.41605443, 0.38634035,
       0.38580652, 0.37626189, 0.45337903, 0.45415915, 0.43907609]),
         'ncv_markedness': array([0.64961637, 0.62637363, 0.54731458, 0.64961637, 0.66666667,
       0.66666667, 0.70833333, 0.70833333, 0.60416667, 0.5959596 ]),
         'ncv_mcc': array([0.64550223, 0.60053256, 0.54384833, 0.64550223, 0.64874912,
       0.64874912, 0.69751845, 0.69751845, 0.59494221, 0.5959596 ]),
         'ncv_negative_predictive_value': array([0.82608696, 0.76923077, 0.7826087 , 0.82608696, 0.8       ,
       0.8       , 0.83333333, 0.83333333, 0.79166667, 0.81818182]),
         'ncv_precision': array([0.82352941, 0.85714286, 0.76470588, 0.82352941, 0.86666667,
       0.86666667, 0.875     , 0.875     , 0.8125    , 0.77777778]),
         'ncv_precision_recall_auc': array([0.87553184, 0.86063681, 0.88647983, 0.89308734, 0.90744227,
       0.90755893, 0.91180331, 0.89886832, 0.86902594, 0.89742513]),
         'ncv_roc_auc': array([0.86489899, 0.85732323, 0.89393939, 0.87247475, 0.8989899 ,
       0.8989899 , 0.89646465, 0.87121212, 0.85732323, 0.85858586]),
         'ncv_sensitivity': array([0.77777778, 0.66666667, 0.72222222, 0.77777778, 0.72222222,
       0.72222222, 0.77777778, 0.77777778, 0.72222222, 0.77777778]),
         'ncv_specificity': array([0.86363636, 0.90909091, 0.81818182, 0.86363636, 0.90909091,
       0.90909091, 0.90909091, 0.90909091, 0.86363636, 0.81818182]),
         'ranked_best_inner_params': [{'frequency': 14, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 14, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
         'std_ncv_average_precision': 0.016649624688380972,
         'std_ncv_balanced_accuracy': 0.02364256204278992,
         'std_ncv_brier_loss': 0.00942774032179512,
         'std_ncv_f1': 0.027676673088719093,
         'std_ncv_informedness': 0.04728512408557984,
         'std_ncv_log_loss': 0.030800541360912856,
         'std_ncv_markedness': 0.05043454867920008,
         'std_ncv_mcc': 0.04824012692054029,
         'std_ncv_negative_predictive_value': 0.02256846965678799,
         'std_ncv_precision': 0.04038056344207082,
         'std_ncv_precision_recall_auc': 0.017476632146161505,
         'std_ncv_roc_auc': 0.018094706519248393,
         'std_ncv_sensitivity': 0.03884477215445008,
         'std_ncv_specificity': 0.03742148192493472,
         'std_test_average_precision': 0.08692899516135251,
         'std_test_balanced_accuracy': 0.10524779097762069,
         'std_test_brier_loss': 0.056419513873466665,
         'std_test_f1': 0.13919953597611812,
         'std_test_informedness': 0.21049558195524137,
         'std_test_log_loss': 0.15663056811320797,
         'std_test_markedness': 0.19072869560680333,
         'std_test_mcc': 0.196732152258294,
         'std_test_negative_predictive_value': 0.12960693218274538,
         'std_test_precision': 0.16096682099214565,
         'std_test_precision_recall_auc': 0.09838401584646732,
         'std_test_roc_auc': 0.10816981379654883,
         'std_test_sensitivity': 0.20342866060279835,
         'std_test_specificity': 0.1587579340778062,
         'std_train_average_precision': 6.344131569286608e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.0023955209297322278,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.01470730634442333,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 6.344131569286608e-17,
         'std_train_roc_auc': 3.884971301458624e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([0.89285714, 0.77083333, 0.91666667, 1.        , 0.91666667,
       0.89285714, 0.89285714, 1.        , 0.75555556, 1.        ,
       1.        , 0.91666667, 0.85416667, 0.80555556, 0.91666667,
       0.83035714, 0.95      , 0.89285714, 1.        , 1.        ,
       0.89285714, 0.81666667, 1.        , 1.        , 0.91666667,
       0.95      , 0.85416667, 1.        , 1.        , 1.        ,
       0.91666667, 0.91666667, 0.91666667, 1.        , 0.80952381,
       1.        , 0.95      , 0.95      , 0.625     , 1.        ,
       0.95      , 0.73333333, 1.        , 0.83333333, 0.91666667,
       0.91666667, 0.79285714, 1.        , 1.        , 0.83333333]),
         'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 0.83333333, 0.9       ,
       0.875     , 0.875     , 0.75      , 0.66666667, 0.8       ,
       0.875     , 0.75      , 0.75      , 0.8       , 0.73333333,
       0.75      , 0.875     , 0.75      , 0.8       , 1.        ,
       0.875     , 0.625     , 0.875     , 1.        , 0.73333333,
       0.875     , 0.75      , 0.625     , 1.        , 0.9       ,
       0.75      , 0.75      , 0.875     , 1.        , 0.83333333,
       1.        , 0.875     , 0.75      , 0.66666667, 0.83333333,
       0.75      , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.75      , 1.        , 0.7       , 0.73333333]),
         'test_brier_loss': array([0.1516835 , 0.2252085 , 0.1252375 , 0.08629412, 0.0897315 ,
       0.1483875 , 0.149637  , 0.101299  , 0.176525  , 0.1495355 ,
       0.075725  , 0.15      , 0.18174275, 0.1829955 , 0.1130375 ,
       0.1962875 , 0.1108445 , 0.163546  , 0.14038687, 0.0540875 ,
       0.1111995 , 0.2276125 , 0.0646225 , 0.0926    , 0.1086125 ,
       0.1321625 , 0.177075  , 0.194101  , 0.0285465 , 0.09011462,
       0.1297375 , 0.1484875 , 0.117625  , 0.047745  , 0.1466    ,
       0.05382025, 0.089125  , 0.1593525 , 0.2357375 , 0.113975  ,
       0.1156375 , 0.306674  , 0.067125  , 0.1206385 , 0.107936  ,
       0.10715   , 0.21813   , 0.035216  , 0.1405    , 0.189119  ]),
         'test_f1': array([0.85714286, 0.75      , 0.75      , 0.8       , 0.85714286,
       0.85714286, 0.85714286, 0.66666667, 0.5       , 0.75      ,
       0.88888889, 0.66666667, 0.66666667, 0.75      , 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.75      , 1.        ,
       0.85714286, 0.57142857, 0.85714286, 1.        , 0.66666667,
       0.85714286, 0.75      , 0.4       , 1.        , 0.85714286,
       0.75      , 0.75      , 0.85714286, 1.        , 0.8       ,
       1.        , 0.85714286, 0.8       , 0.5       , 0.8       ,
       0.75      , 0.57142857, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.66666667, 1.        , 0.66666667, 0.66666667]),
         'test_informedness': array([0.75      , 0.5       , 0.5       , 0.66666667, 0.8       ,
       0.75      , 0.75      , 0.5       , 0.33333333, 0.6       ,
       0.75      , 0.5       , 0.5       , 0.6       , 0.46666667,
       0.5       , 0.75      , 0.5       , 0.6       , 1.        ,
       0.75      , 0.25      , 0.75      , 1.        , 0.46666667,
       0.75      , 0.5       , 0.25      , 1.        , 0.8       ,
       0.5       , 0.5       , 0.75      , 1.        , 0.66666667,
       1.        , 0.75      , 0.5       , 0.33333333, 0.66666667,
       0.5       , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.5       , 1.        , 0.4       , 0.46666667]),
         'test_log_loss': array([0.50101526, 0.67766272, 0.36536776, 0.30117037, 0.29521337,
       0.52294664, 0.47582313, 0.35094521, 0.51952884, 0.43211569,
       0.25388554, 0.46159657, 0.52800753, 0.5589762 , 0.33016563,
       0.59117067, 0.36301486, 0.50670498, 0.40915894, 0.21022272,
       0.37419745, 0.61531735, 0.26369393, 0.3368039 , 0.34168912,
       0.41824959, 0.5169125 , 0.55634324, 0.14886855, 0.28865868,
       0.36158994, 0.41831928, 0.37866565, 0.20106266, 0.52167191,
       0.23598094, 0.30725481, 0.47940737, 0.85692224, 0.38732977,
       0.37037685, 0.90450554, 0.25822759, 0.39444365, 0.3432421 ,
       0.34794587, 0.68342477, 0.19867702, 0.40379923, 0.56153357]),
         'test_markedness': array([0.8       , 0.5       , 0.5       , 0.83333333, 0.75      ,
       0.8       , 0.8       , 0.66666667, 0.71428571, 0.6       ,
       0.8       , 0.66666667, 0.66666667, 0.6       , 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.6       , 1.        ,
       0.8       , 0.26666667, 0.8       , 1.        , 0.46666667,
       0.8       , 0.5       , 0.57142857, 1.        , 0.75      ,
       0.5       , 0.5       , 0.8       , 1.        , 0.83333333,
       1.        , 0.8       , 0.66666667, 0.71428571, 0.83333333,
       0.5       , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.8       , 0.66666667, 1.        , 0.5       , 0.46666667]),
         'test_mcc': array([0.77459667, 0.5       , 0.5       , 0.74535599, 0.77459667,
       0.77459667, 0.77459667, 0.57735027, 0.48795004, 0.6       ,
       0.77459667, 0.57735027, 0.57735027, 0.6       , 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.6       , 1.        ,
       0.77459667, 0.25819889, 0.77459667, 1.        , 0.46666667,
       0.77459667, 0.5       , 0.37796447, 1.        , 0.77459667,
       0.5       , 0.5       , 0.77459667, 1.        , 0.74535599,
       1.        , 0.77459667, 0.57735027, 0.48795004, 0.74535599,
       0.5       , 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.57735027, 1.        , 0.4472136 , 0.46666667]),
         'test_negative_predictive_value': array([0.8       , 0.75      , 0.75      , 0.83333333, 1.        ,
       0.8       , 0.8       , 0.66666667, 0.71428571, 1.        ,
       1.        , 0.66666667, 0.66666667, 1.        , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 1.        ,
       0.8       , 0.6       , 0.8       , 1.        , 0.8       ,
       0.8       , 0.75      , 0.57142857, 1.        , 1.        ,
       0.75      , 0.75      , 0.8       , 1.        , 0.83333333,
       1.        , 0.8       , 1.        , 0.71428571, 0.83333333,
       0.75      , 0.6       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.66666667, 1.        , 1.        , 0.8       ]),
         'test_precision': array([1.        , 0.75      , 0.75      , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.6       , 0.66666667,
       1.        , 1.        , 0.75      , 0.6       , 1.        ,
       1.        , 0.66666667, 1.        , 1.        , 0.66666667,
       1.        , 0.75      , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 1.        , 1.        ,
       0.75      , 0.66666667, 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.5       , 0.66666667]),
         'test_precision_recall_auc': array([0.88392857, 0.73125   , 0.92708333, 1.        , 0.90277778,
       0.89642857, 0.88392857, 1.        , 0.71111111, 1.        ,
       1.        , 0.90833333, 0.85416667, 0.76388889, 0.90277778,
       0.8110119 , 0.94375   , 0.89642857, 1.        , 1.        ,
       0.88392857, 0.79583333, 1.        , 1.        , 0.90277778,
       0.94375   , 0.83541667, 1.        , 1.        , 1.        ,
       0.90833333, 0.90833333, 0.90833333, 1.        , 0.79365079,
       1.        , 0.94375   , 0.94375   , 0.58234127, 1.        ,
       0.94375   , 0.69166667, 1.        , 0.81666667, 0.90277778,
       0.90833333, 0.77142857, 1.        , 1.        , 0.81666667]),
         'test_roc_auc': array([0.8125    , 0.75      , 0.90625   , 1.        , 0.93333333,
       0.84375   , 0.8125    , 1.        , 0.8       , 1.        ,
       1.        , 0.875     , 0.84375   , 0.86666667, 0.93333333,
       0.75      , 0.9375    , 0.84375   , 1.        , 1.        ,
       0.8125    , 0.75      , 1.        , 1.        , 0.93333333,
       0.9375    , 0.8125    , 1.        , 1.        , 1.        ,
       0.875     , 0.875     , 0.875     , 1.        , 0.73333333,
       1.        , 0.9375    , 0.9375    , 0.53333333, 1.        ,
       0.9375    , 0.6875    , 1.        , 0.8       , 0.93333333,
       0.875     , 0.6875    , 1.        , 1.        , 0.8       ]),
         'test_sensitivity': array([0.75      , 0.75      , 0.75      , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.5       , 0.33333333, 1.        ,
       1.        , 0.5       , 0.5       , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       0.75      , 0.5       , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 0.75, 0.6 , 1.  , 1.  , 0.75,
       1.  , 1.  , 0.8 , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 1.  , 1.  , 0.75, 0.75, 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.4 , 0.8 ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01050012, 0.00812475, 0.00893021, 0.01127496, 0.01106093,
       0.01124271, 0.01383258, 0.01513958, 0.00937708, 0.00817454,
       0.01279167, 0.01508542, 0.01102472, 0.009186  , 0.00815625,
       0.01213229, 0.01382183, 0.0119855 , 0.0079127 , 0.01137604,
       0.01118138, 0.01087917, 0.0149076 , 0.01229375, 0.0133    ,
       0.01158125, 0.01156621, 0.00870783, 0.01349992, 0.00891129,
       0.00756563, 0.00888021, 0.01132188, 0.01220217, 0.01072917,
       0.01518371, 0.01602813, 0.00920879, 0.00776042, 0.01465   ,
       0.01487292, 0.00756913, 0.01130104, 0.01119192, 0.00777779,
       0.01044375, 0.00885037, 0.01303929, 0.00859479, 0.00926554]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.07526484, 0.06192244, 0.06602226, 0.08116176, 0.08154556,
       0.07031768, 0.09942227, 0.1075531 , 0.0692986 , 0.06900331,
       0.08446564, 0.10068593, 0.08611904, 0.07013998, 0.06593808,
       0.09175593, 0.10234504, 0.0911685 , 0.0666429 , 0.08219258,
       0.07798449, 0.08381847, 0.10583905, 0.09042675, 0.09875519,
       0.07689519, 0.08803249, 0.06497308, 0.09332345, 0.06886381,
       0.05823358, 0.06862035, 0.08128875, 0.08674149, 0.07536379,
       0.10847596, 0.11128113, 0.06937534, 0.06835076, 0.10374714,
       0.10390751, 0.05825887, 0.08314627, 0.07553883, 0.06385533,
       0.07405859, 0.06850892, 0.09031246, 0.06508127, 0.07148849]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([2, 4, 2, 5, 3, 3, 4, 4, 0, 0, 4, 5, 4, 1, 2, 2, 0, 1, 2, 4, 5, 3,
       2, 1, 2, 2, 3, 3, 3, 1, 2, 5, 3, 0, 2, 0, 5, 2, 2, 3, 0, 5, 1, 3,
       2, 0, 3, 2, 2, 0]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
                          'best_inner_scores': array([0.82852777, 0.92142766, 0.94555812, 0.85459121, 0.86979472,
       0.91325549, 0.87254285, 0.78414554, 0.90802905, 0.8867203 ,
       0.82018025, 0.79079818, 0.90803429, 0.9086702 , 0.92605043,
       0.91265339, 0.87033361, 0.86859076, 0.96073946, 0.81825311,
       0.86808045, 0.90970882, 0.83731861, 0.94595696, 0.85560136,
       0.88918814, 0.88510383, 0.90639794, 0.82849379, 0.88212622,
       0.95069969, 0.80694271, 0.86410523, 0.81501945, 0.89648299,
       0.79455594, 0.84660354, 0.81993399, 0.97499056, 0.8792218 ,
       0.83918568, 0.89781296, 0.83152847, 0.86739669, 0.93635952,
       0.89175639, 0.8672599 , 0.80356441, 0.92715164, 0.86989248]),
                          'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [1000, 500, 100]},
                          'max_ncv_average_precision': 0.9235784815718404,
                          'max_ncv_balanced_accuracy': 0.8207070707070707,
                          'max_ncv_brier_loss': 0.1534435,
                          'max_ncv_f1': 0.7999999999999999,
                          'max_ncv_informedness': 0.6414141414141414,
                          'max_ncv_log_loss': 0.48130875744989304,
                          'max_ncv_markedness': 0.6666666666666667,
                          'max_ncv_mcc': 0.6487491201346025,
                          'max_ncv_negative_predictive_value': 0.8260869565217391,
                          'max_ncv_precision': 0.8666666666666667,
                          'max_ncv_precision_recall_auc': 0.9218353781704443,
                          'max_ncv_roc_auc': 0.9166666666666666,
                          'max_ncv_sensitivity': 0.7777777777777778,
                          'max_ncv_specificity': 0.9090909090909091,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.31728975000000004,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 0.9387891738814507,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.015544791666666667,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.11461413739382047,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.8836539511124798,
                          'mean_ncv_balanced_accuracy': 0.8123737373737374,
                          'mean_ncv_brier_loss': 0.13468189000000003,
                          'mean_ncv_f1': 0.7896019013666071,
                          'mean_ncv_informedness': 0.6247474747474749,
                          'mean_ncv_log_loss': 0.422332996687558,
                          'mean_ncv_markedness': 0.6377501033351416,
                          'mean_ncv_mcc': 0.631187077378627,
                          'mean_ncv_negative_predictive_value': 0.8158465085638997,
                          'mean_ncv_precision': 0.8219035947712419,
                          'mean_ncv_precision_recall_auc': 0.8809216631598116,
                          'mean_ncv_roc_auc': 0.8737373737373737,
                          'mean_ncv_sensitivity': 0.7611111111111111,
                          'mean_ncv_specificity': 0.8636363636363636,
                          'mean_test_average_precision': 0.9015912698412698,
                          'mean_test_balanced_accuracy': 0.8151666666666667,
                          'mean_test_brier_loss': 0.13468189,
                          'mean_test_f1': 0.778031746031746,
                          'mean_test_informedness': 0.6303333333333333,
                          'mean_test_log_loss': 0.42233299668755797,
                          'mean_test_markedness': 0.6830476190476191,
                          'mean_test_mcc': 0.6542276024354408,
                          'mean_test_negative_predictive_value': 0.8363809523809522,
                          'mean_test_precision': 0.8466666666666666,
                          'mean_test_precision_recall_auc': 0.8845992063492062,
                          'mean_test_roc_auc': 0.8818333333333332,
                          'mean_test_sensitivity': 0.7633333333333333,
                          'mean_test_specificity': 0.8669999999999999,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.011184872291666665,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.08281385704653915,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.8214457700977309,
                          'min_ncv_balanced_accuracy': 0.7929292929292929,
                          'min_ncv_brier_loss': 0.11803887500000002,
                          'min_ncv_f1': 0.7647058823529411,
                          'min_ncv_informedness': 0.5858585858585859,
                          'min_ncv_log_loss': 0.37349950617631567,
                          'min_ncv_markedness': 0.595959595959596,
                          'min_ncv_mcc': 0.5949422064001082,
                          'min_ncv_negative_predictive_value': 0.7916666666666666,
                          'min_ncv_precision': 0.7777777777777778,
                          'min_ncv_precision_recall_auc': 0.8146665879509016,
                          'min_ncv_roc_auc': 0.8270202020202019,
                          'min_ncv_sensitivity': 0.7222222222222222,
                          'min_ncv_specificity': 0.8181818181818182,
                          'min_test_average_precision': 0.5845238095238094,
                          'min_test_balanced_accuracy': 0.5666666666666667,
                          'min_test_brier_loss': 0.023649999999999997,
                          'min_test_f1': 0.4,
                          'min_test_informedness': 0.1333333333333333,
                          'min_test_log_loss': 0.1441654970188603,
                          'min_test_markedness': 0.16666666666666652,
                          'min_test_mcc': 0.14907119849998599,
                          'min_test_negative_predictive_value': 0.5714285714285714,
                          'min_test_precision': 0.5,
                          'min_test_precision_recall_auc': 0.37222222222222223,
                          'min_test_roc_auc': 0.5625,
                          'min_test_sensitivity': 0.25,
                          'min_test_specificity': 0.5,
                          'min_train_average_precision': 0.9999999999999999,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.00532490625,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.04747615374966139,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999999,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.82144577, 0.85032931, 0.88463957, 0.90010972, 0.92357848,
       0.88864327, 0.91006335, 0.91061789, 0.87567059, 0.87144155]),
                          'ncv_balanced_accuracy': array([0.79292929, 0.82070707, 0.7979798 , 0.7979798 , 0.82070707,
       0.81565657, 0.81565657, 0.82070707, 0.82070707, 0.82070707]),
                          'ncv_brier_loss': array([0.1534435 , 0.1458616 , 0.13547762, 0.13604247, 0.12012895,
       0.13294617, 0.11803888, 0.12131363, 0.14233345, 0.14123263]),
                          'ncv_f1': array([0.76470588, 0.8       , 0.77777778, 0.77777778, 0.8       ,
       0.78787879, 0.78787879, 0.8       , 0.8       , 0.8       ]),
                          'ncv_informedness': array([0.58585859, 0.64141414, 0.5959596 , 0.5959596 , 0.64141414,
       0.63131313, 0.63131313, 0.64141414, 0.64141414, 0.64141414]),
                          'ncv_log_loss': array([0.48130876, 0.44887035, 0.41726834, 0.41196222, 0.37349951,
       0.41188098, 0.37845327, 0.41614826, 0.45015944, 0.43377884]),
                          'ncv_markedness': array([0.60416667, 0.64961637, 0.5959596 , 0.5959596 , 0.64961637,
       0.66666667, 0.66666667, 0.64961637, 0.64961637, 0.64961637]),
                          'ncv_mcc': array([0.59494221, 0.64550223, 0.5959596 , 0.5959596 , 0.64550223,
       0.64874912, 0.64874912, 0.64550223, 0.64550223, 0.64550223]),
                          'ncv_negative_predictive_value': array([0.79166667, 0.82608696, 0.81818182, 0.81818182, 0.82608696,
       0.8       , 0.8       , 0.82608696, 0.82608696, 0.82608696]),
                          'ncv_precision': array([0.8125    , 0.82352941, 0.77777778, 0.77777778, 0.82352941,
       0.86666667, 0.86666667, 0.82352941, 0.82352941, 0.82352941]),
                          'ncv_precision_recall_auc': array([0.81466659, 0.84499741, 0.88129981, 0.89812664, 0.92183538,
       0.88806818, 0.90815078, 0.90873084, 0.87217905, 0.87116196]),
                          'ncv_roc_auc': array([0.8270202 , 0.87121212, 0.88636364, 0.87626263, 0.91666667,
       0.86868687, 0.89141414, 0.88383838, 0.85353535, 0.86237374]),
                          'ncv_sensitivity': array([0.72222222, 0.77777778, 0.77777778, 0.77777778, 0.77777778,
       0.72222222, 0.72222222, 0.77777778, 0.77777778, 0.77777778]),
                          'ncv_specificity': array([0.86363636, 0.86363636, 0.81818182, 0.81818182, 0.86363636,
       0.90909091, 0.90909091, 0.86363636, 0.86363636, 0.86363636]),
                          'ranked_best_inner_params': [{'frequency': 15, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}}],
                          'std_ncv_average_precision': 0.030746999730244105,
                          'std_ncv_balanced_accuracy': 0.011358959007453998,
                          'std_ncv_brier_loss': 0.011791842930544775,
                          'std_ncv_f1': 0.012675313172327788,
                          'std_ncv_informedness': 0.022717918014907995,
                          'std_ncv_log_loss': 0.032793172036420175,
                          'std_ncv_markedness': 0.027882923330640498,
                          'std_ncv_mcc': 0.024578920071893624,
                          'std_ncv_negative_predictive_value': 0.013425223504929702,
                          'std_ncv_precision': 0.029820359675925775,
                          'std_ncv_precision_recall_auc': 0.03229706962624459,
                          'std_ncv_roc_auc': 0.023978820763037267,
                          'std_ncv_sensitivity': 0.026835882863313787,
                          'std_ncv_specificity': 0.030303030303030273,
                          'std_test_average_precision': 0.10613850891195667,
                          'std_test_balanced_accuracy': 0.10817872274353107,
                          'std_test_brier_loss': 0.05973569492631795,
                          'std_test_f1': 0.14216262446391578,
                          'std_test_informedness': 0.21635744548706215,
                          'std_test_log_loss': 0.16105628421183896,
                          'std_test_markedness': 0.20708148951898672,
                          'std_test_mcc': 0.2082340243511149,
                          'std_test_negative_predictive_value': 0.13439811546556749,
                          'std_test_precision': 0.16340342796927135,
                          'std_test_precision_recall_auc': 0.1384765466708894,
                          'std_test_roc_auc': 0.11658011245082765,
                          'std_test_sensitivity': 0.20644381225662256,
                          'std_test_specificity': 0.14659746357468337,
                          'std_train_average_precision': 8.83065741614472e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.002557366744110057,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.015393512112795325,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 8.83065741614472e-17,
                          'std_train_roc_auc': 2.74708955197652e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([0.89285714, 0.62202381, 0.95      , 0.83333333, 0.91666667,
       0.91666667, 0.91666667, 1.        , 0.75555556, 1.        ,
       1.        , 0.91666667, 0.85416667, 0.80555556, 0.91666667,
       0.91666667, 0.91666667, 0.91666667, 1.        , 1.        ,
       0.875     , 0.81666667, 1.        , 1.        , 0.86666667,
       0.95      , 0.83035714, 0.91666667, 1.        , 1.        ,
       0.91666667, 0.91666667, 0.875     , 1.        , 0.83333333,
       1.        , 0.95      , 0.95      , 0.68055556, 1.        ,
       1.        , 0.58452381, 1.        , 0.80952381, 0.91666667,
       0.91666667, 0.81666667, 1.        , 1.        , 0.61111111]),
                          'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.83333333, 0.9       ,
       0.75      , 0.875     , 1.        , 0.66666667, 0.8       ,
       0.875     , 0.875     , 0.75      , 0.8       , 0.73333333,
       0.75      , 0.875     , 0.75      , 0.8       , 0.9       ,
       0.875     , 0.625     , 1.        , 0.9       , 0.73333333,
       0.875     , 0.75      , 0.625     , 1.        , 0.9       ,
       0.75      , 0.75      , 0.875     , 0.83333333, 0.83333333,
       1.        , 0.875     , 0.75      , 0.56666667, 0.83333333,
       0.875     , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.75      , 1.        , 0.8       , 0.73333333]),
                          'test_brier_loss': array([0.14363475, 0.259028  , 0.12735388, 0.11732587, 0.119875  ,
       0.165075  , 0.137956  , 0.0975395 , 0.1743    , 0.1544375 ,
       0.062199  , 0.13381713, 0.192543  , 0.176268  , 0.112561  ,
       0.18242863, 0.110375  , 0.158987  , 0.13775625, 0.0906655 ,
       0.1241305 , 0.22625   , 0.04397512, 0.0737735 , 0.13251562,
       0.12155187, 0.1977125 , 0.1989625 , 0.0605625 , 0.0859415 ,
       0.12304037, 0.1427675 , 0.13205   , 0.0550375 , 0.137299  ,
       0.02365   , 0.0844045 , 0.15004087, 0.25742275, 0.09105   ,
       0.06295   , 0.31728975, 0.0787365 , 0.1410375 , 0.1116535 ,
       0.1173    , 0.20005   , 0.032639  , 0.14584912, 0.210325  ]),
                          'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.8       , 0.85714286,
       0.75      , 0.85714286, 1.        , 0.5       , 0.75      ,
       0.88888889, 0.85714286, 0.66666667, 0.75      , 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.75      , 0.85714286,
       0.85714286, 0.57142857, 1.        , 0.85714286, 0.66666667,
       0.85714286, 0.75      , 0.4       , 1.        , 0.85714286,
       0.75      , 0.75      , 0.85714286, 0.8       , 0.8       ,
       1.        , 0.85714286, 0.8       , 0.4       , 0.8       ,
       0.88888889, 0.57142857, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.66666667, 1.        , 0.75      , 0.66666667]),
                          'test_informedness': array([0.75      , 0.25      , 0.5       , 0.66666667, 0.8       ,
       0.5       , 0.75      , 1.        , 0.33333333, 0.6       ,
       0.75      , 0.75      , 0.5       , 0.6       , 0.46666667,
       0.5       , 0.75      , 0.5       , 0.6       , 0.8       ,
       0.75      , 0.25      , 1.        , 0.8       , 0.46666667,
       0.75      , 0.5       , 0.25      , 1.        , 0.8       ,
       0.5       , 0.5       , 0.75      , 0.66666667, 0.66666667,
       1.        , 0.75      , 0.5       , 0.13333333, 0.66666667,
       0.75      , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.5       , 1.        , 0.6       , 0.46666667]),
                          'test_log_loss': array([0.45987454, 0.7831152 , 0.37017825, 0.39703586, 0.39633994,
       0.49742321, 0.44453268, 0.34573504, 0.51074795, 0.44591285,
       0.24544888, 0.43262011, 0.55357955, 0.52629303, 0.32840012,
       0.5256336 , 0.34577145, 0.48291647, 0.40159158, 0.30389799,
       0.41879457, 0.61278818, 0.19806029, 0.26198668, 0.37586781,
       0.37897316, 0.57420636, 0.57676317, 0.24655697, 0.28290525,
       0.35642796, 0.43611066, 0.4362618 , 0.22207257, 0.44139337,
       0.1441655 , 0.29306271, 0.4561259 , 0.86099331, 0.3263939 ,
       0.21333273, 0.93878917, 0.28689096, 0.46095769, 0.35082666,
       0.36701055, 0.58692572, 0.19029357, 0.41001548, 0.61464889]),
                          'test_markedness': array([0.8       , 0.26666667, 0.5       , 0.83333333, 0.75      ,
       0.5       , 0.8       , 1.        , 0.71428571, 0.6       ,
       0.8       , 0.8       , 0.66666667, 0.6       , 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.6       , 0.75      ,
       0.8       , 0.26666667, 1.        , 0.75      , 0.46666667,
       0.8       , 0.5       , 0.57142857, 1.        , 0.75      ,
       0.5       , 0.5       , 0.8       , 0.83333333, 0.83333333,
       1.        , 0.8       , 0.66666667, 0.16666667, 0.83333333,
       0.8       , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.8       , 0.66666667, 1.        , 0.6       , 0.46666667]),
                          'test_mcc': array([0.77459667, 0.25819889, 0.5       , 0.74535599, 0.77459667,
       0.5       , 0.77459667, 1.        , 0.48795004, 0.6       ,
       0.77459667, 0.77459667, 0.57735027, 0.6       , 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.6       , 0.77459667,
       0.77459667, 0.25819889, 1.        , 0.77459667, 0.46666667,
       0.77459667, 0.5       , 0.37796447, 1.        , 0.77459667,
       0.5       , 0.5       , 0.77459667, 0.74535599, 0.74535599,
       1.        , 0.77459667, 0.57735027, 0.1490712 , 0.74535599,
       0.77459667, 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.57735027, 1.        , 0.6       , 0.46666667]),
                          'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.83333333, 1.        ,
       0.75      , 0.8       , 1.        , 0.71428571, 1.        ,
       1.        , 0.8       , 0.66666667, 1.        , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 1.        ,
       0.8       , 0.6       , 1.        , 1.        , 0.8       ,
       0.8       , 0.75      , 0.57142857, 1.        , 1.        ,
       0.75      , 0.75      , 0.8       , 0.83333333, 0.83333333,
       1.        , 0.8       , 1.        , 0.66666667, 0.83333333,
       1.        , 0.6       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.66666667, 1.        , 1.        , 0.8       ]),
                          'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.6       , 0.66666667,
       1.        , 1.        , 0.75      , 0.6       , 0.75      ,
       1.        , 0.66666667, 1.        , 0.75      , 0.66666667,
       1.        , 0.75      , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 0.5       , 1.        ,
       0.8       , 0.66666667, 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.66666667]),
                          'test_precision_recall_auc': array([0.88392857, 0.51934524, 0.94375   , 0.83333333, 0.90277778,
       0.92708333, 0.90833333, 1.        , 0.71111111, 1.        ,
       1.        , 0.90833333, 0.83541667, 0.76388889, 0.90277778,
       0.90833333, 0.90833333, 0.90833333, 1.        , 1.        ,
       0.86607143, 0.79583333, 1.        , 1.        , 0.85      ,
       0.94375   , 0.8235119 , 0.90833333, 1.        , 1.        ,
       0.90833333, 0.90833333, 0.86607143, 1.        , 0.81666667,
       1.        , 0.94375   , 0.94375   , 0.63789683, 1.        ,
       1.        , 0.4797619 , 1.        , 0.79365079, 0.90277778,
       0.90833333, 0.79583333, 1.        , 1.        , 0.37222222]),
                          'test_roc_auc': array([0.8125    , 0.625     , 0.9375    , 0.83333333, 0.93333333,
       0.90625   , 0.875     , 1.        , 0.8       , 1.        ,
       1.        , 0.875     , 0.8125    , 0.86666667, 0.93333333,
       0.875     , 0.875     , 0.875     , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 1.        , 0.86666667,
       0.9375    , 0.78125   , 0.875     , 1.        , 1.        ,
       0.875     , 0.875     , 0.75      , 1.        , 0.8       ,
       1.        , 0.9375    , 0.9375    , 0.6       , 1.        ,
       1.        , 0.5625    , 1.        , 0.73333333, 0.93333333,
       0.875     , 0.75      , 1.        , 1.        , 0.66666667]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 1.        ,
       1.        , 0.75      , 0.5       , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667,
       0.75      , 0.75      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.66666667,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       1.        , 0.5       , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 0.75, 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 0.75, 0.6 , 0.8 , 1.  , 0.75,
       1.  , 0.8 , 0.8 , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 0.8 , 1.  , 0.75, 0.75, 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.01080385, 0.01075037, 0.0076962 , 0.01381342, 0.01476354,
       0.01475417, 0.01411304, 0.01485358, 0.00749271, 0.00901354,
       0.01426813, 0.01388715, 0.01077192, 0.00886663, 0.00810736,
       0.00928263, 0.00964792, 0.01001704, 0.00730143, 0.01376525,
       0.01313592, 0.01040208, 0.01140159, 0.0093265 , 0.00976803,
       0.0107859 , 0.01276042, 0.01252813, 0.01554479, 0.00953604,
       0.00753108, 0.01224167, 0.01441146, 0.01462917, 0.00978425,
       0.01306458, 0.01401518, 0.00888663, 0.00532491, 0.01352604,
       0.01164792, 0.01051645, 0.01184775, 0.01408542, 0.00726747,
       0.00921979, 0.01103229, 0.01313198, 0.00855262, 0.00936771]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.07662672, 0.08176254, 0.06277619, 0.1000763 , 0.10351051,
       0.09998507, 0.09967147, 0.10630117, 0.06274821, 0.06848535,
       0.10481957, 0.1016157 , 0.08402433, 0.06700122, 0.06640888,
       0.06995757, 0.07204577, 0.07073653, 0.06292115, 0.10113182,
       0.09486571, 0.08475183, 0.08402616, 0.06953912, 0.07538192,
       0.07729917, 0.09294796, 0.09082316, 0.11461414, 0.07179463,
       0.06218057, 0.09242059, 0.10119927, 0.09110372, 0.07276262,
       0.08669657, 0.10560723, 0.07047753, 0.04747615, 0.09993133,
       0.08281009, 0.08323033, 0.08618644, 0.09451989, 0.06123241,
       0.07167861, 0.08404605, 0.09115716, 0.06618568, 0.07114075]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([2, 4, 0, 2, 0, 1, 4, 0, 0, 2, 0, 3, 5, 1, 2, 1, 0, 1, 2, 4, 1, 4,
       2, 1, 2, 2, 0, 1, 2, 2, 2, 0, 2, 2, 2, 3, 5, 2, 3, 3, 0, 5, 0, 0,
       2, 2, 4, 5, 1, 0]),
             'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
             'best_inner_scores': array([0.86287478, 0.92967372, 0.93055556, 0.86753813, 0.89172113,
       0.92724868, 0.8840388 , 0.80665785, 0.90936819, 0.87124183,
       0.88866843, 0.84237213, 0.91291887, 0.92679739, 0.90675381,
       0.91203704, 0.89836861, 0.88007055, 0.9620915 , 0.83943355,
       0.90079365, 0.9085097 , 0.86353616, 0.9453159 , 0.91111111,
       0.91843034, 0.9085097 , 0.90740741, 0.83834423, 0.87015251,
       0.93959436, 0.86772487, 0.89263668, 0.808061  , 0.9037037 ,
       0.81459436, 0.86816578, 0.89285714, 0.97276688, 0.88845316,
       0.84832451, 0.89594356, 0.86552028, 0.86230937, 0.90479303,
       0.89880952, 0.86662257, 0.85141093, 0.92026144, 0.87385621]),
             'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [1000, 500, 100]},
             'max_ncv_average_precision': 0.9167773675126617,
             'max_ncv_balanced_accuracy': 0.8434343434343434,
             'max_ncv_brier_loss': 0.1492273,
             'max_ncv_f1': 0.823529411764706,
             'max_ncv_informedness': 0.6868686868686869,
             'max_ncv_log_loss': 0.4701702002804084,
             'max_ncv_markedness': 0.7083333333333335,
             'max_ncv_mcc': 0.6975184488828855,
             'max_ncv_negative_predictive_value': 0.8333333333333334,
             'max_ncv_precision': 0.875,
             'max_ncv_precision_recall_auc': 0.9148253978626477,
             'max_ncv_roc_auc': 0.9166666666666666,
             'max_ncv_sensitivity': 0.7777777777777778,
             'max_ncv_specificity': 0.9090909090909091,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.3185595,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 0.9494115036684325,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.015513291666666667,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.10996328159468355,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.8925216680976625,
             'mean_ncv_balanced_accuracy': 0.8123737373737374,
             'mean_ncv_brier_loss': 0.13429663,
             'mean_ncv_f1': 0.7899363381716322,
             'mean_ncv_informedness': 0.6247474747474747,
             'mean_ncv_log_loss': 0.41715945229845736,
             'mean_ncv_markedness': 0.6380643067503682,
             'mean_ncv_mcc': 0.6313476021119284,
             'mean_ncv_negative_predictive_value': 0.8154907773386034,
             'mean_ncv_precision': 0.8225735294117648,
             'mean_ncv_precision_recall_auc': 0.8899706760971562,
             'mean_ncv_roc_auc': 0.8799242424242424,
             'mean_ncv_sensitivity': 0.7611111111111111,
             'mean_ncv_specificity': 0.8636363636363636,
             'mean_test_average_precision': 0.9103888888888889,
             'mean_test_balanced_accuracy': 0.816,
             'mean_test_brier_loss': 0.13429663,
             'mean_test_f1': 0.7784761904761903,
             'mean_test_informedness': 0.632,
             'mean_test_log_loss': 0.4171594522984573,
             'mean_test_markedness': 0.6946666666666667,
             'mean_test_mcc': 0.6600812700235491,
             'mean_test_negative_predictive_value': 0.839,
             'mean_test_precision': 0.8556666666666665,
             'mean_test_precision_recall_auc': 0.8975277777777778,
             'mean_test_roc_auc': 0.8940416666666667,
             'mean_test_sensitivity': 0.765,
             'mean_test_specificity': 0.8669999999999999,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.010503708958333335,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.07871664645494839,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.8600192336711945,
             'min_ncv_balanced_accuracy': 0.7702020202020202,
             'min_ncv_brier_loss': 0.117512825,
             'min_ncv_f1': 0.7428571428571428,
             'min_ncv_informedness': 0.5404040404040404,
             'min_ncv_log_loss': 0.36108434443468823,
             'min_ncv_markedness': 0.547314578005115,
             'min_ncv_mcc': 0.5438483330175762,
             'min_ncv_negative_predictive_value': 0.782608695652174,
             'min_ncv_precision': 0.7647058823529411,
             'min_ncv_precision_recall_auc': 0.8554911747373761,
             'min_ncv_roc_auc': 0.8484848484848485,
             'min_ncv_sensitivity': 0.7222222222222222,
             'min_ncv_specificity': 0.8181818181818182,
             'min_test_average_precision': 0.5845238095238094,
             'min_test_balanced_accuracy': 0.625,
             'min_test_brier_loss': 0.02626975,
             'min_test_f1': 0.4,
             'min_test_informedness': 0.25,
             'min_test_log_loss': 0.14313752393868642,
             'min_test_markedness': 0.2666666666666666,
             'min_test_mcc': 0.2581988897471611,
             'min_test_negative_predictive_value': 0.5714285714285714,
             'min_test_precision': 0.5,
             'min_test_precision_recall_auc': 0.4797619047619048,
             'min_test_roc_auc': 0.5625,
             'min_test_sensitivity': 0.25,
             'min_test_specificity': 0.4,
             'min_train_average_precision': 0.9999999999999999,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.006438541666666668,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.0589199566686134,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999999,
             'min_train_roc_auc': 0.9999999999999999,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.86001923, 0.88710372, 0.89284878, 0.89107855, 0.91677737,
       0.91631525, 0.91112155, 0.8964404 , 0.86173285, 0.89177899]),
             'ncv_balanced_accuracy': array([0.79292929, 0.84343434, 0.77020202, 0.7979798 , 0.82070707,
       0.81565657, 0.84343434, 0.84343434, 0.7979798 , 0.7979798 ]),
             'ncv_brier_loss': array([0.14681523, 0.13514898, 0.13677325, 0.14188823, 0.1210053 ,
       0.11751283, 0.12089383, 0.12603843, 0.14766295, 0.1492273 ]),
             'ncv_f1': array([0.76470588, 0.82352941, 0.74285714, 0.77777778, 0.8       ,
       0.78787879, 0.82352941, 0.82352941, 0.77777778, 0.77777778]),
             'ncv_informedness': array([0.58585859, 0.68686869, 0.54040404, 0.5959596 , 0.64141414,
       0.63131313, 0.68686869, 0.68686869, 0.5959596 , 0.5959596 ]),
             'ncv_log_loss': array([0.45725414, 0.41779814, 0.41536683, 0.42295094, 0.37197124,
       0.36108434, 0.37913455, 0.41919442, 0.45666972, 0.4701702 ]),
             'ncv_markedness': array([0.60416667, 0.70833333, 0.54731458, 0.5959596 , 0.64961637,
       0.66666667, 0.70833333, 0.70833333, 0.5959596 , 0.5959596 ]),
             'ncv_mcc': array([0.59494221, 0.69751845, 0.54384833, 0.5959596 , 0.64550223,
       0.64874912, 0.69751845, 0.69751845, 0.5959596 , 0.5959596 ]),
             'ncv_negative_predictive_value': array([0.79166667, 0.83333333, 0.7826087 , 0.81818182, 0.82608696,
       0.8       , 0.83333333, 0.83333333, 0.81818182, 0.81818182]),
             'ncv_precision': array([0.8125    , 0.875     , 0.76470588, 0.77777778, 0.82352941,
       0.86666667, 0.875     , 0.875     , 0.77777778, 0.77777778]),
             'ncv_precision_recall_auc': array([0.85549117, 0.8832535 , 0.89048952, 0.89026473, 0.9148254 ,
       0.91418213, 0.90916895, 0.89480004, 0.85732384, 0.88990748]),
             'ncv_roc_auc': array([0.8510101 , 0.89141414, 0.89772727, 0.86868687, 0.91161616,
       0.91666667, 0.89393939, 0.86868687, 0.8510101 , 0.84848485]),
             'ncv_sensitivity': array([0.72222222, 0.77777778, 0.72222222, 0.77777778, 0.77777778,
       0.72222222, 0.77777778, 0.77777778, 0.77777778, 0.77777778]),
             'ncv_specificity': array([0.86363636, 0.90909091, 0.81818182, 0.81818182, 0.86363636,
       0.90909091, 0.90909091, 0.90909091, 0.81818182, 0.81818182]),
             'ranked_best_inner_params': [{'frequency': 17, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
             'std_ncv_average_precision': 0.01986689187055488,
             'std_ncv_balanced_accuracy': 0.025281969366261016,
             'std_ncv_brier_loss': 0.012151725008636753,
             'std_ncv_f1': 0.027462121160536986,
             'std_ncv_informedness': 0.050563938732522025,
             'std_ncv_log_loss': 0.03749425700858524,
             'std_ncv_markedness': 0.058183365981249464,
             'std_ncv_mcc': 0.05413698365236127,
             'std_ncv_negative_predictive_value': 0.018189918626999566,
             'std_ncv_precision': 0.046739041001150894,
             'std_ncv_precision_recall_auc': 0.020805929293321996,
             'std_ncv_roc_auc': 0.025631624121116768,
             'std_ncv_sensitivity': 0.026835882863313787,
             'std_ncv_specificity': 0.04285495643554829,
             'std_test_average_precision': 0.09972352045159719,
             'std_test_balanced_accuracy': 0.10594355233415169,
             'std_test_brier_loss': 0.05756884843280642,
             'std_test_f1': 0.139950695279549,
             'std_test_informedness': 0.21188710466830338,
             'std_test_log_loss': 0.15575154748235895,
             'std_test_markedness': 0.1923694538029468,
             'std_test_mcc': 0.19813845227633164,
             'std_test_negative_predictive_value': 0.13694512017635949,
             'std_test_precision': 0.1603429572684071,
             'std_test_precision_recall_auc': 0.11900690346825372,
             'std_test_roc_auc': 0.1138181858752855,
             'std_test_sensitivity': 0.21208526287830265,
             'std_test_specificity': 0.15734078444249472,
             'std_train_average_precision': 7.606346542007028e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.0021393235597658346,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.01305739810105646,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 7.606346542007028e-17,
             'std_train_roc_auc': 2.74708955197652e-17,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([0.89285714, 0.62202381, 0.91666667, 1.        , 0.91666667,
       0.91666667, 0.91666667, 1.        , 0.80555556, 1.        ,
       1.        , 0.91666667, 0.83035714, 0.80555556, 0.91666667,
       0.8875    , 0.95      , 0.91666667, 1.        , 0.91666667,
       0.89285714, 0.81666667, 1.        , 1.        , 0.86666667,
       0.95      , 0.8875    , 1.        , 1.        , 1.        ,
       0.91666667, 0.91666667, 0.95      , 1.        , 0.80952381,
       1.        , 0.95      , 0.95      , 0.625     , 1.        ,
       0.95      , 0.58452381, 1.        , 0.83333333, 0.91666667,
       0.95      , 0.79285714, 1.        , 1.        , 0.83333333]),
             'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.83333333, 0.9       ,
       0.875     , 0.875     , 1.        , 0.66666667, 0.8       ,
       0.875     , 0.75      , 0.75      , 0.8       , 0.73333333,
       0.75      , 0.875     , 0.75      , 0.8       , 0.9       ,
       0.875     , 0.625     , 1.        , 0.9       , 0.73333333,
       0.875     , 0.75      , 0.625     , 1.        , 0.9       ,
       0.75      , 0.75      , 0.875     , 1.        , 0.83333333,
       1.        , 0.875     , 0.75      , 0.66666667, 0.83333333,
       0.875     , 0.625     , 0.875     , 0.83333333, 0.73333333,
       0.875     , 0.75      , 1.        , 0.7       , 0.73333333]),
             'test_brier_loss': array([0.163152  , 0.263437  , 0.13355   , 0.08377462, 0.0901625 ,
       0.1441575 , 0.1415855 , 0.0727    , 0.1678625 , 0.14943938,
       0.059125  , 0.1359125 , 0.1900135 , 0.180503  , 0.11831225,
       0.185059  , 0.1223625 , 0.162702  , 0.14155413, 0.0977635 ,
       0.112269  , 0.228746  , 0.0446895 , 0.0803775 , 0.1389445 ,
       0.12426087, 0.1549875 , 0.1908495 , 0.02626975, 0.0911965 ,
       0.12280163, 0.17125   , 0.109591  , 0.0546715 , 0.146155  ,
       0.0626375 , 0.08513   , 0.14917462, 0.2267125 , 0.1065375 ,
       0.074675  , 0.3185595 , 0.0989625 , 0.13275   , 0.11336775,
       0.11203088, 0.2329945 , 0.07027862, 0.1540075 , 0.176825  ]),
             'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.8       , 0.85714286,
       0.85714286, 0.85714286, 1.        , 0.5       , 0.75      ,
       0.88888889, 0.66666667, 0.66666667, 0.75      , 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.75      , 0.85714286,
       0.85714286, 0.57142857, 1.        , 0.85714286, 0.66666667,
       0.85714286, 0.75      , 0.4       , 1.        , 0.85714286,
       0.75      , 0.75      , 0.85714286, 1.        , 0.8       ,
       1.        , 0.85714286, 0.8       , 0.5       , 0.8       ,
       0.88888889, 0.57142857, 0.88888889, 0.8       , 0.66666667,
       0.85714286, 0.66666667, 1.        , 0.66666667, 0.66666667]),
             'test_informedness': array([0.75      , 0.25      , 0.5       , 0.66666667, 0.8       ,
       0.75      , 0.75      , 1.        , 0.33333333, 0.6       ,
       0.75      , 0.5       , 0.5       , 0.6       , 0.46666667,
       0.5       , 0.75      , 0.5       , 0.6       , 0.8       ,
       0.75      , 0.25      , 1.        , 0.8       , 0.46666667,
       0.75      , 0.5       , 0.25      , 1.        , 0.8       ,
       0.5       , 0.5       , 0.75      , 1.        , 0.66666667,
       1.        , 0.75      , 0.5       , 0.33333333, 0.66666667,
       0.75      , 0.25      , 0.75      , 0.66666667, 0.46666667,
       0.75      , 0.5       , 1.        , 0.4       , 0.46666667]),
             'test_log_loss': array([0.50626957, 0.79249712, 0.39225429, 0.29720347, 0.29804628,
       0.4458895 , 0.45451713, 0.27198008, 0.48814861, 0.42845537,
       0.20723717, 0.42734229, 0.55484172, 0.54628449, 0.34112849,
       0.53523167, 0.36056072, 0.49023227, 0.41038035, 0.3183497 ,
       0.37882507, 0.61595684, 0.19998602, 0.27543577, 0.38965251,
       0.38516231, 0.43605582, 0.546474  , 0.14313752, 0.29459206,
       0.35493523, 0.47891771, 0.36174357, 0.22070505, 0.4793712 ,
       0.2599071 , 0.29375961, 0.45160949, 0.71902558, 0.3716703 ,
       0.23819282, 0.9494115 , 0.32332411, 0.41824468, 0.35417547,
       0.35816945, 0.73366986, 0.29794859, 0.42785961, 0.53320349]),
             'test_markedness': array([0.8       , 0.26666667, 0.5       , 0.83333333, 0.75      ,
       0.8       , 0.8       , 1.        , 0.71428571, 0.6       ,
       0.8       , 0.66666667, 0.66666667, 0.6       , 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.6       , 0.75      ,
       0.8       , 0.26666667, 1.        , 0.75      , 0.46666667,
       0.8       , 0.5       , 0.57142857, 1.        , 0.75      ,
       0.5       , 0.5       , 0.8       , 1.        , 0.83333333,
       1.        , 0.8       , 0.66666667, 0.71428571, 0.83333333,
       0.8       , 0.26666667, 0.8       , 0.83333333, 0.46666667,
       0.8       , 0.66666667, 1.        , 0.5       , 0.46666667]),
             'test_mcc': array([0.77459667, 0.25819889, 0.5       , 0.74535599, 0.77459667,
       0.77459667, 0.77459667, 1.        , 0.48795004, 0.6       ,
       0.77459667, 0.57735027, 0.57735027, 0.6       , 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.6       , 0.77459667,
       0.77459667, 0.25819889, 1.        , 0.77459667, 0.46666667,
       0.77459667, 0.5       , 0.37796447, 1.        , 0.77459667,
       0.5       , 0.5       , 0.77459667, 1.        , 0.74535599,
       1.        , 0.77459667, 0.57735027, 0.48795004, 0.74535599,
       0.77459667, 0.25819889, 0.77459667, 0.74535599, 0.46666667,
       0.77459667, 0.57735027, 1.        , 0.4472136 , 0.46666667]),
             'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.83333333, 1.        ,
       0.8       , 0.8       , 1.        , 0.71428571, 1.        ,
       1.        , 0.66666667, 0.66666667, 1.        , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 1.        ,
       0.8       , 0.6       , 1.        , 1.        , 0.8       ,
       0.8       , 0.75      , 0.57142857, 1.        , 1.        ,
       0.75      , 0.75      , 0.8       , 1.        , 0.83333333,
       1.        , 0.8       , 1.        , 0.71428571, 0.83333333,
       1.        , 0.6       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.66666667, 1.        , 1.        , 0.8       ]),
             'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.6       , 0.66666667,
       1.        , 1.        , 0.75      , 0.6       , 0.75      ,
       1.        , 0.66666667, 1.        , 0.75      , 0.66666667,
       1.        , 0.75      , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 1.        , 1.        ,
       0.8       , 0.66666667, 0.8       , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.5       , 0.66666667]),
             'test_precision_recall_auc': array([0.88392857, 0.51934524, 0.90833333, 1.        , 0.90277778,
       0.90833333, 0.90833333, 1.        , 0.76388889, 1.        ,
       1.        , 0.92708333, 0.8110119 , 0.76388889, 0.90277778,
       0.87083333, 0.94375   , 0.90833333, 1.        , 0.90277778,
       0.88392857, 0.79583333, 1.        , 1.        , 0.85      ,
       0.94375   , 0.87083333, 1.        , 1.        , 1.        ,
       0.90833333, 0.90833333, 0.94375   , 1.        , 0.79365079,
       1.        , 0.94375   , 0.94375   , 0.59027778, 1.        ,
       0.94375   , 0.4797619 , 1.        , 0.81666667, 0.90277778,
       0.94375   , 0.77142857, 1.        , 1.        , 0.81666667]),
             'test_roc_auc': array([0.8125    , 0.625     , 0.875     , 1.        , 0.93333333,
       0.875     , 0.875     , 1.        , 0.86666667, 1.        ,
       1.        , 0.90625   , 0.75      , 0.86666667, 0.93333333,
       0.875     , 0.9375    , 0.875     , 1.        , 0.93333333,
       0.8125    , 0.75      , 1.        , 1.        , 0.86666667,
       0.9375    , 0.875     , 1.        , 1.        , 1.        ,
       0.875     , 0.875     , 0.9375    , 1.        , 0.73333333,
       1.        , 0.9375    , 0.9375    , 0.56666667, 1.        ,
       0.9375    , 0.5625    , 1.        , 0.8       , 0.93333333,
       0.9375    , 0.6875    , 1.        , 1.        , 0.8       ]),
             'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 1.        ,
       1.        , 0.5       , 0.5       , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667,
       0.75      , 0.75      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       1.        , 0.5       , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 0.75, 0.6 , 0.8 , 1.  , 0.75,
       1.  , 0.8 , 0.8 , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 1.  , 1.  , 0.75, 0.75, 0.75, 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.4 , 0.8 ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01047578, 0.01018879, 0.00643854, 0.0106538 , 0.01113125,
       0.01096458, 0.01323267, 0.011825  , 0.00850313, 0.00784954,
       0.01251354, 0.01359792, 0.01098017, 0.00932304, 0.00770243,
       0.00978362, 0.00919375, 0.00976692, 0.00722467, 0.01444125,
       0.01119475, 0.01079058, 0.01185058, 0.00904804, 0.00937049,
       0.01070788, 0.00872292, 0.00853075, 0.01265455, 0.0092034 ,
       0.00773102, 0.00978021, 0.01055448, 0.01215064, 0.00968601,
       0.01541458, 0.01404958, 0.00842445, 0.00770417, 0.01381563,
       0.01152708, 0.01031223, 0.01203021, 0.00973021, 0.00782754,
       0.0097133 , 0.01131121, 0.01551329, 0.00828696, 0.01175833]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.07594605, 0.08066669, 0.05891996, 0.07853653, 0.08002033,
       0.07347137, 0.09712384, 0.08627839, 0.06997881, 0.06677387,
       0.08520527, 0.10062173, 0.08671843, 0.07119706, 0.06495165,
       0.07144334, 0.06866635, 0.06921067, 0.06315161, 0.10352559,
       0.07724277, 0.0890739 , 0.08607705, 0.06991647, 0.07320708,
       0.07742445, 0.06653426, 0.06565279, 0.09089721, 0.06994134,
       0.06277911, 0.06609512, 0.07924822, 0.08758619, 0.07199084,
       0.10891515, 0.10603409, 0.06677327, 0.06933216, 0.10103471,
       0.08008202, 0.08117512, 0.08562615, 0.07114314, 0.06287309,
       0.07291135, 0.08793119, 0.10996328, 0.06570638, 0.08025688]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

C-1 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.914 ± 0.086929'],
 'mean_test_balanced_accuracy': ['0.815 ± 0.105248'],
 'mean_test_brier_loss': ['0.13298 ± 0.056420'],
 'mean_test_f1': ['0.778 ± 0.139200'],
 'mean_test_informedness': ['0.630 ± 0.210496'],
 'mean_test_log_loss': ['0.4226 ± 0.156631'],
 'mean_test_markedness': ['0.697 ± 0.190729'],
 'mean_test_mcc': ['0.660 ± 0.196732'],
 'mean_test_negative_predictive_value': ['0.826 ± 0.129607'],
 'mean_test_precision': ['0.870 ± 0.160967'],
 'mean_test_precision_recall_auc': ['0.904 ± 0.098384'],
 'mean_test_roc_auc': ['0.893 ± 0.108170'],
 'mean_test_sensitivity': ['0.750 ± 0.203429'],
 'mean_test_specificity': ['0.880 ± 0.158758'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01109 ± 0.002396'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0812 ± 0.014707'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.902 ± 0.106139'],
 'mean_test_balanced_accuracy': ['0.815 ± 0.108179'],
 'mean_test_brier_loss': ['0.13468 ± 0.059736'],
 'mean_test_f1': ['0.778 ± 0.142163'],
 'mean_test_informedness': ['0.630 ± 0.216357'],
 'mean_test_log_loss': ['0.4223 ± 0.161056'],
 'mean_test_markedness': ['0.683 ± 0.207081'],
 'mean_test_mcc': ['0.654 ± 0.208234'],
 'mean_test_negative_predictive_value': ['0.836 ± 0.134398'],
 'mean_test_precision': ['0.847 ± 0.163403'],
 'mean_test_precision_recall_auc': ['0.885 ± 0.138477'],
 'mean_test_roc_auc': ['0.882 ± 0.116580'],
 'mean_test_sensitivity': ['0.763 ± 0.206444'],
 'mean_test_specificity': ['0.867 ± 0.146597'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01118 ± 0.002557'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0828 ± 0.015394'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.910 ± 0.099724'],
 'mean_test_balanced_accuracy': ['0.816 ± 0.105944'],
 'mean_test_brier_loss': ['0.13430 ± 0.057569'],
 'mean_test_f1': ['0.778 ± 0.139951'],
 'mean_test_informedness': ['0.632 ± 0.211887'],
 'mean_test_log_loss': ['0.4172 ± 0.155752'],
 'mean_test_markedness': ['0.695 ± 0.192369'],
 'mean_test_mcc': ['0.660 ± 0.198138'],
 'mean_test_negative_predictive_value': ['0.839 ± 0.136945'],
 'mean_test_precision': ['0.856 ± 0.160343'],
 'mean_test_precision_recall_auc': ['0.898 ± 0.119007'],
 'mean_test_roc_auc': ['0.894 ± 0.113818'],
 'mean_test_sensitivity': ['0.765 ± 0.212085'],
 'mean_test_specificity': ['0.867 ± 0.157341'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01050 ± 0.002139'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0787 ± 0.013057'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.893 ± 0.016650'],
 'mean_ncv_balanced_accuracy': ['0.811 ± 0.023643'],
 'mean_ncv_brier_loss': ['0.13298 ± 0.009428'],
 'mean_ncv_f1': ['0.786 ± 0.027677'],
 'mean_ncv_informedness': ['0.622 ± 0.047285'],
 'mean_ncv_log_loss': ['0.4226 ± 0.030801'],
 'mean_ncv_markedness': ['0.642 ± 0.050435'],
 'mean_ncv_mcc': ['0.632 ± 0.048240'],
 'mean_ncv_negative_predictive_value': ['0.808 ± 0.022568'],
 'mean_ncv_precision': ['0.834 ± 0.040381'],
 'mean_ncv_precision_recall_auc': ['0.891 ± 0.017477'],
 'mean_ncv_roc_auc': ['0.877 ± 0.018095'],
 'mean_ncv_sensitivity': ['0.744 ± 0.038845'],
 'mean_ncv_specificity': ['0.877 ± 0.037421']}

C-1 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.884 ± 0.030747'],
 'mean_ncv_balanced_accuracy': ['0.812 ± 0.011359'],
 'mean_ncv_brier_loss': ['0.13468 ± 0.011792'],
 'mean_ncv_f1': ['0.790 ± 0.012675'],
 'mean_ncv_informedness': ['0.625 ± 0.022718'],
 'mean_ncv_log_loss': ['0.4223 ± 0.032793'],
 'mean_ncv_markedness': ['0.638 ± 0.027883'],
 'mean_ncv_mcc': ['0.631 ± 0.024579'],
 'mean_ncv_negative_predictive_value': ['0.816 ± 0.013425'],
 'mean_ncv_precision': ['0.822 ± 0.029820'],
 'mean_ncv_precision_recall_auc': ['0.881 ± 0.032297'],
 'mean_ncv_roc_auc': ['0.874 ± 0.023979'],
 'mean_ncv_sensitivity': ['0.761 ± 0.026836'],
 'mean_ncv_specificity': ['0.864 ± 0.030303']}

C-1 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.893 ± 0.019867'],
 'mean_ncv_balanced_accuracy': ['0.812 ± 0.025282'],
 'mean_ncv_brier_loss': ['0.13430 ± 0.012152'],
 'mean_ncv_f1': ['0.790 ± 0.027462'],
 'mean_ncv_informedness': ['0.625 ± 0.050564'],
 'mean_ncv_log_loss': ['0.4172 ± 0.037494'],
 'mean_ncv_markedness': ['0.638 ± 0.058183'],
 'mean_ncv_mcc': ['0.631 ± 0.054137'],
 'mean_ncv_negative_predictive_value': ['0.815 ± 0.018190'],
 'mean_ncv_precision': ['0.823 ± 0.046739'],
 'mean_ncv_precision_recall_auc': ['0.890 ± 0.020806'],
 'mean_ncv_roc_auc': ['0.880 ± 0.025632'],
 'mean_ncv_sensitivity': ['0.761 ± 0.026836'],
 'mean_ncv_specificity': ['0.864 ± 0.042855']}

C-1 end: 16.09.2022_13-05-24
++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++
C28 start: 16.09.2022_13-05-24

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  0  2  1  4  4  4  0  2  2  3  3  4  3  1  2  0
  0  1  0  4  4  3  2  2  3  2  1  1  3  2  4  3  1  1  0  0  0  1  4  3]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 80  86  95  96  98 114 115 116]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [ 82  93  97 106 107 112 113 117]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  87  88  94 102 103 105 109]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [ 89  90  92 101 104 108 111 119]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [ 83  84  85  91  99 100 110 118]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  0  0  3  0  4  3  3  0  3  3  4  2  1  4  1
  0  4  4  1  0  0  2  2  3  1  0  1  4  4  3  2  2  4  2  2  1  3  2  1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  82  84  88  96 100 101 106]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [ 80  93  95  99 105 107 116 119]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [ 92 102 103 111 112 114 115 118]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 83  86  87  89  90 104 110 117]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 85  91  94  97  98 108 109 113]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  2  3  1  3  0  2  3  4  0  2  2  4  0  1  4  3
  0  3  0  0  3  4  1  4  4  2  3  2  0  2  1  1  0  1  1  4  1  3  4  2]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 84  88  92  96  98  99 108 112]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [ 82  93 102 110 111 113 114 116]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 80  85  89  90 105 107 109 119]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [ 81  83  86  95  97 100 106 117]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [ 87  91  94 101 103 104 115 118]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  2  1  0  3  2  4  1  0  3  1  3  0  0  3  3  2
  1  3  1  1  3  2  2  4  4  2  4  1  4  1  0  4  0  4  0  4  3  2  0  2]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [ 82  87  91  92 110 112 114 118]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  86  89  96  98  99 107 109]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [ 80  84  95 101 102 105 117 119]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [ 83  88  90  93  94  97 100 116]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [ 85 103 104 106 108 111 113 115]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  1  4  1  4  4  2  1  3  4  4  0  3  0
  3  1  4  3  2  0  3  2  3  3  2  1  0  4  2  0  0  4  1  2  2  0  1  3]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [ 82  93  95 101 108 111 112 117]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [ 80  83  85  89  97 107 114 118]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [ 81  88 100 103 106 110 115 116]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 90  94  96  99 102 104 105 119]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 84  86  87  91  92  98 109 113]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  4  0  3  4  2  0  2  1  0  2  4  4  2
  0  1  3  1  1  1  2  0  2  3  2  4  0  4  3  1  4  3  1  3  3  4  3  0]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 82  84  88  91  96 103 108 119]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 80  90  97  99 100 101 111 114]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  87  89  92  95 102 104 106]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [ 85  98 105 110 113 115 116 118]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [ 83  86  93  94 107 109 112 117]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  4  4  1  3  2  0  2  2  1  3  3  1  0  2
  4  0  1  3  3  4  0  1  0  3  4  4  0  3  2  3  1  0  4  1  4  0  2  2]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [ 87  94  97 102 104 108 113 117]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [ 80  84  90  93  98 103 112 115]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [ 81  86  88  89  95 110 118 119]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [ 85  91  92  99 100 105 109 111]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [ 82  83  96 101 106 107 114 116]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  3  4  3  0  1  0  2  4  2  1  2  3  4  0  3  4
  4  2  0  0  2  1  4  3  4  0  2  1  1  3  2  0  3  1  0  1  3  2  1  4]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 83  85  93  98  99 105 111 114]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [ 84  89 101 107 108 113 115 118]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 86  88  90  97 100 106 110 117]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [ 80  82  91  94 103 109 112 116]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 81  87  92  95  96 102 104 119]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  3  2  1  4  0  4  2  4  2  1  3  0  4  1  4  3
  2  1  0  3  0  3  4  1  1  0  0  2  3  4  1  3  4  0  2  2  3  1  2  0]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [ 84  91  98 100 105 106 113 119]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 82  89  93  97 103 104 110 117]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [ 81  86  88  96 107 114 115 118]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [ 80  90  95  99 101 108 111 116]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 83  85  87  92  94 102 109 112]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  4  4  1  4  3  1  3  0  1  1  0  2  3  3  3  4
  3  4  2  0  3  2  0  0  2  1  3  1  2  1  1  2  0  0  4  4  4  2  2  0]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [ 87  90  99 102 103 112 113 119]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 82  85  88  89 105 107 109 110]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [ 91  98 101 104 108 111 117 118]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 84  86  92  93  94  96 100 106]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 80  81  83  95  97 114 115 116]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_13-05-24.
End of grid search at 16.09.2022_13-05-41.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_13-05-41.
End of grid search at 16.09.2022_13-05-58.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_13-05-58.
End of grid search at 16.09.2022_13-06-16.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_13-06-16.
End of grid search at 16.09.2022_13-06-33.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_13-06-33.
End of grid search at 16.09.2022_13-06-51.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_13-07-02.
End of grid search at 16.09.2022_13-07-19.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_13-07-19.
End of grid search at 16.09.2022_13-07-36.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_13-07-36.
End of grid search at 16.09.2022_13-07-54.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_13-07-54.
End of grid search at 16.09.2022_13-08-11.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_13-08-11.
End of grid search at 16.09.2022_13-08-29.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_13-08-42.
End of grid search at 16.09.2022_13-08-55.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_13-08-55.
End of grid search at 16.09.2022_13-09-07.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_13-09-07.
End of grid search at 16.09.2022_13-09-20.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_13-09-20.
End of grid search at 16.09.2022_13-09-32.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_13-09-32.
End of grid search at 16.09.2022_13-09-44.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_13-09-56.
End of grid search at 16.09.2022_13-10-13.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_13-10-13.
End of grid search at 16.09.2022_13-10-31.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_13-10-31.
End of grid search at 16.09.2022_13-10-48.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_13-10-48.
End of grid search at 16.09.2022_13-11-06.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_13-11-06.
End of grid search at 16.09.2022_13-11-23.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_13-11-30.
End of grid search at 16.09.2022_13-11-42.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_13-11-42.
End of grid search at 16.09.2022_13-11-55.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_13-11-55.
End of grid search at 16.09.2022_13-12-07.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_13-12-07.
End of grid search at 16.09.2022_13-12-19.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_13-12-19.
End of grid search at 16.09.2022_13-12-32.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_13-12-43.
End of grid search at 16.09.2022_13-12-56.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_13-12-56.
End of grid search at 16.09.2022_13-13-08.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_13-13-08.
End of grid search at 16.09.2022_13-13-20.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_13-13-20.
End of grid search at 16.09.2022_13-13-33.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_13-13-33.
End of grid search at 16.09.2022_13-13-45.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_13-13-59.
End of grid search at 16.09.2022_13-14-11.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_13-14-11.
End of grid search at 16.09.2022_13-14-24.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_13-14-24.
End of grid search at 16.09.2022_13-14-36.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_13-14-36.
End of grid search at 16.09.2022_13-14-48.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_13-14-48.
End of grid search at 16.09.2022_13-15-01.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_13-15-07.
End of grid search at 16.09.2022_13-15-33.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_13-15-33.
End of grid search at 16.09.2022_13-15-59.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_13-15-59.
End of grid search at 16.09.2022_13-16-25.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_13-16-25.
End of grid search at 16.09.2022_13-16-52.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_13-16-52.
End of grid search at 16.09.2022_13-17-18.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_13-17-26.
End of grid search at 16.09.2022_13-17-43.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_13-17-43.
End of grid search at 16.09.2022_13-18-01.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_13-18-01.
End of grid search at 16.09.2022_13-18-18.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_13-18-18.
End of grid search at 16.09.2022_13-18-35.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_13-18-35.
End of grid search at 16.09.2022_13-18-53.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_13-19-10.
End of grid search at 16.09.2022_13-19-23.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_13-19-23.
End of grid search at 16.09.2022_13-19-35.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_13-19-35.
End of grid search at 16.09.2022_13-19-48.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_13-19-48.
End of grid search at 16.09.2022_13-20-00.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_13-20-00.
End of grid search at 16.09.2022_13-20-13.

C28 results:
{'mcc': {'best_inner_indices': array([0, 2, 0, 0, 1, 3, 5, 5, 0, 0, 3, 3, 0, 4, 1, 3, 3, 1, 3, 3, 2, 3,
       4, 4, 3, 0, 4, 1, 2, 0, 0, 0, 0, 1, 5, 4, 4, 2, 0, 1, 0, 1, 1, 2,
       0, 1, 0, 2, 0, 2]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}],
         'best_inner_scores': array([0.50988518, 0.83493673, 0.83493673, 0.64569247, 0.68803296,
       0.81527096, 0.70481672, 0.4884436 , 0.73037345, 0.68803296,
       0.66406377, 0.66144338, 0.74605136, 0.69526879, 0.74901961,
       0.80965988, 0.6681531 , 0.66144338, 0.83475753, 0.7105816 ,
       0.68185115, 0.81165105, 0.66406377, 0.72848087, 0.7105816 ,
       0.8102069 , 0.73223141, 0.83192777, 0.64569247, 0.6659598 ,
       0.83192777, 0.70311315, 0.6407648 , 0.60559177, 0.72848087,
       0.5832629 , 0.66406377, 0.62015873, 0.85471582, 0.75035867,
       0.64834204, 0.81527096, 0.68221832, 0.66535948, 0.81505443,
       0.72536256, 0.76690557, 0.55539062, 0.73037345, 0.62557745]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [100, 1000, 500]},
         'max_ncv_average_precision': 0.9667571707045393,
         'max_ncv_balanced_accuracy': 0.893939393939394,
         'max_ncv_brier_loss': 0.11119440000000003,
         'max_ncv_f1': 0.8823529411764706,
         'max_ncv_informedness': 0.7878787878787881,
         'max_ncv_log_loss': 0.4116950624631251,
         'max_ncv_markedness': 0.8125,
         'max_ncv_mcc': 0.8000946913656627,
         'max_ncv_negative_predictive_value': 0.875,
         'max_ncv_precision': 0.9375,
         'max_ncv_precision_recall_auc': 0.9668802688539533,
         'max_ncv_roc_auc': 0.9684343434343434,
         'max_ncv_sensitivity': 0.8333333333333334,
         'max_ncv_specificity': 0.9545454545454546,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.2862125,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 1.047244110244789,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.016416666666666666,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.1095681332958967,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.9431856984982915,
         'mean_ncv_balanced_accuracy': 0.8593434343434344,
         'mean_ncv_brier_loss': 0.10212788750000001,
         'mean_ncv_f1': 0.8405828240387064,
         'mean_ncv_informedness': 0.7186868686868688,
         'mean_ncv_log_loss': 0.33782010637352244,
         'mean_ncv_markedness': 0.7542348561498178,
         'mean_ncv_mcc': 0.7362152432611173,
         'mean_ncv_negative_predictive_value': 0.8385590858416945,
         'mean_ncv_precision': 0.9156757703081233,
         'mean_ncv_precision_recall_auc': 0.9419899232668121,
         'mean_ncv_roc_auc': 0.9383838383838384,
         'mean_ncv_sensitivity': 0.7777777777777777,
         'mean_ncv_specificity': 0.940909090909091,
         'mean_test_average_precision': 0.9592420634920634,
         'mean_test_balanced_accuracy': 0.8611666666666667,
         'mean_test_brier_loss': 0.1021278875,
         'mean_test_f1': 0.8296825396825396,
         'mean_test_informedness': 0.7223333333333332,
         'mean_test_log_loss': 0.33782010637352244,
         'mean_test_markedness': 0.7816190476190477,
         'mean_test_mcc': 0.7498386915468681,
         'mean_test_negative_predictive_value': 0.851952380952381,
         'mean_test_precision': 0.9296666666666666,
         'mean_test_precision_recall_auc': 0.9537599206349205,
         'mean_test_roc_auc': 0.9526666666666668,
         'mean_test_sensitivity': 0.7783333333333333,
         'mean_test_specificity': 0.944,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011104849583333336,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.08105914102231504,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.9185786435786436,
         'min_ncv_balanced_accuracy': 0.8156565656565656,
         'min_ncv_brier_loss': 0.08951134999999999,
         'min_ncv_f1': 0.7878787878787877,
         'min_ncv_informedness': 0.6313131313131313,
         'min_ncv_log_loss': 0.2997087327379718,
         'min_ncv_markedness': 0.6666666666666667,
         'min_ncv_mcc': 0.6487491201346025,
         'min_ncv_negative_predictive_value': 0.8,
         'min_ncv_precision': 0.8666666666666667,
         'min_ncv_precision_recall_auc': 0.9166053507237084,
         'min_ncv_roc_auc': 0.8813131313131314,
         'min_ncv_sensitivity': 0.7222222222222222,
         'min_ncv_specificity': 0.9090909090909091,
         'min_test_average_precision': 0.6428571428571428,
         'min_test_balanced_accuracy': 0.5666666666666667,
         'min_test_brier_loss': 0.023315000000000002,
         'min_test_f1': 0.4,
         'min_test_informedness': 0.1333333333333333,
         'min_test_log_loss': 0.14440694418222677,
         'min_test_markedness': 0.16666666666666652,
         'min_test_mcc': 0.14907119849998599,
         'min_test_negative_predictive_value': 0.6666666666666666,
         'min_test_precision': 0.5,
         'min_test_precision_recall_auc': 0.5992063492063492,
         'min_test_roc_auc': 0.6,
         'min_test_sensitivity': 0.3333333333333333,
         'min_test_specificity': 0.6,
         'min_train_average_precision': 0.9999999999999999,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.0057708333333333335,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.0482892501741719,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999999,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.93395547, 0.94937771, 0.93641467, 0.949617  , 0.94982033,
       0.94936307, 0.91857864, 0.91886353, 0.95910939, 0.96675717]),
         'ncv_balanced_accuracy': array([0.86616162, 0.86616162, 0.83838384, 0.87121212, 0.86616162,
       0.86616162, 0.81565657, 0.84343434, 0.86616162, 0.89393939]),
         'ncv_brier_loss': array([0.10718657, 0.10076483, 0.1111944 , 0.1028554 , 0.0977193 ,
       0.09833002, 0.11045295, 0.11086925, 0.0923948 , 0.08951135]),
         'ncv_f1': array([0.84848485, 0.84848485, 0.8125    , 0.85714286, 0.84848485,
       0.84848485, 0.78787879, 0.82352941, 0.84848485, 0.88235294]),
         'ncv_informedness': array([0.73232323, 0.73232323, 0.67676768, 0.74242424, 0.73232323,
       0.73232323, 0.63131313, 0.68686869, 0.73232323, 0.78787879]),
         'ncv_log_loss': array([0.34104365, 0.33044372, 0.36239941, 0.33433988, 0.33001076,
       0.32016183, 0.3425789 , 0.41169506, 0.30581912, 0.29970873]),
         'ncv_markedness': array([0.77333333, 0.77333333, 0.73626374, 0.75191816, 0.77333333,
       0.77333333, 0.66666667, 0.70833333, 0.77333333, 0.8125    ]),
         'ncv_mcc': array([0.75254898, 0.75254898, 0.70588915, 0.74715612, 0.75254898,
       0.75254898, 0.64874912, 0.69751845, 0.75254898, 0.80009469]),
         'ncv_negative_predictive_value': array([0.84      , 0.84      , 0.80769231, 0.86956522, 0.84      ,
       0.84      , 0.8       , 0.83333333, 0.84      , 0.875     ]),
         'ncv_precision': array([0.93333333, 0.93333333, 0.92857143, 0.88235294, 0.93333333,
       0.93333333, 0.86666667, 0.875     , 0.93333333, 0.9375    ]),
         'ncv_precision_recall_auc': array([0.93234761, 0.94775892, 0.93558461, 0.94846418, 0.94866016,
       0.94803871, 0.91660535, 0.91746052, 0.95809889, 0.96688027]),
         'ncv_roc_auc': array([0.93181818, 0.9520202 , 0.9280303 , 0.9469697 , 0.9469697 ,
       0.9520202 , 0.91666667, 0.88131313, 0.95959596, 0.96843434]),
         'ncv_sensitivity': array([0.77777778, 0.77777778, 0.72222222, 0.83333333, 0.77777778,
       0.77777778, 0.72222222, 0.77777778, 0.77777778, 0.83333333]),
         'ncv_specificity': array([0.95454545, 0.95454545, 0.95454545, 0.90909091, 0.95454545,
       0.95454545, 0.90909091, 0.90909091, 0.95454545, 0.95454545]),
         'ranked_best_inner_params': [{'frequency': 16, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
         'std_ncv_average_precision': 0.015983248371622436,
         'std_ncv_balanced_accuracy': 0.021528096620432452,
         'std_ncv_brier_loss': 0.007772220332146004,
         'std_ncv_f1': 0.026222057376635813,
         'std_ncv_informedness': 0.043056193240864904,
         'std_ncv_log_loss': 0.031641309436545105,
         'std_ncv_markedness': 0.04126075884663915,
         'std_ncv_mcc': 0.04163555855769524,
         'std_ncv_negative_predictive_value': 0.023013452997883148,
         'std_ncv_precision': 0.028613058663774945,
         'std_ncv_precision_recall_auc': 0.016382158340169182,
         'std_ncv_roc_auc': 0.025279166642526836,
         'std_ncv_sensitivity': 0.037037037037037056,
         'std_ncv_specificity': 0.021956631433620397,
         'std_test_average_precision': 0.06393937238203946,
         'std_test_balanced_accuracy': 0.09961106336937796,
         'std_test_brier_loss': 0.04759667591231498,
         'std_test_f1': 0.13148046577313846,
         'std_test_informedness': 0.19922212673875592,
         'std_test_log_loss': 0.13963883242198205,
         'std_test_markedness': 0.17323182345702032,
         'std_test_mcc': 0.18342130628650835,
         'std_test_negative_predictive_value': 0.11731162832639214,
         'std_test_precision': 0.13266370967203345,
         'std_test_precision_recall_auc': 0.07276734960613566,
         'std_test_roc_auc': 0.07282250966447257,
         'std_test_sensitivity': 0.1886895373267915,
         'std_test_specificity': 0.10431506436302106,
         'std_train_average_precision': 7.268115783753716e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.002546157229116447,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.015632428655891723,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 7.268115783753716e-17,
         'std_train_roc_auc': 1.586032892321652e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([1.        , 0.91666667, 0.95      , 1.        , 1.        ,
       0.95      , 1.        , 1.        , 0.91666667, 1.        ,
       1.        , 0.91666667, 0.91666667, 1.        , 0.91666667,
       0.8875    , 1.        , 0.95      , 1.        , 0.91666667,
       0.91666667, 0.95      , 1.        , 1.        , 1.        ,
       1.        , 0.91666667, 1.        , 1.        , 1.        ,
       0.95      , 0.89285714, 1.        , 1.        , 0.80555556,
       1.        , 1.        , 1.        , 0.64285714, 1.        ,
       1.        , 0.91666667, 1.        , 0.91666667, 0.91666667,
       0.95      , 0.95      , 1.        , 1.        , 1.        ]),
         'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.875     , 1.        , 0.83333333, 0.9       ,
       1.        , 0.75      , 0.875     , 0.83333333, 0.73333333,
       0.75      , 1.        , 0.875     , 1.        , 0.8       ,
       0.875     , 0.875     , 0.875     , 0.9       , 0.83333333,
       0.875     , 0.875     , 0.75      , 1.        , 0.9       ,
       0.75      , 0.75      , 1.        , 0.83333333, 0.66666667,
       0.875     , 1.        , 0.875     , 0.56666667, 0.83333333,
       0.875     , 0.875     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333]),
         'test_brier_loss': array([0.1119    , 0.17994588, 0.135775  , 0.0346625 , 0.0736495 ,
       0.1543625 , 0.09046562, 0.0829835 , 0.104525  , 0.0714875 ,
       0.0514    , 0.14805   , 0.1154625 , 0.1033735 , 0.137686  ,
       0.1634875 , 0.051     , 0.1101395 , 0.077825  , 0.111825  ,
       0.105193  , 0.1315    , 0.0675425 , 0.1045235 , 0.0798375 ,
       0.082125  , 0.1567    , 0.157576  , 0.02967412, 0.065575  ,
       0.1169875 , 0.1532    , 0.0269    , 0.08601   , 0.16916725,
       0.056672  , 0.023315  , 0.09360225, 0.2862125 , 0.0945445 ,
       0.06795   , 0.119504  , 0.037409  , 0.1139735 , 0.1231375 ,
       0.1197465 , 0.10355   , 0.04924712, 0.0855    , 0.08951312]),
         'test_f1': array([0.85714286, 0.66666667, 0.75      , 1.        , 1.        ,
       0.66666667, 0.85714286, 1.        , 0.8       , 0.85714286,
       1.        , 0.66666667, 0.85714286, 0.8       , 0.66666667,
       0.66666667, 1.        , 0.85714286, 1.        , 0.75      ,
       0.85714286, 0.85714286, 0.85714286, 0.85714286, 0.8       ,
       0.85714286, 0.85714286, 0.66666667, 1.        , 0.85714286,
       0.75      , 0.75      , 1.        , 0.8       , 0.5       ,
       0.88888889, 1.        , 0.85714286, 0.4       , 0.8       ,
       0.85714286, 0.85714286, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ]),
         'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 1.        ,
       0.5       , 0.75      , 1.        , 0.66666667, 0.8       ,
       1.        , 0.5       , 0.75      , 0.66666667, 0.46666667,
       0.5       , 1.        , 0.75      , 1.        , 0.6       ,
       0.75      , 0.75      , 0.75      , 0.8       , 0.66666667,
       0.75      , 0.75      , 0.5       , 1.        , 0.8       ,
       0.5       , 0.5       , 1.        , 0.66666667, 0.33333333,
       0.75      , 1.        , 0.75      , 0.13333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667]),
         'test_log_loss': array([0.37261331, 0.51865631, 0.38058022, 0.17272067, 0.26064776,
       0.46123604, 0.30289928, 0.3021077 , 0.35114415, 0.23483143,
       0.23232147, 0.47495811, 0.35767877, 0.35940539, 0.3876333 ,
       0.45563783, 0.219797  , 0.36464954, 0.30221264, 0.32940237,
       0.34586439, 0.41161748, 0.24902933, 0.36892713, 0.27461547,
       0.26884899, 0.47883282, 0.46321949, 0.14583992, 0.24406793,
       0.3425845 , 0.46043609, 0.14440694, 0.2697247 , 0.49574226,
       0.22296232, 0.14710906, 0.32952097, 1.04724411, 0.31163885,
       0.23987045, 0.3825801 , 0.18744737, 0.35865848, 0.3605392 ,
       0.36888297, 0.32434186, 0.21638552, 0.29168887, 0.29724445]),
         'test_markedness': array([0.8       , 0.66666667, 0.5       , 1.        , 1.        ,
       0.66666667, 0.8       , 1.        , 0.83333333, 0.75      ,
       1.        , 0.66666667, 0.8       , 0.83333333, 0.46666667,
       0.66666667, 1.        , 0.8       , 1.        , 0.6       ,
       0.8       , 0.8       , 0.8       , 0.75      , 0.83333333,
       0.8       , 0.8       , 0.66666667, 1.        , 0.75      ,
       0.5       , 0.5       , 1.        , 0.83333333, 0.71428571,
       0.8       , 1.        , 0.8       , 0.16666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.46666667,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333]),
         'test_mcc': array([0.77459667, 0.57735027, 0.5       , 1.        , 1.        ,
       0.57735027, 0.77459667, 1.        , 0.74535599, 0.77459667,
       1.        , 0.57735027, 0.77459667, 0.74535599, 0.46666667,
       0.57735027, 1.        , 0.77459667, 1.        , 0.6       ,
       0.77459667, 0.77459667, 0.77459667, 0.77459667, 0.74535599,
       0.77459667, 0.77459667, 0.57735027, 1.        , 0.77459667,
       0.5       , 0.5       , 1.        , 0.74535599, 0.48795004,
       0.77459667, 1.        , 0.77459667, 0.1490712 , 0.74535599,
       0.77459667, 0.77459667, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599]),
         'test_negative_predictive_value': array([0.8       , 0.66666667, 0.75      , 1.        , 1.        ,
       0.66666667, 0.8       , 1.        , 0.83333333, 1.        ,
       1.        , 0.66666667, 0.8       , 0.83333333, 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 1.        ,
       0.8       , 0.8       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.66666667, 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 0.8       , 0.66666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333]),
         'test_precision': array([1.        , 1.        , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       1.        , 1.        , 1.        , 0.75      , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       0.8       , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 1.        ]),
         'test_precision_recall_auc': array([1.        , 0.90833333, 0.94375   , 1.        , 1.        ,
       0.94375   , 1.        , 1.        , 0.90277778, 1.        ,
       1.        , 0.90833333, 0.90833333, 1.        , 0.90277778,
       0.87083333, 1.        , 0.94375   , 1.        , 0.90277778,
       0.90833333, 0.94375   , 1.        , 1.        , 1.        ,
       1.        , 0.90833333, 1.        , 1.        , 1.        ,
       0.94375   , 0.88392857, 1.        , 1.        , 0.76388889,
       1.        , 1.        , 1.        , 0.59920635, 1.        ,
       1.        , 0.90833333, 1.        , 0.90277778, 0.90277778,
       0.94375   , 0.94375   , 1.        , 1.        , 1.        ]),
         'test_roc_auc': array([1.        , 0.875     , 0.9375    , 1.        , 1.        ,
       0.9375    , 1.        , 1.        , 0.93333333, 1.        ,
       1.        , 0.875     , 0.875     , 1.        , 0.93333333,
       0.875     , 1.        , 0.9375    , 1.        , 0.93333333,
       0.875     , 0.9375    , 1.        , 1.        , 1.        ,
       1.        , 0.875     , 1.        , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 1.        , 0.86666667,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 0.875     , 1.        , 0.93333333, 0.93333333,
       0.9375    , 0.9375    , 1.        , 1.        , 1.        ]),
         'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 1.        ,
       0.5       , 0.75      , 1.        , 0.66666667, 1.        ,
       1.        , 0.5       , 0.75      , 0.66666667, 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 0.75      , 0.33333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 1.  , 0.75, 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 1.  , 1.  ,
       1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 0.75, 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 1.  ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01143854, 0.00832933, 0.00819063, 0.01224896, 0.01078729,
       0.01531146, 0.01335431, 0.01422433, 0.007925  , 0.0089625 ,
       0.01641667, 0.01435625, 0.00835938, 0.01147067, 0.00822663,
       0.01327917, 0.01310313, 0.00988233, 0.01189479, 0.01394375,
       0.01121675, 0.00884167, 0.01432488, 0.0114015 , 0.01596354,
       0.01200104, 0.01141458, 0.00834671, 0.0123101 , 0.01001146,
       0.00797083, 0.00860417, 0.01144583, 0.01261325, 0.01258026,
       0.01500233, 0.01445667, 0.0090211 , 0.00577083, 0.01079946,
       0.01225625, 0.00727579, 0.01187083, 0.0104574 , 0.007425  ,
       0.00946504, 0.00849375, 0.01306397, 0.00987708, 0.00925529]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.07707518, 0.06347532, 0.06386476, 0.07862666, 0.07973726,
       0.09873766, 0.09766568, 0.10522172, 0.06195471, 0.06791739,
       0.10795466, 0.09873373, 0.06512445, 0.09067049, 0.06508439,
       0.09645722, 0.09622252, 0.07075823, 0.0889997 , 0.09960174,
       0.07793701, 0.07871399, 0.10484328, 0.08904281, 0.10956813,
       0.07640097, 0.08576228, 0.066856  , 0.08951721, 0.07425367,
       0.06212432, 0.06116526, 0.07842769, 0.08773104, 0.09441089,
       0.10784912, 0.1080535 , 0.06894913, 0.04828925, 0.07774857,
       0.07972835, 0.0596981 , 0.0867733 , 0.07408349, 0.06217086,
       0.07280232, 0.06595758, 0.09054994, 0.06894322, 0.07072229]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([4, 3, 2, 0, 0, 3, 5, 1, 5, 1, 5, 3, 5, 0, 1, 0, 1, 3, 0, 0, 0, 0,
       2, 2, 2, 3, 5, 3, 4, 2, 0, 3, 3, 0, 0, 0, 3, 3, 0, 3, 2, 4, 2, 4,
       2, 3, 0, 0, 1, 1]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}],
                          'best_inner_scores': array([0.81967013, 0.92219279, 0.94746018, 0.86713392, 0.87933695,
       0.89029336, 0.87345629, 0.77291225, 0.88941563, 0.88834359,
       0.82635807, 0.82044847, 0.90953501, 0.90636833, 0.92624815,
       0.91031909, 0.86039646, 0.87636486, 0.96539616, 0.81406683,
       0.87322409, 0.90672431, 0.81504098, 0.9464805 , 0.85745639,
       0.89630255, 0.87410112, 0.90402931, 0.81098581, 0.88568233,
       0.95117048, 0.82232528, 0.86017124, 0.83525699, 0.90327157,
       0.80117276, 0.85285435, 0.85315385, 0.97539434, 0.87477789,
       0.83316799, 0.90104094, 0.82944922, 0.87144264, 0.93398905,
       0.88844869, 0.85186449, 0.80346273, 0.93562343, 0.84309095]),
                          'best_params': {'randomforestclassifier__max_features': [0.1, 'sqrt'], 'randomforestclassifier__n_estimators': [500, 100, 1000]},
                          'max_ncv_average_precision': 0.9637788513150833,
                          'max_ncv_balanced_accuracy': 0.893939393939394,
                          'max_ncv_brier_loss': 0.1238075,
                          'max_ncv_f1': 0.8823529411764706,
                          'max_ncv_informedness': 0.7878787878787881,
                          'max_ncv_log_loss': 0.4181027641297768,
                          'max_ncv_markedness': 0.8125,
                          'max_ncv_mcc': 0.8000946913656627,
                          'max_ncv_negative_predictive_value': 0.875,
                          'max_ncv_precision': 0.9375,
                          'max_ncv_precision_recall_auc': 0.9629438423737231,
                          'max_ncv_roc_auc': 0.9646464646464645,
                          'max_ncv_sensitivity': 0.8333333333333334,
                          'max_ncv_specificity': 0.9545454545454546,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.28727499999999995,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 1.0442318856918844,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.015457291666666664,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.11375395558740513,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.9425550817595564,
                          'mean_ncv_balanced_accuracy': 0.8515151515151516,
                          'mean_ncv_brier_loss': 0.10263326749999999,
                          'mean_ncv_f1': 0.8308618682076936,
                          'mean_ncv_informedness': 0.703030303030303,
                          'mean_ncv_log_loss': 0.3377643982424041,
                          'mean_ncv_markedness': 0.7402951770451771,
                          'mean_ncv_mcc': 0.7213537463784621,
                          'mean_ncv_negative_predictive_value': 0.8313803418803418,
                          'mean_ncv_precision': 0.9089148351648351,
                          'mean_ncv_precision_recall_auc': 0.9419957178887536,
                          'mean_ncv_roc_auc': 0.940909090909091,
                          'mean_ncv_sensitivity': 0.7666666666666666,
                          'mean_ncv_specificity': 0.9363636363636365,
                          'mean_test_average_precision': 0.9568015873015873,
                          'mean_test_balanced_accuracy': 0.8521666666666667,
                          'mean_test_brier_loss': 0.10263326750000001,
                          'mean_test_f1': 0.8167142857142856,
                          'mean_test_informedness': 0.7043333333333333,
                          'mean_test_log_loss': 0.3377643982424041,
                          'mean_test_markedness': 0.7712380952380953,
                          'mean_test_mcc': 0.7349578067425597,
                          'mean_test_negative_predictive_value': 0.8455714285714286,
                          'mean_test_precision': 0.9256666666666666,
                          'mean_test_precision_recall_auc': 0.953734126984127,
                          'mean_test_roc_auc': 0.954375,
                          'mean_test_sensitivity': 0.7633333333333333,
                          'mean_test_specificity': 0.941,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.011242515625,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.08271521256969093,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.9114701043249638,
                          'min_ncv_balanced_accuracy': 0.8106060606060606,
                          'min_ncv_brier_loss': 0.08984270000000001,
                          'min_ncv_f1': 0.7741935483870968,
                          'min_ncv_informedness': 0.6212121212121211,
                          'min_ncv_log_loss': 0.29978245051424535,
                          'min_ncv_markedness': 0.700854700854701,
                          'min_ncv_mcc': 0.659832884433199,
                          'min_ncv_negative_predictive_value': 0.7777777777777778,
                          'min_ncv_precision': 0.875,
                          'min_ncv_precision_recall_auc': 0.9149289832314131,
                          'min_ncv_roc_auc': 0.8964646464646464,
                          'min_ncv_sensitivity': 0.6666666666666666,
                          'min_ncv_specificity': 0.9090909090909091,
                          'min_test_average_precision': 0.6666666666666667,
                          'min_test_balanced_accuracy': 0.5666666666666667,
                          'min_test_brier_loss': 0.0324625,
                          'min_test_f1': 0.4,
                          'min_test_informedness': 0.1333333333333333,
                          'min_test_log_loss': 0.17334059904187493,
                          'min_test_markedness': 0.16666666666666652,
                          'min_test_mcc': 0.14907119849998599,
                          'min_test_negative_predictive_value': 0.6666666666666666,
                          'min_test_precision': 0.5,
                          'min_test_precision_recall_auc': 0.6388888888888888,
                          'min_test_roc_auc': 0.7,
                          'min_test_sensitivity': 0.3333333333333333,
                          'min_test_specificity': 0.6,
                          'min_train_average_precision': 0.9999999999999999,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.005841666666666666,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.047719481351665406,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999999,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.92354497, 0.95993781, 0.94431521, 0.9405118 , 0.94693882,
       0.94940415, 0.9114701 , 0.92948002, 0.95616908, 0.96377885]),
                          'ncv_balanced_accuracy': array([0.83838384, 0.86616162, 0.84343434, 0.84343434, 0.84343434,
       0.84343434, 0.81060606, 0.86616162, 0.86616162, 0.89393939]),
                          'ncv_brier_loss': array([0.11418647, 0.09476877, 0.10106605, 0.0998146 , 0.09240442,
       0.10178455, 0.1238075 , 0.1119925 , 0.0966651 , 0.0898427 ]),
                          'ncv_f1': array([0.8125    , 0.84848485, 0.82352941, 0.82352941, 0.82352941,
       0.82352941, 0.77419355, 0.84848485, 0.84848485, 0.88235294]),
                          'ncv_informedness': array([0.67676768, 0.73232323, 0.68686869, 0.68686869, 0.68686869,
       0.68686869, 0.62121212, 0.73232323, 0.73232323, 0.78787879]),
                          'ncv_log_loss': array([0.36238858, 0.31286442, 0.32811356, 0.31635278, 0.29978245,
       0.33163273, 0.38147643, 0.41810276, 0.32369116, 0.30323911]),
                          'ncv_markedness': array([0.73626374, 0.77333333, 0.70833333, 0.70833333, 0.70833333,
       0.70833333, 0.7008547 , 0.77333333, 0.77333333, 0.8125    ]),
                          'ncv_mcc': array([0.70588915, 0.75254898, 0.69751845, 0.69751845, 0.69751845,
       0.69751845, 0.65983288, 0.75254898, 0.75254898, 0.80009469]),
                          'ncv_negative_predictive_value': array([0.80769231, 0.84      , 0.83333333, 0.83333333, 0.83333333,
       0.83333333, 0.77777778, 0.84      , 0.84      , 0.875     ]),
                          'ncv_precision': array([0.92857143, 0.93333333, 0.875     , 0.875     , 0.875     ,
       0.875     , 0.92307692, 0.93333333, 0.93333333, 0.9375    ]),
                          'ncv_precision_recall_auc': array([0.92345413, 0.95851482, 0.94298948, 0.93908237, 0.94649678,
       0.94740013, 0.91492898, 0.92900822, 0.95513841, 0.96294384]),
                          'ncv_roc_auc': array([0.92676768, 0.96464646, 0.94191919, 0.93939394, 0.94570707,
       0.95959596, 0.91792929, 0.89646465, 0.95454545, 0.96212121]),
                          'ncv_sensitivity': array([0.72222222, 0.77777778, 0.77777778, 0.77777778, 0.77777778,
       0.77777778, 0.66666667, 0.77777778, 0.77777778, 0.83333333]),
                          'ncv_specificity': array([0.95454545, 0.95454545, 0.90909091, 0.90909091, 0.90909091,
       0.90909091, 0.95454545, 0.95454545, 0.95454545, 0.95454545]),
                          'ranked_best_inner_params': [{'frequency': 15, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
                          'std_ncv_average_precision': 0.016699852930572936,
                          'std_ncv_balanced_accuracy': 0.022485936507830324,
                          'std_ncv_brier_loss': 0.010781869753878043,
                          'std_ncv_f1': 0.028570682802757957,
                          'std_ncv_informedness': 0.04497187301566065,
                          'std_ncv_log_loss': 0.038025178441813814,
                          'std_ncv_markedness': 0.039645845041436416,
                          'std_ncv_mcc': 0.041387088413162236,
                          'std_ncv_negative_predictive_value': 0.02488905300930516,
                          'std_ncv_precision': 0.02942733306616296,
                          'std_ncv_precision_recall_auc': 0.015593629469875393,
                          'std_ncv_roc_auc': 0.02180280925375804,
                          'std_ncv_sensitivity': 0.04382281320814532,
                          'std_ncv_specificity': 0.023472626340651052,
                          'std_test_average_precision': 0.06571015027464452,
                          'std_test_balanced_accuracy': 0.09831070303413439,
                          'std_test_brier_loss': 0.04821992421560886,
                          'std_test_f1': 0.13303667713141568,
                          'std_test_informedness': 0.19662140606826878,
                          'std_test_log_loss': 0.13983836956654502,
                          'std_test_markedness': 0.16882939417925083,
                          'std_test_mcc': 0.1792044293340597,
                          'std_test_negative_predictive_value': 0.11213456750314552,
                          'std_test_precision': 0.13949252046366545,
                          'std_test_precision_recall_auc': 0.06897492067802385,
                          'std_test_roc_auc': 0.06455280988156473,
                          'std_test_sensitivity': 0.18999940326914289,
                          'std_test_specificity': 0.11189006995753482,
                          'std_train_average_precision': 6.344131569286608e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.002334940130894323,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.014540587976883885,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 6.344131569286608e-17,
                          'std_train_roc_auc': 2.74708955197652e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([1.        , 0.85416667, 0.95      , 1.        , 1.        ,
       0.95      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.91666667, 1.        , 0.91666667,
       0.8875    , 1.        , 0.95      , 1.        , 0.91666667,
       0.95      , 0.95      , 1.        , 1.        , 0.86666667,
       1.        , 0.95      , 1.        , 1.        , 1.        ,
       0.95      , 0.89285714, 1.        , 0.80555556, 0.86666667,
       1.        , 1.        , 0.95      , 0.66666667, 1.        ,
       1.        , 0.91666667, 1.        , 0.86666667, 0.91666667,
       1.        , 0.95      , 1.        , 1.        , 1.        ]),
                          'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 0.83333333,
       0.75      , 0.875     , 1.        , 0.83333333, 0.9       ,
       1.        , 0.875     , 0.75      , 0.83333333, 0.73333333,
       0.75      , 1.        , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.875     , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.875     , 0.75      , 0.9       , 0.9       ,
       0.75      , 0.875     , 1.        , 0.66666667, 0.66666667,
       1.        , 1.        , 0.875     , 0.56666667, 0.83333333,
       0.875     , 0.875     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333]),
                          'test_brier_loss': array([0.124302  , 0.1870625 , 0.13600537, 0.0418375 , 0.081725  ,
       0.153675  , 0.08734462, 0.0547615 , 0.10172675, 0.076336  ,
       0.04760175, 0.1064625 , 0.138616  , 0.0854125 , 0.1272375 ,
       0.164175  , 0.0382855 , 0.105675  , 0.1103    , 0.0806375 ,
       0.1015    , 0.1020125 , 0.0452985 , 0.11606575, 0.09714538,
       0.0655375 , 0.1498695 , 0.17215   , 0.057868  , 0.06349775,
       0.1445625 , 0.13515   , 0.0429625 , 0.1101125 , 0.18625   ,
       0.039075  , 0.0324625 , 0.1180625 , 0.287275  , 0.0830875 ,
       0.064878  , 0.1304295 , 0.047349  , 0.1089945 , 0.1316745 ,
       0.1055625 , 0.112975  , 0.0571375 , 0.0783015 , 0.095237  ]),
                          'test_f1': array([0.85714286, 0.66666667, 0.75      , 1.        , 0.8       ,
       0.66666667, 0.85714286, 1.        , 0.8       , 0.85714286,
       1.        , 0.85714286, 0.75      , 0.8       , 0.66666667,
       0.66666667, 1.        , 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.85714286, 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.85714286, 0.66666667, 0.85714286, 0.85714286,
       0.75      , 0.85714286, 1.        , 0.5       , 0.5       ,
       1.        , 1.        , 0.85714286, 0.4       , 0.8       ,
       0.85714286, 0.85714286, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ]),
                          'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 0.66666667,
       0.5       , 0.75      , 1.        , 0.66666667, 0.8       ,
       1.        , 0.75      , 0.5       , 0.66666667, 0.46666667,
       0.5       , 1.        , 0.75      , 0.6       , 0.66666667,
       0.75      , 0.75      , 0.75      , 0.6       , 0.66666667,
       0.75      , 0.75      , 0.5       , 0.8       , 0.8       ,
       0.5       , 0.75      , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 0.75      , 0.13333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667]),
                          'test_log_loss': array([0.40214162, 0.55262244, 0.38820952, 0.19471421, 0.27425512,
       0.44947965, 0.29643887, 0.21627362, 0.35417304, 0.2479569 ,
       0.22493923, 0.32881247, 0.41646498, 0.30911293, 0.36123819,
       0.44452614, 0.18209131, 0.3583614 , 0.34311272, 0.25367233,
       0.32778592, 0.32098908, 0.17463023, 0.36530351, 0.31020351,
       0.23573069, 0.45309232, 0.5033858 , 0.22935304, 0.23660181,
       0.41490055, 0.42270597, 0.21500604, 0.3143043 , 0.54046529,
       0.17759655, 0.1733406 , 0.39643842, 1.04423189, 0.29890636,
       0.24445762, 0.42119775, 0.20597626, 0.36371518, 0.383109  ,
       0.35434325, 0.34116045, 0.23075352, 0.27761048, 0.31232783]),
                          'test_markedness': array([0.8       , 0.66666667, 0.5       , 1.        , 0.83333333,
       0.66666667, 0.8       , 1.        , 0.83333333, 0.75      ,
       1.        , 0.8       , 0.5       , 0.83333333, 0.46666667,
       0.66666667, 1.        , 0.8       , 0.6       , 0.83333333,
       0.8       , 0.8       , 0.8       , 0.6       , 0.83333333,
       0.8       , 0.8       , 0.66666667, 0.75      , 0.75      ,
       0.5       , 0.8       , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 0.8       , 0.16666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.46666667,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333]),
                          'test_mcc': array([0.77459667, 0.57735027, 0.5       , 1.        , 0.74535599,
       0.57735027, 0.77459667, 1.        , 0.74535599, 0.77459667,
       1.        , 0.77459667, 0.5       , 0.74535599, 0.46666667,
       0.57735027, 1.        , 0.77459667, 0.6       , 0.74535599,
       0.77459667, 0.77459667, 0.77459667, 0.6       , 0.74535599,
       0.77459667, 0.77459667, 0.57735027, 0.77459667, 0.77459667,
       0.5       , 0.77459667, 1.        , 0.48795004, 0.48795004,
       1.        , 1.        , 0.77459667, 0.1490712 , 0.74535599,
       0.77459667, 0.77459667, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599]),
                          'test_negative_predictive_value': array([0.8       , 0.66666667, 0.75      , 1.        , 0.83333333,
       0.66666667, 0.8       , 1.        , 0.83333333, 1.        ,
       1.        , 0.8       , 0.75      , 0.83333333, 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.66666667, 1.        , 1.        ,
       0.75      , 0.8       , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 0.8       , 0.66666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333]),
                          'test_precision': array([1.        , 1.        , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 0.75      , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 0.75      , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 1.        ]),
                          'test_precision_recall_auc': array([1.        , 0.87708333, 0.94375   , 1.        , 1.        ,
       0.94375   , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.90833333, 1.        , 0.90277778,
       0.87083333, 1.        , 0.94375   , 1.        , 0.90277778,
       0.94375   , 0.94375   , 1.        , 1.        , 0.85      ,
       1.        , 0.94375   , 1.        , 1.        , 1.        ,
       0.94375   , 0.88392857, 1.        , 0.84722222, 0.85      ,
       1.        , 1.        , 0.94375   , 0.63888889, 1.        ,
       1.        , 0.90833333, 1.        , 0.85      , 0.90277778,
       1.        , 0.94375   , 1.        , 1.        , 1.        ]),
                          'test_roc_auc': array([1.        , 0.84375   , 0.9375    , 1.        , 1.        ,
       0.9375    , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.875     , 1.        , 0.93333333,
       0.875     , 1.        , 0.9375    , 1.        , 0.93333333,
       0.9375    , 0.9375    , 1.        , 1.        , 0.86666667,
       1.        , 0.9375    , 1.        , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 0.9       , 0.86666667,
       1.        , 1.        , 0.9375    , 0.7       , 1.        ,
       1.        , 0.875     , 1.        , 0.86666667, 0.93333333,
       1.        , 0.9375    , 1.        , 1.        , 1.        ]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.5       , 0.75      , 1.        , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 0.66666667, 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 0.75      , 0.33333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 1.  , 0.75, 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 0.6 , 1.  , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 1.  ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.01418567, 0.01364583, 0.00744619, 0.01198958, 0.01077917,
       0.01237812, 0.01302315, 0.01183892, 0.01054392, 0.00796338,
       0.01466441, 0.01278021, 0.01106938, 0.01003958, 0.00737296,
       0.00880625, 0.0105935 , 0.01421563, 0.00906458, 0.01128542,
       0.01232813, 0.00930417, 0.01145556, 0.00913678, 0.00991415,
       0.01432708, 0.01152979, 0.01043542, 0.01507371, 0.00876968,
       0.00743854, 0.01295521, 0.015075  , 0.0109875 , 0.01020729,
       0.01302396, 0.01545729, 0.01303333, 0.00584167, 0.01365417,
       0.01143472, 0.01076462, 0.01216115, 0.01356308, 0.00734289,
       0.01167604, 0.01060521, 0.01299792, 0.00836396, 0.00958196]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.10337735, 0.08653526, 0.06308095, 0.0806779 , 0.08120426,
       0.08781378, 0.09699037, 0.08602733, 0.0876965 , 0.06574819,
       0.10494903, 0.0940178 , 0.08723444, 0.07275575, 0.06216413,
       0.06602507, 0.07920132, 0.09553955, 0.06740531, 0.07976759,
       0.08080141, 0.06760768, 0.08375895, 0.06965556, 0.07541867,
       0.10024296, 0.08822163, 0.08348021, 0.11139327, 0.06916935,
       0.0577924 , 0.09425066, 0.1019873 , 0.07930608, 0.07408211,
       0.09010762, 0.11375396, 0.09614936, 0.04771948, 0.10083223,
       0.08256775, 0.08522913, 0.08771187, 0.09750807, 0.06157328,
       0.09042539, 0.07089924, 0.08869925, 0.06575761, 0.07144628]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([1, 1, 2, 2, 0, 0, 5, 1, 2, 0, 1, 4, 5, 0, 1, 2, 1, 3, 0, 3, 0, 0,
       0, 2, 0, 2, 5, 0, 3, 2, 0, 3, 2, 0, 0, 4, 4, 1, 0, 0, 1, 4, 2, 2,
       2, 1, 3, 4, 1, 0]),
             'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
             'best_inner_scores': array([0.85405644, 0.92945326, 0.9356261 , 0.87124183, 0.89237473,
       0.9265873 , 0.87918871, 0.8015873 , 0.89956427, 0.87298475,
       0.88624339, 0.84545855, 0.91688713, 0.92766885, 0.90697168,
       0.90983245, 0.89484127, 0.88690476, 0.96535948, 0.8422658 ,
       0.89373898, 0.90740741, 0.87301587, 0.94727669, 0.91503268,
       0.91953263, 0.90895062, 0.91666667, 0.83464052, 0.87211329,
       0.94003527, 0.87323633, 0.89440035, 0.81830065, 0.90675381,
       0.8106261 , 0.87477954, 0.8904321 , 0.97145969, 0.88039216,
       0.85030864, 0.89395944, 0.85890653, 0.86448802, 0.90196078,
       0.90079365, 0.87301587, 0.85515873, 0.93115468, 0.86448802]),
             'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [500, 1000, 100]},
             'max_ncv_average_precision': 0.9581769709478689,
             'max_ncv_balanced_accuracy': 0.8712121212121212,
             'max_ncv_brier_loss': 0.11521479999999999,
             'max_ncv_f1': 0.8571428571428571,
             'max_ncv_informedness': 0.7424242424242424,
             'max_ncv_log_loss': 0.36885480723298647,
             'max_ncv_markedness': 0.7733333333333334,
             'max_ncv_mcc': 0.7525489793561388,
             'max_ncv_negative_predictive_value': 0.8695652173913043,
             'max_ncv_precision': 0.9333333333333333,
             'max_ncv_precision_recall_auc': 0.9587468705671023,
             'max_ncv_roc_auc': 0.9608585858585859,
             'max_ncv_sensitivity': 0.8333333333333334,
             'max_ncv_specificity': 0.9545454545454546,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.2618625,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 0.8257909432835094,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.017033333333333334,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.11563016480213345,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.9390731640500958,
             'mean_ncv_balanced_accuracy': 0.8502525252525253,
             'mean_ncv_brier_loss': 0.10441644000000001,
             'mean_ncv_f1': 0.8309215049656226,
             'mean_ncv_informedness': 0.7005050505050505,
             'mean_ncv_log_loss': 0.3376668727620399,
             'mean_ncv_markedness': 0.729113159645129,
             'mean_ncv_mcc': 0.7146268236086841,
             'mean_ncv_negative_predictive_value': 0.8356677814938684,
             'mean_ncv_precision': 0.8934453781512606,
             'mean_ncv_precision_recall_auc': 0.9386617454222848,
             'mean_ncv_roc_auc': 0.938510101010101,
             'mean_ncv_sensitivity': 0.7777777777777777,
             'mean_ncv_specificity': 0.9227272727272726,
             'mean_test_average_precision': 0.9536349206349206,
             'mean_test_balanced_accuracy': 0.8518333333333333,
             'mean_test_brier_loss': 0.10441644000000001,
             'mean_test_f1': 0.8196825396825396,
             'mean_test_informedness': 0.7036666666666666,
             'mean_test_log_loss': 0.33766687276203994,
             'mean_test_markedness': 0.7596190476190476,
             'mean_test_mcc': 0.7296250194964089,
             'mean_test_negative_predictive_value': 0.8496190476190476,
             'mean_test_precision': 0.91,
             'mean_test_precision_recall_auc': 0.9498035714285714,
             'mean_test_roc_auc': 0.9511666666666667,
             'mean_test_sensitivity': 0.7766666666666667,
             'mean_test_specificity': 0.9269999999999999,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.010784443125000001,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.07952698696961043,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.9233405483405484,
             'min_ncv_balanced_accuracy': 0.8207070707070707,
             'min_ncv_brier_loss': 0.096307475,
             'min_ncv_f1': 0.7999999999999999,
             'min_ncv_informedness': 0.6414141414141414,
             'min_ncv_log_loss': 0.3196068089909533,
             'min_ncv_markedness': 0.6496163682864449,
             'min_ncv_mcc': 0.6455022270395531,
             'min_ncv_negative_predictive_value': 0.8076923076923077,
             'min_ncv_precision': 0.8235294117647058,
             'min_ncv_precision_recall_auc': 0.922216981890895,
             'min_ncv_roc_auc': 0.904040404040404,
             'min_ncv_sensitivity': 0.7222222222222222,
             'min_ncv_specificity': 0.8636363636363636,
             'min_test_average_precision': 0.6666666666666667,
             'min_test_balanced_accuracy': 0.5666666666666667,
             'min_test_brier_loss': 0.0273365,
             'min_test_f1': 0.4,
             'min_test_informedness': 0.1333333333333333,
             'min_test_log_loss': 0.15383261823960145,
             'min_test_markedness': 0.16666666666666652,
             'min_test_mcc': 0.14907119849998599,
             'min_test_negative_predictive_value': 0.6666666666666666,
             'min_test_precision': 0.5,
             'min_test_precision_recall_auc': 0.6388888888888888,
             'min_test_roc_auc': 0.7,
             'min_test_sensitivity': 0.3333333333333333,
             'min_test_specificity': 0.6,
             'min_train_average_precision': 0.9999999999999999,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.006090625,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.04965542879932666,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999999,
             'min_train_roc_auc': 1.0,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.92833258, 0.94639901, 0.94892896, 0.93512086, 0.94473389,
       0.92771919, 0.92334055, 0.92472767, 0.95817697, 0.95325196]),
             'ncv_balanced_accuracy': array([0.86616162, 0.86616162, 0.84343434, 0.82070707, 0.84343434,
       0.84343434, 0.83838384, 0.84343434, 0.86616162, 0.87121212]),
             'ncv_brier_loss': array([0.10310512, 0.09894465, 0.09920243, 0.11290218, 0.09814043,
       0.10714792, 0.1152148 , 0.1069063 , 0.09630748, 0.1062931 ]),
             'ncv_f1': array([0.84848485, 0.84848485, 0.82352941, 0.8       , 0.82352941,
       0.82352941, 0.8125    , 0.82352941, 0.84848485, 0.85714286]),
             'ncv_informedness': array([0.73232323, 0.73232323, 0.68686869, 0.64141414, 0.68686869,
       0.68686869, 0.67676768, 0.68686869, 0.73232323, 0.74242424]),
             'ncv_log_loss': array([0.33423204, 0.32142659, 0.32113185, 0.34715833, 0.32339467,
       0.34096076, 0.35738766, 0.36885481, 0.31960681, 0.34251522]),
             'ncv_markedness': array([0.77333333, 0.77333333, 0.70833333, 0.64961637, 0.70833333,
       0.70833333, 0.73626374, 0.70833333, 0.77333333, 0.75191816]),
             'ncv_mcc': array([0.75254898, 0.75254898, 0.69751845, 0.64550223, 0.69751845,
       0.69751845, 0.70588915, 0.69751845, 0.75254898, 0.74715612]),
             'ncv_negative_predictive_value': array([0.84      , 0.84      , 0.83333333, 0.82608696, 0.83333333,
       0.83333333, 0.80769231, 0.83333333, 0.84      , 0.86956522]),
             'ncv_precision': array([0.93333333, 0.93333333, 0.875     , 0.82352941, 0.875     ,
       0.875     , 0.92857143, 0.875     , 0.93333333, 0.88235294]),
             'ncv_precision_recall_auc': array([0.9273808 , 0.94690659, 0.94765753, 0.93526788, 0.94349945,
       0.9284851 , 0.92221698, 0.92430418, 0.95874687, 0.95215207]),
             'ncv_roc_auc': array([0.92550505, 0.95328283, 0.94949495, 0.93560606, 0.93939394,
       0.94191919, 0.9229798 , 0.9040404 , 0.96085859, 0.9520202 ]),
             'ncv_sensitivity': array([0.77777778, 0.77777778, 0.77777778, 0.77777778, 0.77777778,
       0.77777778, 0.72222222, 0.77777778, 0.77777778, 0.83333333]),
             'ncv_specificity': array([0.95454545, 0.95454545, 0.90909091, 0.86363636, 0.90909091,
       0.90909091, 0.95454545, 0.90909091, 0.95454545, 0.90909091]),
             'ranked_best_inner_params': [{'frequency': 16, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 11, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
             'std_ncv_average_precision': 0.012745561587278943,
             'std_ncv_balanced_accuracy': 0.01632432475703484,
             'std_ncv_brier_loss': 0.006409924648241889,
             'std_ncv_f1': 0.018639968701771526,
             'std_ncv_informedness': 0.03264864951406968,
             'std_ncv_log_loss': 0.016881462830806673,
             'std_ncv_markedness': 0.040117071134098764,
             'std_ncv_mcc': 0.035586775851751795,
             'std_ncv_negative_predictive_value': 0.015280919280086486,
             'std_ncv_precision': 0.03708728254374907,
             'std_ncv_precision_recall_auc': 0.012808930375252244,
             'std_ncv_roc_auc': 0.017127613031637713,
             'std_ncv_sensitivity': 0.026189140043946214,
             'std_ncv_specificity': 0.030679479895934246,
             'std_test_average_precision': 0.06570254969857003,
             'std_test_balanced_accuracy': 0.09724507344020067,
             'std_test_brier_loss': 0.0464517132609726,
             'std_test_f1': 0.1275155909474098,
             'std_test_informedness': 0.19449014688040134,
             'std_test_log_loss': 0.11966096958131829,
             'std_test_markedness': 0.1778068894207815,
             'std_test_mcc': 0.18284818963104932,
             'std_test_negative_predictive_value': 0.11347130457279166,
             'std_test_precision': 0.1455694892155502,
             'std_test_precision_recall_auc': 0.07251048750673857,
             'std_test_roc_auc': 0.06719755666179532,
             'std_test_sensitivity': 0.1824499434349335,
             'std_test_specificity': 0.11832590759492724,
             'std_train_average_precision': 6.728967680073322e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.0024790974501947734,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.014567939155068854,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 6.728967680073322e-17,
             'std_train_roc_auc': 0.0,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([1.        , 0.81666667, 0.95      , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.86666667, 1.        ,
       1.        , 1.        , 0.91666667, 1.        , 0.91666667,
       0.95      , 1.        , 0.95      , 1.        , 0.86666667,
       0.91666667, 0.91666667, 1.        , 1.        , 1.        ,
       1.        , 0.95      , 0.95      , 0.91666667, 1.        ,
       0.95      , 0.89285714, 1.        , 0.91666667, 0.80555556,
       1.        , 1.        , 1.        , 0.66666667, 0.91666667,
       1.        , 0.91666667, 1.        , 0.91666667, 0.91666667,
       0.95      , 0.95      , 1.        , 1.        , 1.        ]),
             'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.875     , 1.        , 0.83333333, 0.9       ,
       1.        , 0.875     , 0.75      , 0.83333333, 0.73333333,
       0.75      , 1.        , 0.875     , 0.8       , 0.73333333,
       0.875     , 0.875     , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.875     , 0.75      , 0.9       , 0.9       ,
       0.75      , 0.875     , 1.        , 0.83333333, 0.66666667,
       0.875     , 1.        , 0.875     , 0.56666667, 0.83333333,
       0.875     , 0.875     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.75      , 1.        , 0.9       , 0.83333333]),
             'test_brier_loss': array([0.1058205 , 0.1882465 , 0.12905312, 0.0329805 , 0.059425  ,
       0.1606125 , 0.08444975, 0.049331  , 0.115355  , 0.084975  ,
       0.029655  , 0.112782  , 0.13049763, 0.0988875 , 0.12419   ,
       0.16004388, 0.034767  , 0.1168125 , 0.1268    , 0.1260875 ,
       0.1101625 , 0.126925  , 0.0499875 , 0.10876462, 0.0948625 ,
       0.07949637, 0.15181625, 0.1655125 , 0.073025  , 0.0658895 ,
       0.143175  , 0.126425  , 0.0273365 , 0.0963375 , 0.1828    ,
       0.0567735 , 0.03327   , 0.091038  , 0.2618625 , 0.0915875 ,
       0.0623385 , 0.1320715 , 0.04809225, 0.1155345 , 0.12350062,
       0.119971  , 0.1444375 , 0.0874735 , 0.087696  , 0.0918875 ]),
             'test_f1': array([0.85714286, 0.66666667, 0.75      , 1.        , 1.        ,
       0.66666667, 0.85714286, 1.        , 0.8       , 0.85714286,
       1.        , 0.85714286, 0.75      , 0.8       , 0.66666667,
       0.66666667, 1.        , 0.85714286, 0.75      , 0.66666667,
       0.85714286, 0.85714286, 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.85714286, 0.66666667, 0.85714286, 0.85714286,
       0.75      , 0.85714286, 1.        , 0.8       , 0.5       ,
       0.88888889, 1.        , 0.85714286, 0.4       , 0.8       ,
       0.85714286, 0.85714286, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.75      , 1.        , 0.85714286, 0.8       ]),
             'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 1.        ,
       0.5       , 0.75      , 1.        , 0.66666667, 0.8       ,
       1.        , 0.75      , 0.5       , 0.66666667, 0.46666667,
       0.5       , 1.        , 0.75      , 0.6       , 0.46666667,
       0.75      , 0.75      , 0.75      , 0.6       , 0.66666667,
       0.75      , 0.75      , 0.5       , 0.8       , 0.8       ,
       0.5       , 0.75      , 1.        , 0.66666667, 0.33333333,
       0.75      , 1.        , 0.75      , 0.13333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.5       , 1.        , 0.8       , 0.66666667]),
             'test_log_loss': array([0.35429937, 0.54742459, 0.36762252, 0.17716907, 0.22464463,
       0.47027762, 0.28784948, 0.2052924 , 0.37924467, 0.26446878,
       0.16231014, 0.35212258, 0.39688677, 0.33867073, 0.35566902,
       0.43843949, 0.17321884, 0.3925852 , 0.36919226, 0.36235583,
       0.36320026, 0.4210879 , 0.18411673, 0.35032792, 0.29824056,
       0.26150736, 0.46257774, 0.48099931, 0.25393954, 0.24577983,
       0.41737404, 0.40066802, 0.15383262, 0.29073086, 0.52433278,
       0.22064504, 0.17772881, 0.32319667, 0.82579094, 0.29691258,
       0.24123813, 0.41861561, 0.20973273, 0.36539964, 0.36304793,
       0.37255349, 0.4251342 , 0.30939294, 0.30512294, 0.3003725 ]),
             'test_markedness': array([0.8       , 0.66666667, 0.5       , 1.        , 1.        ,
       0.66666667, 0.8       , 1.        , 0.83333333, 0.75      ,
       1.        , 0.8       , 0.5       , 0.83333333, 0.46666667,
       0.66666667, 1.        , 0.8       , 0.6       , 0.46666667,
       0.8       , 0.8       , 0.8       , 0.6       , 0.83333333,
       0.8       , 0.8       , 0.66666667, 0.75      , 0.75      ,
       0.5       , 0.8       , 1.        , 0.83333333, 0.71428571,
       0.8       , 1.        , 0.8       , 0.16666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.46666667,
       0.8       , 0.5       , 1.        , 0.75      , 0.83333333]),
             'test_mcc': array([0.77459667, 0.57735027, 0.5       , 1.        , 1.        ,
       0.57735027, 0.77459667, 1.        , 0.74535599, 0.77459667,
       1.        , 0.77459667, 0.5       , 0.74535599, 0.46666667,
       0.57735027, 1.        , 0.77459667, 0.6       , 0.46666667,
       0.77459667, 0.77459667, 0.77459667, 0.6       , 0.74535599,
       0.77459667, 0.77459667, 0.57735027, 0.77459667, 0.77459667,
       0.5       , 0.77459667, 1.        , 0.74535599, 0.48795004,
       0.77459667, 1.        , 0.77459667, 0.1490712 , 0.74535599,
       0.77459667, 0.77459667, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.5       , 1.        , 0.77459667, 0.74535599]),
             'test_negative_predictive_value': array([0.8       , 0.66666667, 0.75      , 1.        , 1.        ,
       0.66666667, 0.8       , 1.        , 0.83333333, 1.        ,
       1.        , 0.8       , 0.75      , 0.83333333, 0.8       ,
       0.66666667, 1.        , 0.8       , 1.        , 0.8       ,
       0.8       , 0.8       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.66666667, 1.        , 1.        ,
       0.75      , 0.8       , 1.        , 0.83333333, 0.71428571,
       1.        , 1.        , 0.8       , 0.66666667, 0.83333333,
       0.8       , 0.8       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.75      , 1.        , 1.        , 0.83333333]),
             'test_precision': array([1.        , 1.        , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 0.75      , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 0.75      , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       0.8       , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 0.75      , 1.        , 0.75      , 1.        ]),
             'test_precision_recall_auc': array([1.        , 0.81666667, 0.94375   , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.85      , 1.        ,
       1.        , 1.        , 0.90833333, 1.        , 0.90277778,
       0.94375   , 1.        , 0.94375   , 1.        , 0.85      ,
       0.90833333, 0.90833333, 1.        , 1.        , 1.        ,
       1.        , 0.94375   , 0.975     , 0.95833333, 1.        ,
       0.94375   , 0.88392857, 1.        , 0.90277778, 0.76388889,
       1.        , 1.        , 1.        , 0.63888889, 0.90277778,
       1.        , 0.90833333, 1.        , 0.90277778, 0.90277778,
       0.94375   , 0.94375   , 1.        , 1.        , 1.        ]),
             'test_roc_auc': array([1.        , 0.78125   , 0.9375    , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.86666667, 1.        ,
       1.        , 1.        , 0.875     , 1.        , 0.93333333,
       0.9375    , 1.        , 0.9375    , 1.        , 0.86666667,
       0.875     , 0.875     , 1.        , 1.        , 1.        ,
       1.        , 0.9375    , 0.96875   , 0.96666667, 1.        ,
       0.9375    , 0.8125    , 1.        , 0.93333333, 0.86666667,
       1.        , 1.        , 1.        , 0.7       , 0.93333333,
       1.        , 0.875     , 1.        , 0.93333333, 0.93333333,
       0.9375    , 0.9375    , 1.        , 1.        , 1.        ]),
             'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 1.        ,
       0.5       , 0.75      , 1.        , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 0.66666667, 0.66666667,
       0.5       , 1.        , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.33333333,
       1.        , 1.        , 0.75      , 0.33333333, 0.66666667,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 1.  , 0.75, 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 0.75, 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       0.8 , 1.  , 0.75, 1.  , 0.8 , 1.  ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01093604, 0.00814708, 0.00738126, 0.01102747, 0.01081042,
       0.01234583, 0.01335066, 0.01236617, 0.00792506, 0.00766354,
       0.01192783, 0.01358388, 0.0109716 , 0.00922083, 0.00829287,
       0.00935908, 0.01034192, 0.01262812, 0.0075625 , 0.01647708,
       0.01019063, 0.00890938, 0.01199896, 0.00939823, 0.0110875 ,
       0.01060122, 0.01109339, 0.00831875, 0.01703333, 0.0091605 ,
       0.00680938, 0.01131042, 0.0105067 , 0.01328333, 0.01077083,
       0.01592429, 0.01437833, 0.00880871, 0.00609062, 0.01208438,
       0.01126996, 0.01018612, 0.01158159, 0.01053054, 0.00757294,
       0.01019283, 0.01347708, 0.01510875, 0.00872421, 0.0105    ]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.07735615, 0.06419074, 0.06149237, 0.08093455, 0.07839544,
       0.07594028, 0.09758081, 0.08699617, 0.06589836, 0.06406555,
       0.08468076, 0.10091101, 0.08609733, 0.07139966, 0.06765324,
       0.07112183, 0.07503313, 0.09191138, 0.0619992 , 0.10557508,
       0.07419101, 0.06596747, 0.08791883, 0.0706142 , 0.08054604,
       0.0770424 , 0.08618788, 0.0652511 , 0.11563016, 0.07101925,
       0.05853942, 0.08937916, 0.07933398, 0.08830722, 0.07406128,
       0.11099263, 0.10871101, 0.06809326, 0.04965543, 0.08570041,
       0.08114356, 0.0812666 , 0.08654958, 0.07422206, 0.06274461,
       0.07392394, 0.08874265, 0.10882208, 0.06734131, 0.07521777]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

C28 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.959 ± 0.063939'],
 'mean_test_balanced_accuracy': ['0.861 ± 0.099611'],
 'mean_test_brier_loss': ['0.10213 ± 0.047597'],
 'mean_test_f1': ['0.830 ± 0.131480'],
 'mean_test_informedness': ['0.722 ± 0.199222'],
 'mean_test_log_loss': ['0.3378 ± 0.139639'],
 'mean_test_markedness': ['0.782 ± 0.173232'],
 'mean_test_mcc': ['0.750 ± 0.183421'],
 'mean_test_negative_predictive_value': ['0.852 ± 0.117312'],
 'mean_test_precision': ['0.930 ± 0.132664'],
 'mean_test_precision_recall_auc': ['0.954 ± 0.072767'],
 'mean_test_roc_auc': ['0.953 ± 0.072823'],
 'mean_test_sensitivity': ['0.778 ± 0.188690'],
 'mean_test_specificity': ['0.944 ± 0.104315'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01110 ± 0.002546'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0811 ± 0.015632'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.957 ± 0.065710'],
 'mean_test_balanced_accuracy': ['0.852 ± 0.098311'],
 'mean_test_brier_loss': ['0.10263 ± 0.048220'],
 'mean_test_f1': ['0.817 ± 0.133037'],
 'mean_test_informedness': ['0.704 ± 0.196621'],
 'mean_test_log_loss': ['0.3378 ± 0.139838'],
 'mean_test_markedness': ['0.771 ± 0.168829'],
 'mean_test_mcc': ['0.735 ± 0.179204'],
 'mean_test_negative_predictive_value': ['0.846 ± 0.112135'],
 'mean_test_precision': ['0.926 ± 0.139493'],
 'mean_test_precision_recall_auc': ['0.954 ± 0.068975'],
 'mean_test_roc_auc': ['0.954 ± 0.064553'],
 'mean_test_sensitivity': ['0.763 ± 0.189999'],
 'mean_test_specificity': ['0.941 ± 0.111890'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01124 ± 0.002335'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0827 ± 0.014541'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.954 ± 0.065703'],
 'mean_test_balanced_accuracy': ['0.852 ± 0.097245'],
 'mean_test_brier_loss': ['0.10442 ± 0.046452'],
 'mean_test_f1': ['0.820 ± 0.127516'],
 'mean_test_informedness': ['0.704 ± 0.194490'],
 'mean_test_log_loss': ['0.3377 ± 0.119661'],
 'mean_test_markedness': ['0.760 ± 0.177807'],
 'mean_test_mcc': ['0.730 ± 0.182848'],
 'mean_test_negative_predictive_value': ['0.850 ± 0.113471'],
 'mean_test_precision': ['0.910 ± 0.145569'],
 'mean_test_precision_recall_auc': ['0.950 ± 0.072510'],
 'mean_test_roc_auc': ['0.951 ± 0.067198'],
 'mean_test_sensitivity': ['0.777 ± 0.182450'],
 'mean_test_specificity': ['0.927 ± 0.118326'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01078 ± 0.002479'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0795 ± 0.014568'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.943 ± 0.015983'],
 'mean_ncv_balanced_accuracy': ['0.859 ± 0.021528'],
 'mean_ncv_brier_loss': ['0.10213 ± 0.007772'],
 'mean_ncv_f1': ['0.841 ± 0.026222'],
 'mean_ncv_informedness': ['0.719 ± 0.043056'],
 'mean_ncv_log_loss': ['0.3378 ± 0.031641'],
 'mean_ncv_markedness': ['0.754 ± 0.041261'],
 'mean_ncv_mcc': ['0.736 ± 0.041636'],
 'mean_ncv_negative_predictive_value': ['0.839 ± 0.023013'],
 'mean_ncv_precision': ['0.916 ± 0.028613'],
 'mean_ncv_precision_recall_auc': ['0.942 ± 0.016382'],
 'mean_ncv_roc_auc': ['0.938 ± 0.025279'],
 'mean_ncv_sensitivity': ['0.778 ± 0.037037'],
 'mean_ncv_specificity': ['0.941 ± 0.021957']}

C28 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.943 ± 0.016700'],
 'mean_ncv_balanced_accuracy': ['0.852 ± 0.022486'],
 'mean_ncv_brier_loss': ['0.10263 ± 0.010782'],
 'mean_ncv_f1': ['0.831 ± 0.028571'],
 'mean_ncv_informedness': ['0.703 ± 0.044972'],
 'mean_ncv_log_loss': ['0.3378 ± 0.038025'],
 'mean_ncv_markedness': ['0.740 ± 0.039646'],
 'mean_ncv_mcc': ['0.721 ± 0.041387'],
 'mean_ncv_negative_predictive_value': ['0.831 ± 0.024889'],
 'mean_ncv_precision': ['0.909 ± 0.029427'],
 'mean_ncv_precision_recall_auc': ['0.942 ± 0.015594'],
 'mean_ncv_roc_auc': ['0.941 ± 0.021803'],
 'mean_ncv_sensitivity': ['0.767 ± 0.043823'],
 'mean_ncv_specificity': ['0.936 ± 0.023473']}

C28 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.939 ± 0.012746'],
 'mean_ncv_balanced_accuracy': ['0.850 ± 0.016324'],
 'mean_ncv_brier_loss': ['0.10442 ± 0.006410'],
 'mean_ncv_f1': ['0.831 ± 0.018640'],
 'mean_ncv_informedness': ['0.701 ± 0.032649'],
 'mean_ncv_log_loss': ['0.3377 ± 0.016881'],
 'mean_ncv_markedness': ['0.729 ± 0.040117'],
 'mean_ncv_mcc': ['0.715 ± 0.035587'],
 'mean_ncv_negative_predictive_value': ['0.836 ± 0.015281'],
 'mean_ncv_precision': ['0.893 ± 0.037087'],
 'mean_ncv_precision_recall_auc': ['0.939 ± 0.012809'],
 'mean_ncv_roc_auc': ['0.939 ± 0.017128'],
 'mean_ncv_sensitivity': ['0.778 ± 0.026189'],
 'mean_ncv_specificity': ['0.923 ± 0.030679']}

C28 end: 16.09.2022_13-20-23
++++++++++++++++++++++++++++++++++++++++
End: 16.09.2022_13-20-23
========================================

