========================================
numpy version: 1.21.2
pandas version: 1.3.5
scikit-learn version: 1.0.2
scipy version: 1.7.3
========================================

data file: /beegfs/work/tu_iizre01/MalariaVaccineEfficacyPrediction/data/proteome_data/correlationFiltering/preprocessed_selective_data_spearman_filtered_threshold0.2.csv

start time: 16.09.2022_12-31-47

++++++++++++++++++++++++++++++++++++++++
III14 start: 16.09.2022_12-31-47

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [ 0  2  1  4  4  4  0  2  2  3  3  4  3  1  2  0  0  1  0  4  4  3  2  2
  3  2  1  1  3  2  4  3  1  1  0  0  0  1  4  3 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 0  6 15 16 18 34 35 36]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [ 2 13 17 26 27 32 33 37]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  7  8 14 22 23 25 29]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [ 9 10 12 21 24 28 31 39]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [ 3  4  5 11 19 20 30 38]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [ 1  0  0  3  0  4  3  3  0  3  3  4  2  1  4  1  0  4  4  1  0  0  2  2
  3  1  0  1  4  4  3  2  2  4  2  2  1  3  2  1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  2  4  8 16 20 21 26]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [ 0 13 15 19 25 27 36 39]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [12 22 23 31 32 34 35 38]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 3  6  7  9 10 24 30 37]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 5 11 14 17 18 28 29 33]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [ 2  3  1  3  0  2  3  4  0  2  2  4  0  1  4  3  0  3  0  0  3  4  1  4
  4  2  3  2  0  2  1  1  0  1  1  4  1  3  4  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 4  8 12 16 18 19 28 32]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [ 2 13 22 30 31 33 34 36]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 0  5  9 10 25 27 29 39]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [ 1  3  6 15 17 20 26 37]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [ 7 11 14 21 23 24 35 38]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [ 2  1  0  3  2  4  1  0  3  1  3  0  0  3  3  2  1  3  1  1  3  2  2  4
  4  2  4  1  4  1  0  4  0  4  0  4  3  2  0  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [ 2  7 11 12 30 32 34 38]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  6  9 16 18 19 27 29]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [ 0  4 15 21 22 25 37 39]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [ 3  8 10 13 14 17 20 36]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [ 5 23 24 26 28 31 33 35]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [ 1  2  0  1  4  1  4  4  2  1  3  4  4  0  3  0  3  1  4  3  2  0  3  2
  3  3  2  1  0  4  2  0  0  4  1  2  2  0  1  3 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [ 2 13 15 21 28 31 32 37]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [ 0  3  5  9 17 27 34 38]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [ 1  8 20 23 26 30 35 36]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [10 14 16 19 22 24 25 39]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 4  6  7 11 12 18 29 33]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [ 1  2  0  4  0  3  4  2  0  2  1  0  2  4  4  2  0  1  3  1  1  1  2  0
  2  3  2  4  0  4  3  1  4  3  1  3  3  4  3  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 2  4  8 11 16 23 28 39]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 0 10 17 19 20 21 31 34]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 1  7  9 12 15 22 24 26]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [ 5 18 25 30 33 35 36 38]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [ 3  6 13 14 27 29 32 37]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [ 1  2  4  4  1  3  2  0  2  2  1  3  3  1  0  2  4  0  1  3  3  4  0  1
  0  3  4  4  0  3  2  3  1  0  4  1  4  0  2  2 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [ 7 14 17 22 24 28 33 37]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [ 0  4 10 13 18 23 32 35]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [ 1  6  8  9 15 30 38 39]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [ 5 11 12 19 20 25 29 31]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [ 2  3 16 21 26 27 34 36]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [ 3  4  3  0  1  0  2  4  2  1  2  3  4  0  3  4  4  2  0  0  2  1  4  3
  4  0  2  1  1  3  2  0  3  1  0  1  3  2  1  4 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 3  5 13 18 19 25 31 34]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [ 4  9 21 27 28 33 35 38]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 6  8 10 17 20 26 30 37]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [ 0  2 11 14 23 29 32 36]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 1  7 12 15 16 22 24 39]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [ 3  2  1  4  0  4  2  4  2  1  3  0  4  1  4  3  2  1  0  3  0  3  4  1
  1  0  0  2  3  4  1  3  4  0  2  2  3  1  2  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [ 4 11 18 20 25 26 33 39]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 2  9 13 17 23 24 30 37]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [ 1  6  8 16 27 34 35 38]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [ 0 10 15 19 21 28 31 36]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 3  5  7 12 14 22 29 32]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [ 4  4  1  4  3  1  3  0  1  1  0  2  3  3  3  4  3  4  2  0  3  2  0  0
  2  1  3  1  2  1  1  2  0  0  4  4  4  2  2  0 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [ 7 10 19 22 23 32 33 39]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 2  5  8  9 25 27 29 30]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [11 18 21 24 28 31 37 38]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 4  6 12 13 14 16 20 26]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 0  1  3 15 17 34 35 36]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_12-31-47.
End of grid search at 16.09.2022_12-32-01.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_12-32-01.
End of grid search at 16.09.2022_12-32-12.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_12-32-12.
End of grid search at 16.09.2022_12-32-24.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_12-32-24.
End of grid search at 16.09.2022_12-32-36.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_12-32-36.
End of grid search at 16.09.2022_12-32-47.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_12-32-54.
End of grid search at 16.09.2022_12-33-07.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_12-33-07.
End of grid search at 16.09.2022_12-33-19.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_12-33-19.
End of grid search at 16.09.2022_12-33-32.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_12-33-32.
End of grid search at 16.09.2022_12-33-44.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_12-33-44.
End of grid search at 16.09.2022_12-33-57.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_12-34-05.
End of grid search at 16.09.2022_12-34-22.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_12-34-22.
End of grid search at 16.09.2022_12-34-40.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_12-34-40.
End of grid search at 16.09.2022_12-34-57.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_12-34-57.
End of grid search at 16.09.2022_12-35-14.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_12-35-14.
End of grid search at 16.09.2022_12-35-32.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_12-35-38.
End of grid search at 16.09.2022_12-35-51.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_12-35-51.
End of grid search at 16.09.2022_12-36-04.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_12-36-04.
End of grid search at 16.09.2022_12-36-16.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_12-36-16.
End of grid search at 16.09.2022_12-36-28.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_12-36-28.
End of grid search at 16.09.2022_12-36-41.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_12-36-55.
End of grid search at 16.09.2022_12-37-20.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_12-37-20.
End of grid search at 16.09.2022_12-37-46.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_12-37-46.
End of grid search at 16.09.2022_12-38-11.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_12-38-11.
End of grid search at 16.09.2022_12-38-37.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_12-38-37.
End of grid search at 16.09.2022_12-39-03.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_12-39-15.
End of grid search at 16.09.2022_12-39-32.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_12-39-32.
End of grid search at 16.09.2022_12-39-50.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_12-39-50.
End of grid search at 16.09.2022_12-40-07.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_12-40-07.
End of grid search at 16.09.2022_12-40-24.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_12-40-24.
End of grid search at 16.09.2022_12-40-41.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_12-40-53.
End of grid search at 16.09.2022_12-41-11.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_12-41-11.
End of grid search at 16.09.2022_12-41-28.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_12-41-28.
End of grid search at 16.09.2022_12-41-45.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_12-41-45.
End of grid search at 16.09.2022_12-42-02.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_12-42-02.
End of grid search at 16.09.2022_12-42-20.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_12-42-35.
End of grid search at 16.09.2022_12-42-52.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_12-42-52.
End of grid search at 16.09.2022_12-43-09.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_12-43-09.
End of grid search at 16.09.2022_12-43-27.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_12-43-27.
End of grid search at 16.09.2022_12-43-44.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_12-43-44.
End of grid search at 16.09.2022_12-44-01.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_12-44-16.
End of grid search at 16.09.2022_12-44-33.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_12-44-33.
End of grid search at 16.09.2022_12-44-51.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_12-44-51.
End of grid search at 16.09.2022_12-45-08.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_12-45-08.
End of grid search at 16.09.2022_12-45-25.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_12-45-25.
End of grid search at 16.09.2022_12-45-42.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_12-45-52.
End of grid search at 16.09.2022_12-46-10.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_12-46-10.
End of grid search at 16.09.2022_12-46-27.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_12-46-27.
End of grid search at 16.09.2022_12-46-44.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_12-46-44.
End of grid search at 16.09.2022_12-47-01.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_12-47-01.
End of grid search at 16.09.2022_12-47-19.

III14 results:
{'mcc': {'best_inner_indices': array([0, 3, 0, 3, 3, 1, 4, 3, 0, 1, 0, 3, 0, 3, 3, 0, 4, 5, 1, 5, 0, 1,
       5, 3, 1, 0, 1, 1, 1, 1, 4, 1, 5, 1, 1, 2, 2, 0, 0, 1, 0, 1, 4, 0,
       1, 0, 3, 0, 0, 3]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}],
         'best_inner_scores': array([0.57469671, 0.73223141, 0.72536256, 0.62557745, 0.66807953,
       0.74819006, 0.66406377, 0.50988518, 0.70815923, 0.64569247,
       0.63907408, 0.57429853, 0.74535599, 0.64569247, 0.68601433,
       0.7037037 , 0.68439134, 0.61807005, 0.81218764, 0.65215135,
       0.61758068, 0.77164442, 0.51118042, 0.73364642, 0.64412032,
       0.70311315, 0.66144338, 0.80965988, 0.5405733 , 0.5601676 ,
       0.85479529, 0.72415125, 0.57469671, 0.58307537, 0.68601433,
       0.48795004, 0.63864262, 0.62015873, 0.8749507 , 0.68640255,
       0.57625369, 0.66144338, 0.50964135, 0.68601433, 0.74902076,
       0.72536256, 0.64381101, 0.4687148 , 0.66807953, 0.57012605]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [100, 500, 1000]},
         'max_ncv_average_precision': 0.8542266466286075,
         'max_ncv_balanced_accuracy': 0.8434343434343434,
         'max_ncv_brier_loss': 0.1574071,
         'max_ncv_f1': 0.823529411764706,
         'max_ncv_informedness': 0.6868686868686869,
         'max_ncv_log_loss': 1.2403377739809096,
         'max_ncv_markedness': 0.7083333333333335,
         'max_ncv_mcc': 0.6975184488828855,
         'max_ncv_negative_predictive_value': 0.8333333333333334,
         'max_ncv_precision': 0.875,
         'max_ncv_precision_recall_auc': 0.84093094250473,
         'max_ncv_roc_auc': 0.9027777777777778,
         'max_ncv_sensitivity': 0.7777777777777778,
         'max_ncv_specificity': 0.9090909090909091,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.3309125,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 4.9682843444356175,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.015379416666666668,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.10541515179761522,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.816022960406884,
         'mean_ncv_balanced_accuracy': 0.7762626262626263,
         'mean_ncv_brier_loss': 0.144353315,
         'mean_ncv_f1': 0.7405852644087939,
         'mean_ncv_informedness': 0.5525252525252526,
         'mean_ncv_log_loss': 0.5442927494466064,
         'mean_ncv_markedness': 0.5789459731799884,
         'mean_ncv_mcc': 0.565508491663623,
         'mean_ncv_negative_predictive_value': 0.7746765987635553,
         'mean_ncv_precision': 0.8042693744164332,
         'mean_ncv_precision_recall_auc': 0.8065024827718366,
         'mean_ncv_roc_auc': 0.8775252525252526,
         'mean_ncv_sensitivity': 0.6888888888888889,
         'mean_ncv_specificity': 0.8636363636363636,
         'mean_test_average_precision': 0.8844920634920637,
         'mean_test_balanced_accuracy': 0.7798333333333334,
         'mean_test_brier_loss': 0.144353315,
         'mean_test_f1': 0.730238095238095,
         'mean_test_informedness': 0.5596666666666666,
         'mean_test_log_loss': 0.5442927494466064,
         'mean_test_markedness': 0.6362857142857143,
         'mean_test_mcc': 0.5937410797931438,
         'mean_test_negative_predictive_value': 0.7902857142857143,
         'mean_test_precision': 0.8460000000000001,
         'mean_test_precision_recall_auc': 0.869906746031746,
         'mean_test_roc_auc': 0.8903333333333333,
         'mean_test_sensitivity': 0.6916666666666665,
         'mean_test_specificity': 0.868,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011182835416666665,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.08085714120380975,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.7797800012260797,
         'min_ncv_balanced_accuracy': 0.7373737373737375,
         'min_ncv_brier_loss': 0.1266725,
         'min_ncv_f1': 0.6875000000000001,
         'min_ncv_informedness': 0.4747474747474749,
         'min_ncv_log_loss': 0.41850501392810147,
         'min_ncv_markedness': 0.5164835164835164,
         'min_ncv_mcc': 0.49517597397212765,
         'min_ncv_negative_predictive_value': 0.7307692307692307,
         'min_ncv_precision': 0.7777777777777778,
         'min_ncv_precision_recall_auc': 0.7727167326909891,
         'min_ncv_roc_auc': 0.8611111111111112,
         'min_ncv_sensitivity': 0.6111111111111112,
         'min_ncv_specificity': 0.8181818181818182,
         'min_test_average_precision': 0.42499999999999993,
         'min_test_balanced_accuracy': 0.375,
         'min_test_brier_loss': 0.009009999999999999,
         'min_test_f1': 0.28571428571428575,
         'min_test_informedness': -0.25,
         'min_test_log_loss': 0.07960893520647849,
         'min_test_markedness': -0.2666666666666666,
         'min_test_mcc': -0.2581988897471611,
         'min_test_negative_predictive_value': 0.4,
         'min_test_precision': 0.3333333333333333,
         'min_test_precision_recall_auc': 0.4611111111111111,
         'min_test_roc_auc': 0.4666666666666667,
         'min_test_sensitivity': 0.25,
         'min_test_specificity': 0.4,
         'min_train_average_precision': 0.9999999999999998,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.006488541666666668,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.053375807234271926,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999998,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.8039163 , 0.78719645, 0.85422665, 0.79677804, 0.82878569,
       0.82295808, 0.83708029, 0.77978   , 0.80714485, 0.84236324]),
         'ncv_balanced_accuracy': array([0.73737374, 0.73737374, 0.82070707, 0.76515152, 0.84343434,
       0.73737374, 0.73737374, 0.82070707, 0.76515152, 0.7979798 ]),
         'ncv_brier_loss': array([0.154365  , 0.1574071 , 0.1266725 , 0.15350393, 0.12699965,
       0.1497703 , 0.139374  , 0.14236228, 0.1486084 , 0.14447   ]),
         'ncv_f1': array([0.6875    , 0.6875    , 0.8       , 0.72727273, 0.82352941,
       0.6875    , 0.6875    , 0.8       , 0.72727273, 0.77777778]),
         'ncv_informedness': array([0.47474747, 0.47474747, 0.64141414, 0.53030303, 0.68686869,
       0.47474747, 0.47474747, 0.64141414, 0.53030303, 0.5959596 ]),
         'ncv_log_loss': array([0.49106112, 0.49908695, 0.41850501, 0.5024736 , 0.42520416,
       0.46906418, 0.43512655, 1.24033777, 0.4994538 , 0.46261435]),
         'ncv_markedness': array([0.51648352, 0.51648352, 0.64961637, 0.56      , 0.70833333,
       0.51648352, 0.51648352, 0.64961637, 0.56      , 0.5959596 ]),
         'ncv_mcc': array([0.49517597, 0.49517597, 0.64550223, 0.54494926, 0.69751845,
       0.49517597, 0.49517597, 0.64550223, 0.54494926, 0.5959596 ]),
         'ncv_negative_predictive_value': array([0.73076923, 0.73076923, 0.82608696, 0.76      , 0.83333333,
       0.73076923, 0.73076923, 0.82608696, 0.76      , 0.81818182]),
         'ncv_precision': array([0.78571429, 0.78571429, 0.82352941, 0.8       , 0.875     ,
       0.78571429, 0.78571429, 0.82352941, 0.8       , 0.77777778]),
         'ncv_precision_recall_auc': array([0.78951553, 0.77271673, 0.84093094, 0.79716345, 0.81603125,
       0.81536451, 0.82771657, 0.77954787, 0.7941527 , 0.83188527]),
         'ncv_roc_auc': array([0.87752525, 0.86742424, 0.90277778, 0.86616162, 0.89772727,
       0.86111111, 0.88888889, 0.86237374, 0.87247475, 0.87878788]),
         'ncv_sensitivity': array([0.61111111, 0.61111111, 0.77777778, 0.66666667, 0.77777778,
       0.61111111, 0.61111111, 0.77777778, 0.66666667, 0.77777778]),
         'ncv_specificity': array([0.86363636, 0.86363636, 0.86363636, 0.86363636, 0.90909091,
       0.86363636, 0.86363636, 0.86363636, 0.86363636, 0.81818182]),
         'ranked_best_inner_params': [{'frequency': 15, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 15, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 2, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}}],
         'std_ncv_average_precision': 0.024828310070920685,
         'std_ncv_balanced_accuracy': 0.04113742377748727,
         'std_ncv_brier_loss': 0.010772138027344742,
         'std_ncv_f1': 0.05472137985737045,
         'std_ncv_informedness': 0.08227484755497454,
         'std_ncv_log_loss': 0.2466143693101951,
         'std_ncv_markedness': 0.06939684238914282,
         'std_ncv_mcc': 0.07585359441719271,
         'std_ncv_negative_predictive_value': 0.04565766256240073,
         'std_ncv_precision': 0.029552485415340626,
         'std_ncv_precision_recall_auc': 0.023202715934829622,
         'std_ncv_roc_auc': 0.0146522686746879,
         'std_ncv_sensitivity': 0.07943559477602671,
         'std_ncv_specificity': 0.021427478217774146,
         'std_test_average_precision': 0.11426678365151477,
         'std_test_balanced_accuracy': 0.11672848216589143,
         'std_test_brier_loss': 0.057934433179295676,
         'std_test_f1': 0.15304705149800757,
         'std_test_informedness': 0.23345696433178287,
         'std_test_log_loss': 0.6619797927789546,
         'std_test_markedness': 0.23004242003789455,
         'std_test_mcc': 0.22641079139554762,
         'std_test_negative_predictive_value': 0.13154503227320039,
         'std_test_precision': 0.18986688259561216,
         'std_test_precision_recall_auc': 0.12781264521864327,
         'std_test_roc_auc': 0.10364816533287381,
         'std_test_sensitivity': 0.21245914639969937,
         'std_test_specificity': 0.1722480413679704,
         'std_train_average_precision': 7.092954723563637e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.0022546776152613936,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.01322485584331981,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 7.092954723563637e-17,
         'std_train_roc_auc': 2.74708955197652e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([0.95      , 0.83035714, 0.80416667, 0.91666667, 0.80555556,
       0.8875    , 0.8875    , 1.        , 0.75555556, 0.80555556,
       0.95      , 1.        , 0.95      , 0.80555556, 0.80555556,
       1.        , 0.95      , 0.91666667, 0.75555556, 1.        ,
       0.91666667, 0.95      , 1.        , 0.58888889, 0.91666667,
       0.91666667, 0.69166667, 0.95      , 1.        , 0.91666667,
       0.80416667, 0.89285714, 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.85416667, 0.425     , 0.91666667,
       0.95      , 0.91666667, 1.        , 0.75555556, 0.80555556,
       0.8875    , 0.85416667, 1.        , 0.80555556, 0.86666667]),
         'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.73333333, 0.66666667,
       0.75      , 0.75      , 0.75      , 0.73333333, 0.8       ,
       0.875     , 0.875     , 0.75      , 0.9       , 0.73333333,
       0.75      , 0.75      , 0.875     , 0.7       , 0.83333333,
       0.875     , 0.875     , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.375     , 0.625     , 1.        , 0.9       ,
       0.75      , 0.625     , 0.875     , 0.66666667, 0.66666667,
       1.        , 0.875     , 0.75      , 0.56666667, 0.83333333,
       0.875     , 0.75      , 0.75      , 0.73333333, 0.73333333,
       0.75      , 0.75      , 1.        , 0.9       , 0.63333333]),
         'test_brier_loss': array([0.13685   , 0.209825  , 0.198025  , 0.1057    , 0.121425  ,
       0.161971  , 0.142618  , 0.1118375 , 0.1880875 , 0.1825215 ,
       0.093125  , 0.1107375 , 0.1086625 , 0.139375  , 0.1814625 ,
       0.157475  , 0.136577  , 0.141375  , 0.259854  , 0.07223863,
       0.11515   , 0.119227  , 0.09714125, 0.20845   , 0.09503   ,
       0.1411625 , 0.231437  , 0.1838125 , 0.00901   , 0.1834295 ,
       0.185894  , 0.1726495 , 0.0825135 , 0.093812  , 0.162001  ,
       0.05842187, 0.081007  , 0.1487375 , 0.3309125 , 0.0927325 ,
       0.0945    , 0.16622   , 0.115076  , 0.1771375 , 0.1901085 ,
       0.1392    , 0.177175  , 0.02185   , 0.180575  , 0.20355   ]),
         'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.66666667, 0.5       ,
       0.66666667, 0.66666667, 0.66666667, 0.66666667, 0.75      ,
       0.85714286, 0.85714286, 0.75      , 0.85714286, 0.66666667,
       0.66666667, 0.66666667, 0.85714286, 0.66666667, 0.8       ,
       0.85714286, 0.85714286, 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.28571429, 0.4       , 1.        , 0.85714286,
       0.75      , 0.66666667, 0.85714286, 0.5       , 0.5       ,
       1.        , 0.85714286, 0.8       , 0.4       , 0.8       ,
       0.85714286, 0.75      , 0.66666667, 0.66666667, 0.66666667,
       0.75      , 0.66666667, 1.        , 0.85714286, 0.57142857]),
         'test_informedness': array([ 0.75      ,  0.25      ,  0.5       ,  0.46666667,  0.33333333,
        0.5       ,  0.5       ,  0.5       ,  0.46666667,  0.6       ,
        0.75      ,  0.75      ,  0.5       ,  0.8       ,  0.46666667,
        0.5       ,  0.5       ,  0.75      ,  0.4       ,  0.66666667,
        0.75      ,  0.75      ,  0.75      ,  0.6       ,  0.66666667,
        0.75      , -0.25      ,  0.25      ,  1.        ,  0.8       ,
        0.5       ,  0.25      ,  0.75      ,  0.33333333,  0.33333333,
        1.        ,  0.75      ,  0.5       ,  0.13333333,  0.66666667,
        0.75      ,  0.5       ,  0.5       ,  0.46666667,  0.46666667,
        0.5       ,  0.5       ,  1.        ,  0.8       ,  0.26666667]),
         'test_log_loss': array([0.41217542, 0.5826809 , 0.73531329, 0.3583436 , 0.36679239,
       0.46136664, 0.42258158, 0.35866172, 0.52329953, 0.72952529,
       0.31650129, 0.35953249, 0.33165457, 0.43742605, 0.64741067,
       0.43053793, 0.41864019, 0.44630217, 0.9602624 , 0.25662529,
       0.38024814, 0.36352098, 0.32801769, 0.76361818, 0.2906158 ,
       0.43437061, 0.61541056, 0.51881474, 0.07960894, 0.69711608,
       0.64173719, 0.49386009, 0.30494895, 0.27817396, 0.45691255,
       0.21642242, 0.27676124, 0.43346586, 4.96828434, 0.30675501,
       0.31007393, 0.4873479 , 0.36905862, 0.50976482, 0.82102371,
       0.41260138, 0.53398519, 0.13059365, 0.66069137, 0.57520018]),
         'test_markedness': array([ 0.8       ,  0.26666667,  0.5       ,  0.46666667,  0.71428571,
        0.66666667,  0.66666667,  0.66666667,  0.46666667,  0.6       ,
        0.8       ,  0.8       ,  0.5       ,  0.75      ,  0.46666667,
        0.66666667,  0.66666667,  0.8       ,  0.5       ,  0.83333333,
        0.8       ,  0.8       ,  0.8       ,  0.6       ,  0.83333333,
        0.8       , -0.26666667,  0.57142857,  1.        ,  0.75      ,
        0.5       ,  0.26666667,  0.8       ,  0.71428571,  0.71428571,
        1.        ,  0.8       ,  0.66666667,  0.16666667,  0.83333333,
        0.8       ,  0.5       ,  0.66666667,  0.46666667,  0.46666667,
        0.5       ,  0.66666667,  1.        ,  0.75      ,  0.25      ]),
         'test_mcc': array([ 0.77459667,  0.25819889,  0.5       ,  0.46666667,  0.48795004,
        0.57735027,  0.57735027,  0.57735027,  0.46666667,  0.6       ,
        0.77459667,  0.77459667,  0.5       ,  0.77459667,  0.46666667,
        0.57735027,  0.57735027,  0.77459667,  0.4472136 ,  0.74535599,
        0.77459667,  0.77459667,  0.77459667,  0.6       ,  0.74535599,
        0.77459667, -0.25819889,  0.37796447,  1.        ,  0.77459667,
        0.5       ,  0.25819889,  0.77459667,  0.48795004,  0.48795004,
        1.        ,  0.77459667,  0.57735027,  0.1490712 ,  0.74535599,
        0.77459667,  0.5       ,  0.57735027,  0.46666667,  0.46666667,
        0.5       ,  0.57735027,  1.        ,  0.77459667,  0.25819889]),
         'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.8       , 0.71428571,
       0.66666667, 0.66666667, 0.66666667, 0.8       , 1.        ,
       0.8       , 0.8       , 0.75      , 1.        , 0.8       ,
       0.66666667, 0.66666667, 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.4       , 0.57142857, 1.        , 1.        ,
       0.75      , 0.66666667, 0.8       , 0.71428571, 0.71428571,
       1.        , 0.8       , 1.        , 0.66666667, 0.83333333,
       0.8       , 0.75      , 0.66666667, 0.8       , 0.8       ,
       0.75      , 0.66666667, 1.        , 1.        , 0.75      ]),
         'test_precision': array([1.        , 0.66666667, 0.75      , 0.66666667, 1.        ,
       1.        , 1.        , 1.        , 0.66666667, 0.6       ,
       1.        , 1.        , 0.75      , 0.75      , 0.66666667,
       1.        , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 0.33333333, 1.        , 1.        , 0.75      ,
       0.75      , 0.6       , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 0.5       , 1.        ,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 1.        , 1.        , 0.75      , 0.5       ]),
         'test_precision_recall_auc': array([0.94375   , 0.8110119 , 0.76666667, 0.90277778, 0.76388889,
       0.87083333, 0.9125    , 1.        , 0.71111111, 0.76388889,
       0.94375   , 1.        , 0.94375   , 0.76388889, 0.76388889,
       1.        , 0.975     , 0.90833333, 0.71111111, 1.        ,
       0.90833333, 0.94375   , 1.        , 0.46111111, 0.90277778,
       0.90833333, 0.65      , 0.94375   , 1.        , 0.90277778,
       0.76666667, 0.88392857, 1.        , 1.        , 0.85      ,
       1.        , 1.        , 0.85416667, 0.48234127, 0.90277778,
       0.975     , 0.90833333, 1.        , 0.71111111, 0.76388889,
       0.87083333, 0.83541667, 1.        , 0.76388889, 0.85      ]),
         'test_roc_auc': array([0.9375    , 0.75      , 0.8125    , 0.93333333, 0.86666667,
       0.875     , 0.90625   , 1.        , 0.8       , 0.86666667,
       0.9375    , 1.        , 0.9375    , 0.86666667, 0.86666667,
       1.        , 0.96875   , 0.875     , 0.8       , 1.        ,
       0.875     , 0.9375    , 1.        , 0.73333333, 0.93333333,
       0.875     , 0.625     , 0.9375    , 1.        , 0.93333333,
       0.8125    , 0.8125    , 1.        , 1.        , 0.86666667,
       1.        , 1.        , 0.84375   , 0.46666667, 0.93333333,
       0.96875   , 0.875     , 1.        , 0.8       , 0.86666667,
       0.875     , 0.8125    , 1.        , 0.86666667, 0.86666667]),
         'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 0.33333333,
       0.5       , 0.5       , 0.5       , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.25      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.33333333, 0.33333333,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       0.75      , 0.75      , 0.5       , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 0.75, 0.75, 0.8 , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.6 , 1.  ,
       1.  , 0.75, 0.8 , 0.8 , 1.  , 1.  , 1.  , 0.4 , 1.  , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 0.5 , 1.  , 1.  , 0.8 , 0.75, 0.5 , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 0.8 , 1.  , 1.  , 0.75, 1.  , 0.8 ,
       0.8 , 0.75, 1.  , 1.  , 0.8 , 0.6 ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01140104, 0.01086979, 0.01005417, 0.01261979, 0.01351354,
       0.01008258, 0.01226937, 0.01504792, 0.00872708, 0.00801738,
       0.01187188, 0.01349063, 0.00886146, 0.01274583, 0.01205104,
       0.01147917, 0.01286521, 0.01192661, 0.00701808, 0.01418308,
       0.01351354, 0.00782179, 0.01506287, 0.01094688, 0.01122971,
       0.01296979, 0.00779271, 0.00892263, 0.01300529, 0.00929517,
       0.01086271, 0.00850121, 0.01415143, 0.01275329, 0.01032696,
       0.01255345, 0.01032036, 0.00892917, 0.00648854, 0.01175421,
       0.01339688, 0.00845154, 0.01537942, 0.00977292, 0.00815096,
       0.01033125, 0.01180833, 0.01410104, 0.00940313, 0.01204896]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.07925382, 0.08060397, 0.06984843, 0.09297064, 0.09225124,
       0.0709943 , 0.09055485, 0.10327767, 0.06469444, 0.06685461,
       0.08423426, 0.09629032, 0.06761503, 0.09297813, 0.08854348,
       0.07229632, 0.09531456, 0.08899007, 0.0604731 , 0.1023228 ,
       0.08913457, 0.06420621, 0.10353938, 0.07937808, 0.07980368,
       0.08342086, 0.06223273, 0.06743336, 0.09216023, 0.07092004,
       0.08271624, 0.06402307, 0.1006826 , 0.0867159 , 0.07443578,
       0.08806425, 0.0804049 , 0.06869678, 0.05337581, 0.07979309,
       0.08655377, 0.06578637, 0.10541515, 0.07090485, 0.06332259,
       0.0755737 , 0.08995485, 0.09603685, 0.06867871, 0.08913058]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([1, 3, 1, 3, 3, 0, 0, 0, 0, 2, 3, 3, 3, 3, 4, 0, 0, 3, 2, 4, 1, 2,
       2, 0, 0, 3, 1, 3, 0, 2, 2, 4, 3, 0, 0, 1, 2, 2, 0, 1, 2, 0, 1, 3,
       1, 0, 0, 4, 1, 0]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
                          'best_inner_scores': array([0.83470788, 0.91254682, 0.93074103, 0.86677727, 0.88059706,
       0.91934273, 0.8818782 , 0.77699028, 0.88184314, 0.87330996,
       0.84137744, 0.78811917, 0.90078622, 0.90533567, 0.90434137,
       0.85536003, 0.88579277, 0.85412502, 0.95558523, 0.8177451 ,
       0.85112808, 0.91294469, 0.83248247, 0.95700218, 0.8366917 ,
       0.88273814, 0.88676026, 0.89400172, 0.81473667, 0.86959525,
       0.95383558, 0.83280083, 0.82916097, 0.83969546, 0.91030337,
       0.79472193, 0.83650379, 0.79649639, 0.97423883, 0.84203772,
       0.84737059, 0.865959  , 0.8170794 , 0.89755175, 0.92998723,
       0.90607177, 0.82967085, 0.80828987, 0.93770507, 0.86713043]),
                          'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [500, 100, 1000]},
                          'max_ncv_average_precision': 0.8269737673286266,
                          'max_ncv_balanced_accuracy': 0.8712121212121212,
                          'max_ncv_brier_loss': 0.15843829999999998,
                          'max_ncv_f1': 0.8571428571428571,
                          'max_ncv_informedness': 0.7424242424242424,
                          'max_ncv_log_loss': 0.5087208605120959,
                          'max_ncv_markedness': 0.7519181585677748,
                          'max_ncv_mcc': 0.74715612106153,
                          'max_ncv_negative_predictive_value': 0.8695652173913043,
                          'max_ncv_precision': 0.9230769230769231,
                          'max_ncv_precision_recall_auc': 0.8200196675068797,
                          'max_ncv_roc_auc': 0.9040404040404041,
                          'max_ncv_sensitivity': 0.8333333333333334,
                          'max_ncv_specificity': 0.9545454545454546,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.31098750000000003,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 1.094173492538168,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.016585666666666665,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.11295684698712316,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.8140740765620347,
                          'mean_ncv_balanced_accuracy': 0.7934343434343434,
                          'mean_ncv_brier_loss': 0.1429341525,
                          'mean_ncv_f1': 0.7649644601044032,
                          'mean_ncv_informedness': 0.5868686868686869,
                          'mean_ncv_log_loss': 0.462440980668095,
                          'mean_ncv_markedness': 0.6073689600620883,
                          'mean_ncv_mcc': 0.596917424551128,
                          'mean_ncv_negative_predictive_value': 0.7961634717939066,
                          'mean_ncv_precision': 0.8112054882681818,
                          'mean_ncv_precision_recall_auc': 0.7999266840045917,
                          'mean_ncv_roc_auc': 0.87739898989899,
                          'mean_ncv_sensitivity': 0.7277777777777777,
                          'mean_ncv_specificity': 0.8590909090909091,
                          'mean_test_average_precision': 0.8880198412698413,
                          'mean_test_balanced_accuracy': 0.7961666666666666,
                          'mean_test_brier_loss': 0.1429341525,
                          'mean_test_f1': 0.754095238095238,
                          'mean_test_informedness': 0.5923333333333334,
                          'mean_test_log_loss': 0.4624409806680951,
                          'mean_test_markedness': 0.6510000000000001,
                          'mean_test_mcc': 0.6185318218400969,
                          'mean_test_negative_predictive_value': 0.812,
                          'mean_test_precision': 0.8390000000000001,
                          'mean_test_precision_recall_auc': 0.8749265873015871,
                          'mean_test_roc_auc': 0.8960833333333333,
                          'mean_test_sensitivity': 0.7283333333333333,
                          'mean_test_specificity': 0.8639999999999999,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.011304790208333334,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.08102756452494451,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.7919425037562293,
                          'min_ncv_balanced_accuracy': 0.7373737373737375,
                          'min_ncv_brier_loss': 0.12107417499999999,
                          'min_ncv_f1': 0.6875000000000001,
                          'min_ncv_informedness': 0.4747474747474749,
                          'min_ncv_log_loss': 0.4084228510447536,
                          'min_ncv_markedness': 0.5,
                          'min_ncv_mcc': 0.4923659639173309,
                          'min_ncv_negative_predictive_value': 0.7307692307692307,
                          'min_ncv_precision': 0.7368421052631579,
                          'min_ncv_precision_recall_auc': 0.7778829439871753,
                          'min_ncv_roc_auc': 0.8547979797979798,
                          'min_ncv_sensitivity': 0.6111111111111112,
                          'min_ncv_specificity': 0.7727272727272727,
                          'min_test_average_precision': 0.5888888888888889,
                          'min_test_balanced_accuracy': 0.375,
                          'min_test_brier_loss': 0.006987499999999998,
                          'min_test_f1': 0.28571428571428575,
                          'min_test_informedness': -0.25,
                          'min_test_log_loss': 0.06767660441835928,
                          'min_test_markedness': -0.2666666666666666,
                          'min_test_mcc': -0.2581988897471611,
                          'min_test_negative_predictive_value': 0.4,
                          'min_test_precision': 0.3333333333333333,
                          'min_test_precision_recall_auc': 0.4611111111111111,
                          'min_test_roc_auc': 0.625,
                          'min_test_sensitivity': 0.25,
                          'min_test_specificity': 0.4,
                          'min_train_average_precision': 0.9999999999999998,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.0063322916666666675,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.0518366998992064,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999998,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.79904856, 0.8191895 , 0.8187981 , 0.7919425 , 0.814146  ,
       0.81398956, 0.82463984, 0.80743286, 0.82458008, 0.82697377]),
                          'ncv_balanced_accuracy': array([0.76515152, 0.74242424, 0.79292929, 0.77020202, 0.87121212,
       0.73737374, 0.81060606, 0.82070707, 0.84848485, 0.77525253]),
                          'ncv_brier_loss': array([0.1511005 , 0.14672495, 0.1331359 , 0.1527079 , 0.12107417,
       0.1584383 , 0.14411265, 0.13905128, 0.13971577, 0.1432801 ]),
                          'ncv_f1': array([0.72727273, 0.70588235, 0.76470588, 0.74285714, 0.85714286,
       0.6875    , 0.77419355, 0.8       , 0.83333333, 0.75675676]),
                          'ncv_informedness': array([0.53030303, 0.48484848, 0.58585859, 0.54040404, 0.74242424,
       0.47474747, 0.62121212, 0.64141414, 0.6969697 , 0.55050505]),
                          'ncv_log_loss': array([0.48473824, 0.45863226, 0.42969937, 0.50872086, 0.40842285,
       0.48311491, 0.45629159, 0.46789465, 0.47167853, 0.45521655]),
                          'ncv_markedness': array([0.56      , 0.5       , 0.60416667, 0.54731458, 0.75191816,
       0.51648352, 0.7008547 , 0.64961637, 0.6969697 , 0.54636591]),
                          'ncv_mcc': array([0.54494926, 0.49236596, 0.59494221, 0.54384833, 0.74715612,
       0.49517597, 0.65983288, 0.64550223, 0.6969697 , 0.54843158]),
                          'ncv_negative_predictive_value': array([0.76      , 0.75      , 0.79166667, 0.7826087 , 0.86956522,
       0.73076923, 0.77777778, 0.82608696, 0.86363636, 0.80952381]),
                          'ncv_precision': array([0.8       , 0.75      , 0.8125    , 0.76470588, 0.88235294,
       0.78571429, 0.92307692, 0.82352941, 0.83333333, 0.73684211]),
                          'ncv_precision_recall_auc': array([0.78339822, 0.80876009, 0.80549043, 0.77788294, 0.77973111,
       0.80851953, 0.81054852, 0.79324367, 0.81167266, 0.82001967]),
                          'ncv_roc_auc': array([0.87247475, 0.88005051, 0.89015152, 0.86237374, 0.9040404 ,
       0.85479798, 0.86616162, 0.86868687, 0.88762626, 0.88762626]),
                          'ncv_sensitivity': array([0.66666667, 0.66666667, 0.72222222, 0.72222222, 0.83333333,
       0.61111111, 0.66666667, 0.77777778, 0.83333333, 0.77777778]),
                          'ncv_specificity': array([0.86363636, 0.81818182, 0.86363636, 0.81818182, 0.90909091,
       0.86363636, 0.95454545, 0.86363636, 0.86363636, 0.77272727]),
                          'ranked_best_inner_params': [{'frequency': 16, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 9, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
                          'std_ncv_average_precision': 0.011530578545153857,
                          'std_ncv_balanced_accuracy': 0.044138576110652375,
                          'std_ncv_brier_loss': 0.010634178142351052,
                          'std_ncv_f1': 0.053698847759222824,
                          'std_ncv_informedness': 0.08827715222130475,
                          'std_ncv_log_loss': 0.028433092450849407,
                          'std_ncv_markedness': 0.0874435823913958,
                          'std_ncv_mcc': 0.08695790123715312,
                          'std_ncv_negative_predictive_value': 0.0462740357836412,
                          'std_ncv_precision': 0.05815112171560331,
                          'std_ncv_precision_recall_auc': 0.015088557456221391,
                          'std_ncv_roc_auc': 0.015098227468664356,
                          'std_ncv_sensitivity': 0.07612890663368323,
                          'std_ncv_specificity': 0.05002295157339145,
                          'std_test_average_precision': 0.11062795457759465,
                          'std_test_balanced_accuracy': 0.12828683228557983,
                          'std_test_brier_loss': 0.0576340810885018,
                          'std_test_f1': 0.16388420111717794,
                          'std_test_informedness': 0.2565736645711596,
                          'std_test_log_loss': 0.19776451390051777,
                          'std_test_markedness': 0.2534322174519488,
                          'std_test_mcc': 0.2512088776309051,
                          'std_test_negative_predictive_value': 0.13667288006111225,
                          'std_test_precision': 0.19212412135006668,
                          'std_test_precision_recall_auc': 0.1268027541781229,
                          'std_test_roc_auc': 0.09573034987203022,
                          'std_test_sensitivity': 0.21149639624254302,
                          'std_test_specificity': 0.168740834974096,
                          'std_train_average_precision': 6.539381140746054e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.0024612046865799407,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.013405324191916328,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 6.539381140746054e-17,
                          'std_train_roc_auc': 3.172065784643304e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([0.95      , 0.83035714, 0.80416667, 0.91666667, 0.91666667,
       0.8875    , 0.95      , 1.        , 0.75555556, 0.80555556,
       1.        , 1.        , 0.95      , 0.7       , 0.80555556,
       1.        , 0.95      , 0.91666667, 0.75555556, 1.        ,
       0.95      , 0.95      , 1.        , 0.58888889, 0.91666667,
       0.91666667, 0.69166667, 0.95      , 1.        , 1.        ,
       0.80416667, 0.89285714, 0.95      , 1.        , 0.75555556,
       1.        , 1.        , 0.85416667, 0.66666667, 0.91666667,
       1.        , 0.91666667, 1.        , 0.75555556, 0.80555556,
       0.8875    , 0.8875    , 1.        , 0.80555556, 0.64444444]),
                          'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.9       , 0.66666667,
       0.75      , 0.75      , 0.75      , 0.73333333, 0.8       ,
       0.875     , 0.875     , 0.875     , 0.63333333, 0.73333333,
       0.75      , 0.875     , 0.75      , 0.7       , 0.83333333,
       0.875     , 0.875     , 1.        , 0.8       , 0.83333333,
       0.875     , 0.375     , 0.625     , 1.        , 0.9       ,
       0.75      , 0.875     , 0.875     , 0.83333333, 0.66666667,
       1.        , 0.875     , 0.75      , 0.56666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.73333333, 0.73333333,
       0.75      , 0.625     , 1.        , 0.9       , 0.63333333]),
                          'test_brier_loss': array([0.147958  , 0.1997125 , 0.1981695 , 0.0947125 , 0.11495   ,
       0.147025  , 0.124875  , 0.1061125 , 0.173175  , 0.18243725,
       0.08755   , 0.1009    , 0.1177875 , 0.1852375 , 0.1742045 ,
       0.1405625 , 0.1210875 , 0.16405   , 0.262212  , 0.0756275 ,
       0.106545  , 0.1180415 , 0.06735937, 0.2101125 , 0.1033125 ,
       0.162075  , 0.2429505 , 0.20025   , 0.0069875 , 0.1799285 ,
       0.18564575, 0.149905  , 0.1027375 , 0.1028625 , 0.1794125 ,
       0.062549  , 0.08212187, 0.145554  , 0.3109875 , 0.094044  ,
       0.07345288, 0.177875  , 0.0840025 , 0.178825  , 0.1844235 ,
       0.1439625 , 0.1633125 , 0.040991  , 0.1781595 , 0.189975  ]),
                          'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.85714286, 0.5       ,
       0.66666667, 0.75      , 0.66666667, 0.66666667, 0.75      ,
       0.85714286, 0.85714286, 0.85714286, 0.57142857, 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.66666667, 0.8       ,
       0.85714286, 0.85714286, 1.        , 0.75      , 0.8       ,
       0.85714286, 0.28571429, 0.4       , 1.        , 0.85714286,
       0.75      , 0.85714286, 0.85714286, 0.8       , 0.5       ,
       1.        , 0.85714286, 0.8       , 0.4       , 0.8       ,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.57142857, 1.        , 0.85714286, 0.57142857]),
                          'test_informedness': array([ 0.75      ,  0.25      ,  0.5       ,  0.8       ,  0.33333333,
        0.5       ,  0.5       ,  0.5       ,  0.46666667,  0.6       ,
        0.75      ,  0.75      ,  0.75      ,  0.26666667,  0.46666667,
        0.5       ,  0.75      ,  0.5       ,  0.4       ,  0.66666667,
        0.75      ,  0.75      ,  1.        ,  0.6       ,  0.66666667,
        0.75      , -0.25      ,  0.25      ,  1.        ,  0.8       ,
        0.5       ,  0.75      ,  0.75      ,  0.66666667,  0.33333333,
        1.        ,  0.75      ,  0.5       ,  0.13333333,  0.66666667,
        1.        ,  0.5       ,  1.        ,  0.46666667,  0.46666667,
        0.5       ,  0.25      ,  1.        ,  0.8       ,  0.26666667]),
                          'test_log_loss': array([0.43651203, 0.56667306, 0.74728348, 0.31813187, 0.35509075,
       0.42634434, 0.36239451, 0.33382151, 0.48234129, 0.68825965,
       0.32241401, 0.32838993, 0.36422817, 0.52604731, 0.60741741,
       0.40981091, 0.37655714, 0.49655914, 0.99014382, 0.2705333 ,
       0.35153401, 0.36531876, 0.25103181, 0.76497302, 0.30925667,
       0.48973111, 0.64457479, 0.55811481, 0.0676766 , 0.65547725,
       0.67079441, 0.46172621, 0.33982354, 0.30492478, 0.504189  ,
       0.22511139, 0.27948526, 0.42791697, 1.09417349, 0.31278615,
       0.26213149, 0.53316652, 0.28809934, 0.51607813, 0.75891718,
       0.40518115, 0.45508943, 0.19416507, 0.69009283, 0.53155425]),
                          'test_markedness': array([ 0.8       ,  0.26666667,  0.5       ,  0.75      ,  0.71428571,
        0.66666667,  0.5       ,  0.66666667,  0.46666667,  0.6       ,
        0.8       ,  0.8       ,  0.8       ,  0.25      ,  0.46666667,
        0.66666667,  0.8       ,  0.5       ,  0.5       ,  0.83333333,
        0.8       ,  0.8       ,  1.        ,  0.6       ,  0.83333333,
        0.8       , -0.26666667,  0.57142857,  1.        ,  0.75      ,
        0.5       ,  0.8       ,  0.8       ,  0.83333333,  0.71428571,
        1.        ,  0.8       ,  0.66666667,  0.16666667,  0.83333333,
        1.        ,  0.5       ,  1.        ,  0.46666667,  0.46666667,
        0.5       ,  0.26666667,  1.        ,  0.75      ,  0.25      ]),
                          'test_mcc': array([ 0.77459667,  0.25819889,  0.5       ,  0.77459667,  0.48795004,
        0.57735027,  0.5       ,  0.57735027,  0.46666667,  0.6       ,
        0.77459667,  0.77459667,  0.77459667,  0.25819889,  0.46666667,
        0.57735027,  0.77459667,  0.5       ,  0.4472136 ,  0.74535599,
        0.77459667,  0.77459667,  1.        ,  0.6       ,  0.74535599,
        0.77459667, -0.25819889,  0.37796447,  1.        ,  0.77459667,
        0.5       ,  0.77459667,  0.77459667,  0.74535599,  0.48795004,
        1.        ,  0.77459667,  0.57735027,  0.1490712 ,  0.74535599,
        1.        ,  0.5       ,  1.        ,  0.46666667,  0.46666667,
        0.5       ,  0.25819889,  1.        ,  0.77459667,  0.25819889]),
                          'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 1.        , 0.71428571,
       0.66666667, 0.75      , 0.66666667, 0.8       , 1.        ,
       0.8       , 0.8       , 0.8       , 0.75      , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 0.83333333,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333,
       0.8       , 0.4       , 0.57142857, 1.        , 1.        ,
       0.75      , 0.8       , 0.8       , 0.83333333, 0.71428571,
       1.        , 0.8       , 1.        , 0.66666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.8       , 0.8       ,
       0.75      , 0.6       , 1.        , 1.        , 0.75      ]),
                          'test_precision': array([1.        , 0.66666667, 0.75      , 0.75      , 1.        ,
       1.        , 0.75      , 1.        , 0.66666667, 0.6       ,
       1.        , 1.        , 1.        , 0.5       , 0.66666667,
       1.        , 1.        , 0.75      , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 0.33333333, 1.        , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 0.5       , 1.        ,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.66666667, 1.        , 0.75      , 0.5       ]),
                          'test_precision_recall_auc': array([0.94375   , 0.8110119 , 0.76666667, 0.90277778, 0.90277778,
       0.9125    , 0.94375   , 1.        , 0.71111111, 0.76388889,
       1.        , 1.        , 0.94375   , 0.65555556, 0.76388889,
       1.        , 0.94375   , 0.90833333, 0.71111111, 1.        ,
       0.94375   , 0.94375   , 1.        , 0.46111111, 0.90277778,
       0.90833333, 0.65      , 0.975     , 1.        , 1.        ,
       0.76666667, 0.88392857, 0.94375   , 1.        , 0.71111111,
       1.        , 1.        , 0.83541667, 0.62222222, 0.90277778,
       1.        , 0.90833333, 1.        , 0.79444444, 0.76388889,
       0.87083333, 0.87083333, 1.        , 0.76388889, 0.73888889]),
                          'test_roc_auc': array([0.9375    , 0.75      , 0.8125    , 0.93333333, 0.93333333,
       0.90625   , 0.9375    , 1.        , 0.8       , 0.86666667,
       1.        , 1.        , 0.9375    , 0.73333333, 0.86666667,
       1.        , 0.9375    , 0.875     , 0.8       , 1.        ,
       0.9375    , 0.9375    , 1.        , 0.73333333, 0.93333333,
       0.875     , 0.625     , 0.96875   , 1.        , 1.        ,
       0.8125    , 0.8125    , 0.9375    , 1.        , 0.8       ,
       1.        , 1.        , 0.8125    , 0.66666667, 0.93333333,
       1.        , 0.875     , 1.        , 0.83333333, 0.86666667,
       0.875     , 0.875     , 1.        , 0.86666667, 0.8       ]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 0.5       , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667,
       0.75      , 0.25      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.33333333,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 0.75, 0.75, 0.8 , 1.  , 1.  , 0.75, 1.  , 0.8 , 0.6 , 1.  ,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 0.75, 0.4 , 1.  , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 0.5 , 1.  , 1.  , 0.8 , 0.75, 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 0.8 , 1.  , 1.  , 0.75, 1.  , 0.8 ,
       0.8 , 0.75, 0.75, 1.  , 0.8 , 0.6 ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.01078267, 0.01088333, 0.00902533, 0.01331042, 0.01448021,
       0.01122083, 0.01113854, 0.013875  , 0.00810208, 0.00828369,
       0.01479062, 0.01622083, 0.01068229, 0.01335208, 0.01172963,
       0.01208021, 0.0104    , 0.01292708, 0.00721234, 0.01449417,
       0.01307796, 0.00733637, 0.01197727, 0.00837813, 0.01107917,
       0.01357708, 0.00765592, 0.0122    , 0.01326042, 0.0093561 ,
       0.00838668, 0.0107355 , 0.01566771, 0.01320104, 0.01159167,
       0.01356929, 0.01072533, 0.00936114, 0.00633229, 0.01175183,
       0.01249975, 0.00936875, 0.01264088, 0.01278229, 0.00899925,
       0.01018854, 0.0089125 , 0.01658567, 0.00835067, 0.01069896]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.07626659, 0.08091459, 0.06693285, 0.0913292 , 0.09840939,
       0.07527949, 0.07924378, 0.09050824, 0.06162206, 0.06890346,
       0.10178356, 0.10581073, 0.08116801, 0.08984585, 0.09083512,
       0.08267365, 0.07671759, 0.09043657, 0.06184367, 0.10287355,
       0.08729233, 0.06396912, 0.08561575, 0.06546697, 0.08121949,
       0.09743558, 0.0617345 , 0.08289411, 0.09226972, 0.07075174,
       0.0658146 , 0.08453242, 0.10376761, 0.087686  , 0.07598211,
       0.0906175 , 0.0817645 , 0.07230882, 0.0518367 , 0.08214742,
       0.0851477 , 0.07011802, 0.08948457, 0.08844016, 0.06636272,
       0.0708826 , 0.06853315, 0.11295685, 0.06545228, 0.07549524]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([3, 4, 2, 0, 1, 3, 1, 1, 0, 1, 1, 4, 4, 1, 4, 0, 5, 4, 2, 4, 1, 1,
       0, 0, 2, 5, 1, 3, 2, 1, 2, 4, 2, 2, 1, 2, 3, 2, 0, 1, 0, 5, 1, 3,
       0, 0, 0, 1, 2, 0]),
             'best_inner_params': [{'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}],
             'best_inner_scores': array([0.86463845, 0.93783069, 0.93342152, 0.88671024, 0.90065359,
       0.92901235, 0.89594356, 0.81459436, 0.91198257, 0.88583878,
       0.89770723, 0.82760141, 0.92702822, 0.9124183 , 0.90740741,
       0.90983245, 0.91798942, 0.8776455 , 0.95904139, 0.83529412,
       0.89506173, 0.92151675, 0.86816578, 0.96122004, 0.90087146,
       0.91446208, 0.91137566, 0.91534392, 0.83660131, 0.87320261,
       0.94532628, 0.87610229, 0.90079365, 0.82461874, 0.92026144,
       0.80908289, 0.87698413, 0.88271605, 0.97124183, 0.87647059,
       0.86441799, 0.86067019, 0.85405644, 0.89150327, 0.91742919,
       0.91578483, 0.84942681, 0.85626102, 0.94117647, 0.85206972]),
             'best_params': {'randomforestclassifier__max_features': [0.1, 'sqrt'], 'randomforestclassifier__n_estimators': [100, 500, 1000]},
             'max_ncv_average_precision': 0.8423488548488549,
             'max_ncv_balanced_accuracy': 0.8434343434343434,
             'max_ncv_brier_loss': 0.16095267500000002,
             'max_ncv_f1': 0.823529411764706,
             'max_ncv_informedness': 0.6868686868686869,
             'max_ncv_log_loss': 1.2227887620488544,
             'max_ncv_markedness': 0.7083333333333335,
             'max_ncv_mcc': 0.6975184488828855,
             'max_ncv_negative_predictive_value': 0.8333333333333334,
             'max_ncv_precision': 0.875,
             'max_ncv_precision_recall_auc': 0.8308072169694667,
             'max_ncv_roc_auc': 0.9090909090909091,
             'max_ncv_sensitivity': 0.7777777777777778,
             'max_ncv_specificity': 0.9090909090909091,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.327725,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 4.54943789499372,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.015283333333333335,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.1020612515138833,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.8096494764566566,
             'mean_ncv_balanced_accuracy': 0.7795454545454545,
             'mean_ncv_brier_loss': 0.143291225,
             'mean_ncv_f1': 0.7462225193107546,
             'mean_ncv_informedness': 0.5590909090909093,
             'mean_ncv_log_loss': 0.5465068458825921,
             'mean_ncv_markedness': 0.5813992698832852,
             'mean_ncv_mcc': 0.5700824576783613,
             'mean_ncv_negative_predictive_value': 0.7796894192763758,
             'mean_ncv_precision': 0.8017098506069095,
             'mean_ncv_precision_recall_auc': 0.798036074164856,
             'mean_ncv_roc_auc': 0.8780303030303032,
             'mean_ncv_sensitivity': 0.7,
             'mean_ncv_specificity': 0.859090909090909,
             'mean_test_average_precision': 0.8890476190476191,
             'mean_test_balanced_accuracy': 0.7841666666666667,
             'mean_test_brier_loss': 0.143291225,
             'mean_test_f1': 0.7339047619047618,
             'mean_test_informedness': 0.5683333333333334,
             'mean_test_log_loss': 0.5465068458825921,
             'mean_test_markedness': 0.643095238095238,
             'mean_test_mcc': 0.6016692349095896,
             'mean_test_negative_predictive_value': 0.7997619047619048,
             'mean_test_precision': 0.8433333333333334,
             'mean_test_precision_recall_auc': 0.8698154761904762,
             'mean_test_roc_auc': 0.8986666666666666,
             'mean_test_sensitivity': 0.7033333333333333,
             'mean_test_specificity': 0.8649999999999999,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.011187280625,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.080804731224994,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.7837363966239543,
             'min_ncv_balanced_accuracy': 0.7146464646464648,
             'min_ncv_brier_loss': 0.116844175,
             'min_ncv_f1': 0.6666666666666666,
             'min_ncv_informedness': 0.4292929292929295,
             'min_ncv_log_loss': 0.4109046080619638,
             'min_ncv_markedness': 0.45333333333333314,
             'min_ncv_mcc': 0.44114940169152966,
             'min_ncv_negative_predictive_value': 0.72,
             'min_ncv_precision': 0.7333333333333333,
             'min_ncv_precision_recall_auc': 0.7707283791633226,
             'min_ncv_roc_auc': 0.8585858585858586,
             'min_ncv_sensitivity': 0.6111111111111112,
             'min_ncv_specificity': 0.8181818181818182,
             'min_test_average_precision': 0.5888888888888889,
             'min_test_balanced_accuracy': 0.375,
             'min_test_brier_loss': 0.010998749999999998,
             'min_test_f1': 0.28571428571428575,
             'min_test_informedness': -0.25,
             'min_test_log_loss': 0.0912963941480849,
             'min_test_markedness': -0.2666666666666666,
             'min_test_mcc': -0.2581988897471611,
             'min_test_negative_predictive_value': 0.4,
             'min_test_precision': 0.3333333333333333,
             'min_test_precision_recall_auc': 0.40555555555555556,
             'min_test_roc_auc': 0.625,
             'min_test_sensitivity': 0.25,
             'min_test_specificity': 0.4,
             'min_train_average_precision': 0.9999999999999999,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.006645833333333333,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.05357618449717011,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999999,
             'min_train_roc_auc': 0.9999999999999999,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.7837364 , 0.79823254, 0.84234885, 0.79715187, 0.81402836,
       0.80883951, 0.81790888, 0.80163846, 0.79472122, 0.83788868]),
             'ncv_balanced_accuracy': array([0.73737374, 0.76515152, 0.82070707, 0.76515152, 0.84343434,
       0.71464646, 0.73737374, 0.79292929, 0.82070707, 0.7979798 ]),
             'ncv_brier_loss': array([0.16095268, 0.1508066 , 0.1356153 , 0.15539565, 0.11684417,
       0.15077895, 0.13478795, 0.14659892, 0.14090093, 0.1402311 ]),
             'ncv_f1': array([0.6875    , 0.72727273, 0.8       , 0.72727273, 0.82352941,
       0.66666667, 0.6875    , 0.76470588, 0.8       , 0.77777778]),
             'ncv_informedness': array([0.47474747, 0.53030303, 0.64141414, 0.53030303, 0.68686869,
       0.42929293, 0.47474747, 0.58585859, 0.64141414, 0.5959596 ]),
             'ncv_log_loss': array([0.515289  , 0.49520363, 0.44210347, 0.51152965, 0.41090461,
       0.48219964, 0.44295536, 0.49565495, 1.22278876, 0.44643939]),
             'ncv_markedness': array([0.51648352, 0.56      , 0.64961637, 0.56      , 0.70833333,
       0.45333333, 0.51648352, 0.60416667, 0.64961637, 0.5959596 ]),
             'ncv_mcc': array([0.49517597, 0.54494926, 0.64550223, 0.54494926, 0.69751845,
       0.4411494 , 0.49517597, 0.59494221, 0.64550223, 0.5959596 ]),
             'ncv_negative_predictive_value': array([0.73076923, 0.76      , 0.82608696, 0.76      , 0.83333333,
       0.72      , 0.73076923, 0.79166667, 0.82608696, 0.81818182]),
             'ncv_precision': array([0.78571429, 0.8       , 0.82352941, 0.8       , 0.875     ,
       0.73333333, 0.78571429, 0.8125    , 0.82352941, 0.77777778]),
             'ncv_precision_recall_auc': array([0.77072838, 0.78208793, 0.83080722, 0.78263802, 0.78605517,
       0.80004856, 0.81690833, 0.78780273, 0.79292197, 0.83036243]),
             'ncv_roc_auc': array([0.85858586, 0.875     , 0.88888889, 0.86363636, 0.90909091,
       0.85984848, 0.88510101, 0.86489899, 0.88762626, 0.88762626]),
             'ncv_sensitivity': array([0.61111111, 0.66666667, 0.77777778, 0.66666667, 0.77777778,
       0.61111111, 0.61111111, 0.72222222, 0.77777778, 0.77777778]),
             'ncv_specificity': array([0.86363636, 0.86363636, 0.86363636, 0.86363636, 0.90909091,
       0.81818182, 0.86363636, 0.86363636, 0.86363636, 0.81818182]),
             'ranked_best_inner_params': [{'frequency': 14, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 11, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
             'std_ncv_average_precision': 0.01885560375989223,
             'std_ncv_balanced_accuracy': 0.04239032501271676,
             'std_ncv_brier_loss': 0.012594891160831621,
             'std_ncv_f1': 0.05481458747513364,
             'std_ncv_informedness': 0.08478065002543352,
             'std_ncv_log_loss': 0.24012334295323737,
             'std_ncv_markedness': 0.07593462877969073,
             'std_ncv_mcc': 0.08028622350016006,
             'std_ncv_negative_predictive_value': 0.04463779488822098,
             'std_ncv_precision': 0.036826493203868375,
             'std_ncv_precision_recall_auc': 0.021057393250681636,
             'std_ncv_roc_auc': 0.016378490161553697,
             'std_ncv_sensitivity': 0.07499428419006142,
             'std_ncv_specificity': 0.025802100554433917,
             'std_test_average_precision': 0.11371705460474099,
             'std_test_balanced_accuracy': 0.12479291235906265,
             'std_test_brier_loss': 0.061073646196672896,
             'std_test_f1': 0.16745652072821082,
             'std_test_informedness': 0.2495858247181253,
             'std_test_log_loss': 0.6147065134061837,
             'std_test_markedness': 0.24407517206808588,
             'std_test_mcc': 0.24278477983835983,
             'std_test_negative_predictive_value': 0.13985032127453442,
             'std_test_precision': 0.19937544205198401,
             'std_test_precision_recall_auc': 0.14241294365556595,
             'std_test_roc_auc': 0.09710389624864013,
             'std_test_sensitivity': 0.22660363269199005,
             'std_test_specificity': 0.1802067973077552,
             'std_train_average_precision': 6.913357098761609e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.002038032556501418,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.011578583412984414,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 6.913357098761609e-17,
             'std_train_roc_auc': 2.242989226691107e-17,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([0.825     , 0.83035714, 0.80416667, 0.80555556, 0.91666667,
       0.95      , 0.95      , 1.        , 0.80555556, 0.80555556,
       1.        , 1.        , 0.95      , 0.80555556, 0.80555556,
       1.        , 1.        , 0.91666667, 0.75555556, 1.        ,
       0.95      , 0.95      , 1.        , 0.58888889, 0.91666667,
       0.91666667, 0.69166667, 1.        , 1.        , 0.91666667,
       0.80416667, 0.89285714, 1.        , 1.        , 0.86666667,
       1.        , 0.95      , 0.81666667, 0.66666667, 1.        ,
       1.        , 0.91666667, 1.        , 0.75555556, 0.63888889,
       0.8875    , 0.95      , 1.        , 0.80555556, 0.64444444]),
             'test_balanced_accuracy': array([0.625     , 0.625     , 0.75      , 0.9       , 0.83333333,
       0.75      , 0.875     , 0.75      , 0.73333333, 0.8       ,
       0.875     , 0.875     , 0.875     , 0.8       , 0.73333333,
       0.75      , 0.75      , 0.875     , 0.7       , 0.83333333,
       0.875     , 0.875     , 0.875     , 0.8       , 0.83333333,
       0.875     , 0.375     , 0.625     , 1.        , 0.8       ,
       0.75      , 0.625     , 0.875     , 0.66666667, 0.66666667,
       0.875     , 0.875     , 0.75      , 0.56666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.56666667, 0.73333333,
       0.75      , 0.75      , 1.        , 0.9       , 0.63333333]),
             'test_brier_loss': array([0.1772375 , 0.21762   , 0.20029337, 0.10485   , 0.1047625 ,
       0.1648875 , 0.1249365 , 0.1162565 , 0.1665    , 0.1814525 ,
       0.080924  , 0.1145845 , 0.129088  , 0.1704245 , 0.1830555 ,
       0.1681125 , 0.12805925, 0.146535  , 0.265451  , 0.0688205 ,
       0.0979125 , 0.112537  , 0.0651625 , 0.207925  , 0.10068388,
       0.1396275 , 0.249637  , 0.1622125 , 0.01099875, 0.191419  ,
       0.18834212, 0.156963  , 0.06579937, 0.09170225, 0.171133  ,
       0.06388675, 0.1058125 , 0.15078188, 0.327725  , 0.0847885 ,
       0.0703375 , 0.17456112, 0.082831  , 0.177375  , 0.1994    ,
       0.13875   , 0.1489375 , 0.024237  , 0.177756  , 0.211475  ]),
             'test_f1': array([0.4       , 0.57142857, 0.75      , 0.85714286, 0.8       ,
       0.66666667, 0.85714286, 0.66666667, 0.66666667, 0.75      ,
       0.85714286, 0.85714286, 0.85714286, 0.75      , 0.66666667,
       0.66666667, 0.66666667, 0.85714286, 0.66666667, 0.8       ,
       0.85714286, 0.85714286, 0.85714286, 0.75      , 0.8       ,
       0.85714286, 0.28571429, 0.4       , 1.        , 0.75      ,
       0.75      , 0.66666667, 0.85714286, 0.5       , 0.5       ,
       0.85714286, 0.85714286, 0.8       , 0.4       , 0.8       ,
       1.        , 0.75      , 1.        , 0.4       , 0.66666667,
       0.75      , 0.66666667, 1.        , 0.85714286, 0.57142857]),
             'test_informedness': array([ 0.25      ,  0.25      ,  0.5       ,  0.8       ,  0.66666667,
        0.5       ,  0.75      ,  0.5       ,  0.46666667,  0.6       ,
        0.75      ,  0.75      ,  0.75      ,  0.6       ,  0.46666667,
        0.5       ,  0.5       ,  0.75      ,  0.4       ,  0.66666667,
        0.75      ,  0.75      ,  0.75      ,  0.6       ,  0.66666667,
        0.75      , -0.25      ,  0.25      ,  1.        ,  0.6       ,
        0.5       ,  0.25      ,  0.75      ,  0.33333333,  0.33333333,
        0.75      ,  0.75      ,  0.5       ,  0.13333333,  0.66666667,
        1.        ,  0.5       ,  1.        ,  0.13333333,  0.46666667,
        0.5       ,  0.5       ,  1.        ,  0.8       ,  0.26666667]),
             'test_log_loss': array([0.50137127, 0.63306473, 0.78332554, 0.33809678, 0.3205867 ,
       0.48015601, 0.36968074, 0.36147659, 0.46883877, 0.79586603,
       0.29192121, 0.38863935, 0.39749562, 0.5025682 , 0.62989297,
       0.46859778, 0.40356961, 0.45752618, 0.97131709, 0.2566376 ,
       0.32545073, 0.3545085 , 0.23975572, 0.82837623, 0.30643187,
       0.43492023, 0.65787367, 0.47194099, 0.09129639, 0.75496691,
       0.72682765, 0.46941874, 0.2438551 , 0.28365438, 0.49102092,
       0.23014145, 0.3476172 , 0.44031166, 1.17270778, 0.28749666,
       0.25286153, 0.51653278, 0.28814695, 0.50696466, 4.54943789,
       0.40640559, 0.43793435, 0.14476262, 0.66666536, 0.57642905]),
             'test_markedness': array([ 0.57142857,  0.26666667,  0.5       ,  0.75      ,  0.83333333,
        0.66666667,  0.8       ,  0.66666667,  0.46666667,  0.6       ,
        0.8       ,  0.8       ,  0.8       ,  0.6       ,  0.46666667,
        0.66666667,  0.66666667,  0.8       ,  0.5       ,  0.83333333,
        0.8       ,  0.8       ,  0.8       ,  0.6       ,  0.83333333,
        0.8       , -0.26666667,  0.57142857,  1.        ,  0.6       ,
        0.5       ,  0.26666667,  0.8       ,  0.71428571,  0.71428571,
        0.8       ,  0.8       ,  0.66666667,  0.16666667,  0.83333333,
        1.        ,  0.5       ,  1.        ,  0.16666667,  0.46666667,
        0.5       ,  0.66666667,  1.        ,  0.75      ,  0.25      ]),
             'test_mcc': array([ 0.37796447,  0.25819889,  0.5       ,  0.77459667,  0.74535599,
        0.57735027,  0.77459667,  0.57735027,  0.46666667,  0.6       ,
        0.77459667,  0.77459667,  0.77459667,  0.6       ,  0.46666667,
        0.57735027,  0.57735027,  0.77459667,  0.4472136 ,  0.74535599,
        0.77459667,  0.77459667,  0.77459667,  0.6       ,  0.74535599,
        0.77459667, -0.25819889,  0.37796447,  1.        ,  0.6       ,
        0.5       ,  0.25819889,  0.77459667,  0.48795004,  0.48795004,
        0.77459667,  0.77459667,  0.57735027,  0.1490712 ,  0.74535599,
        1.        ,  0.5       ,  1.        ,  0.1490712 ,  0.46666667,
        0.5       ,  0.57735027,  1.        ,  0.77459667,  0.25819889]),
             'test_negative_predictive_value': array([0.57142857, 0.6       , 0.75      , 1.        , 0.83333333,
       0.66666667, 0.8       , 0.66666667, 0.8       , 1.        ,
       0.8       , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 0.66666667, 0.8       , 1.        , 0.83333333,
       0.8       , 0.8       , 0.8       , 1.        , 0.83333333,
       0.8       , 0.4       , 0.57142857, 1.        , 1.        ,
       0.75      , 0.66666667, 0.8       , 0.71428571, 0.71428571,
       0.8       , 0.8       , 1.        , 0.66666667, 0.83333333,
       1.        , 0.75      , 1.        , 0.66666667, 0.8       ,
       0.75      , 0.66666667, 1.        , 1.        , 0.75      ]),
             'test_precision': array([1.        , 0.66666667, 0.75      , 0.75      , 1.        ,
       1.        , 1.        , 1.        , 0.66666667, 0.6       ,
       1.        , 1.        , 1.        , 0.6       , 0.66666667,
       1.        , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 0.33333333, 1.        , 1.        , 0.6       ,
       0.75      , 0.6       , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.66666667, 0.5       , 1.        ,
       1.        , 0.75      , 1.        , 0.5       , 0.66666667,
       0.75      , 1.        , 1.        , 0.75      , 0.5       ]),
             'test_precision_recall_auc': array([0.88125   , 0.8110119 , 0.76666667, 0.76388889, 0.90277778,
       0.94375   , 0.94375   , 1.        , 0.76388889, 0.76388889,
       1.        , 1.        , 0.94375   , 0.76388889, 0.76388889,
       1.        , 1.        , 0.90833333, 0.71111111, 1.        ,
       0.94375   , 0.94375   , 1.        , 0.46111111, 0.90277778,
       0.90833333, 0.65      , 1.        , 1.        , 0.90277778,
       0.76666667, 0.88392857, 1.        , 1.        , 0.85      ,
       1.        , 0.94375   , 0.79583333, 0.62222222, 1.        ,
       1.        , 0.90833333, 1.        , 0.71111111, 0.68055556,
       0.87083333, 0.94375   , 1.        , 0.76388889, 0.40555556]),
             'test_roc_auc': array([0.875     , 0.75      , 0.8125    , 0.86666667, 0.93333333,
       0.9375    , 0.9375    , 1.        , 0.86666667, 0.86666667,
       1.        , 1.        , 0.9375    , 0.86666667, 0.86666667,
       1.        , 1.        , 0.875     , 0.8       , 1.        ,
       0.9375    , 0.9375    , 1.        , 0.73333333, 0.93333333,
       0.875     , 0.625     , 1.        , 1.        , 0.93333333,
       0.8125    , 0.8125    , 1.        , 1.        , 0.86666667,
       1.        , 0.9375    , 0.75      , 0.66666667, 1.        ,
       1.        , 0.875     , 1.        , 0.8       , 0.83333333,
       0.875     , 0.9375    , 1.        , 0.86666667, 0.73333333]),
             'test_sensitivity': array([0.25      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.5       , 0.75      , 0.5       , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.25      , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.33333333, 0.33333333,
       0.75      , 0.75      , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 0.75, 0.75, 0.8 , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.6 , 1.  ,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 1.  , 0.4 , 1.  , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 0.5 , 1.  , 1.  , 0.6 , 0.75, 0.5 , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.5 , 0.8 , 1.  , 1.  , 0.75, 1.  , 0.8 ,
       0.8 , 0.75, 1.  , 1.  , 0.8 , 0.6 ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01473542, 0.01118846, 0.0086498 , 0.01110521, 0.01102025,
       0.01354687, 0.01075542, 0.01248125, 0.00946979, 0.0088265 ,
       0.01226892, 0.01406892, 0.01034754, 0.00998917, 0.01175162,
       0.01258438, 0.01275644, 0.012472  , 0.00720942, 0.01407667,
       0.01198613, 0.00783646, 0.01528333, 0.0100625 , 0.01072111,
       0.01423971, 0.0083775 , 0.01034688, 0.01303965, 0.00912892,
       0.00879227, 0.01084417, 0.01093547, 0.01225341, 0.01097988,
       0.01257936, 0.01450417, 0.00937224, 0.00664583, 0.011841  ,
       0.01168333, 0.01085325, 0.01266271, 0.01313333, 0.0094375 ,
       0.01141042, 0.01011458, 0.01332725, 0.00878432, 0.00888333]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.10129564, 0.08364018, 0.06694702, 0.08091501, 0.07759402,
       0.08762842, 0.07630759, 0.08884482, 0.07123469, 0.0710026 ,
       0.08526569, 0.10017473, 0.08247572, 0.07416551, 0.09024877,
       0.08003835, 0.09415647, 0.09003533, 0.06236379, 0.10206125,
       0.08344923, 0.06476109, 0.09620944, 0.06896713, 0.07871332,
       0.09890496, 0.06289856, 0.07672647, 0.09338208, 0.07077485,
       0.06719979, 0.0838638 , 0.08122569, 0.08560821, 0.07807613,
       0.08962057, 0.1003387 , 0.0707048 , 0.05357618, 0.08199046,
       0.08084171, 0.08451989, 0.08865546, 0.08714285, 0.06435275,
       0.07856197, 0.07205368, 0.09353044, 0.06693281, 0.07025793]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

III14 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.884 ± 0.114267'],
 'mean_test_balanced_accuracy': ['0.780 ± 0.116728'],
 'mean_test_brier_loss': ['0.14435 ± 0.057934'],
 'mean_test_f1': ['0.730 ± 0.153047'],
 'mean_test_informedness': ['0.560 ± 0.233457'],
 'mean_test_log_loss': ['0.5443 ± 0.661980'],
 'mean_test_markedness': ['0.636 ± 0.230042'],
 'mean_test_mcc': ['0.594 ± 0.226411'],
 'mean_test_negative_predictive_value': ['0.790 ± 0.131545'],
 'mean_test_precision': ['0.846 ± 0.189867'],
 'mean_test_precision_recall_auc': ['0.870 ± 0.127813'],
 'mean_test_roc_auc': ['0.890 ± 0.103648'],
 'mean_test_sensitivity': ['0.692 ± 0.212459'],
 'mean_test_specificity': ['0.868 ± 0.172248'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01118 ± 0.002255'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0809 ± 0.013225'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.888 ± 0.110628'],
 'mean_test_balanced_accuracy': ['0.796 ± 0.128287'],
 'mean_test_brier_loss': ['0.14293 ± 0.057634'],
 'mean_test_f1': ['0.754 ± 0.163884'],
 'mean_test_informedness': ['0.592 ± 0.256574'],
 'mean_test_log_loss': ['0.4624 ± 0.197765'],
 'mean_test_markedness': ['0.651 ± 0.253432'],
 'mean_test_mcc': ['0.619 ± 0.251209'],
 'mean_test_negative_predictive_value': ['0.812 ± 0.136673'],
 'mean_test_precision': ['0.839 ± 0.192124'],
 'mean_test_precision_recall_auc': ['0.875 ± 0.126803'],
 'mean_test_roc_auc': ['0.896 ± 0.095730'],
 'mean_test_sensitivity': ['0.728 ± 0.211496'],
 'mean_test_specificity': ['0.864 ± 0.168741'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01130 ± 0.002461'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0810 ± 0.013405'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.889 ± 0.113717'],
 'mean_test_balanced_accuracy': ['0.784 ± 0.124793'],
 'mean_test_brier_loss': ['0.14329 ± 0.061074'],
 'mean_test_f1': ['0.734 ± 0.167457'],
 'mean_test_informedness': ['0.568 ± 0.249586'],
 'mean_test_log_loss': ['0.5465 ± 0.614707'],
 'mean_test_markedness': ['0.643 ± 0.244075'],
 'mean_test_mcc': ['0.602 ± 0.242785'],
 'mean_test_negative_predictive_value': ['0.800 ± 0.139850'],
 'mean_test_precision': ['0.843 ± 0.199375'],
 'mean_test_precision_recall_auc': ['0.870 ± 0.142413'],
 'mean_test_roc_auc': ['0.899 ± 0.097104'],
 'mean_test_sensitivity': ['0.703 ± 0.226604'],
 'mean_test_specificity': ['0.865 ± 0.180207'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01119 ± 0.002038'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0808 ± 0.011579'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

III14 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.816 ± 0.024828'],
 'mean_ncv_balanced_accuracy': ['0.776 ± 0.041137'],
 'mean_ncv_brier_loss': ['0.14435 ± 0.010772'],
 'mean_ncv_f1': ['0.741 ± 0.054721'],
 'mean_ncv_informedness': ['0.553 ± 0.082275'],
 'mean_ncv_log_loss': ['0.5443 ± 0.246614'],
 'mean_ncv_markedness': ['0.579 ± 0.069397'],
 'mean_ncv_mcc': ['0.566 ± 0.075854'],
 'mean_ncv_negative_predictive_value': ['0.775 ± 0.045658'],
 'mean_ncv_precision': ['0.804 ± 0.029552'],
 'mean_ncv_precision_recall_auc': ['0.807 ± 0.023203'],
 'mean_ncv_roc_auc': ['0.878 ± 0.014652'],
 'mean_ncv_sensitivity': ['0.689 ± 0.079436'],
 'mean_ncv_specificity': ['0.864 ± 0.021427']}

III14 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.814 ± 0.011531'],
 'mean_ncv_balanced_accuracy': ['0.793 ± 0.044139'],
 'mean_ncv_brier_loss': ['0.14293 ± 0.010634'],
 'mean_ncv_f1': ['0.765 ± 0.053699'],
 'mean_ncv_informedness': ['0.587 ± 0.088277'],
 'mean_ncv_log_loss': ['0.4624 ± 0.028433'],
 'mean_ncv_markedness': ['0.607 ± 0.087444'],
 'mean_ncv_mcc': ['0.597 ± 0.086958'],
 'mean_ncv_negative_predictive_value': ['0.796 ± 0.046274'],
 'mean_ncv_precision': ['0.811 ± 0.058151'],
 'mean_ncv_precision_recall_auc': ['0.800 ± 0.015089'],
 'mean_ncv_roc_auc': ['0.877 ± 0.015098'],
 'mean_ncv_sensitivity': ['0.728 ± 0.076129'],
 'mean_ncv_specificity': ['0.859 ± 0.050023']}

III14 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.810 ± 0.018856'],
 'mean_ncv_balanced_accuracy': ['0.780 ± 0.042390'],
 'mean_ncv_brier_loss': ['0.14329 ± 0.012595'],
 'mean_ncv_f1': ['0.746 ± 0.054815'],
 'mean_ncv_informedness': ['0.559 ± 0.084781'],
 'mean_ncv_log_loss': ['0.5465 ± 0.240123'],
 'mean_ncv_markedness': ['0.581 ± 0.075935'],
 'mean_ncv_mcc': ['0.570 ± 0.080286'],
 'mean_ncv_negative_predictive_value': ['0.780 ± 0.044638'],
 'mean_ncv_precision': ['0.802 ± 0.036826'],
 'mean_ncv_precision_recall_auc': ['0.798 ± 0.021057'],
 'mean_ncv_roc_auc': ['0.878 ± 0.016378'],
 'mean_ncv_sensitivity': ['0.700 ± 0.074994'],
 'mean_ncv_specificity': ['0.859 ± 0.025802']}

III14 end: 16.09.2022_12-47-26
++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++
C-1 start: 16.09.2022_12-47-26

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  2  1  4  4  4  0  2
  2  3  3  4  3  1  2  0  0  1  0  4  4  3  2  2  3  2  1  1  3  2  4  3
  1  1  0  0  0  1  4  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [40 46 55 56 58 74 75 76]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [42 53 57 66 67 72 73 77]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 47 48 54 62 63 65 69]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [49 50 52 61 64 68 71 79]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [43 44 45 51 59 60 70 78]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  0  0  3  0  4  3  3
  0  3  3  4  2  1  4  1  0  4  4  1  0  0  2  2  3  1  0  1  4  4  3  2
  2  4  2  2  1  3  2  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 42 44 48 56 60 61 66]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [40 53 55 59 65 67 76 79]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [52 62 63 71 72 74 75 78]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [43 46 47 49 50 64 70 77]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [45 51 54 57 58 68 69 73]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  2  3  1  3  0  2  3  4
  0  2  2  4  0  1  4  3  0  3  0  0  3  4  1  4  4  2  3  2  0  2  1  1
  0  1  1  4  1  3  4  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [44 48 52 56 58 59 68 72]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [42 53 62 70 71 73 74 76]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [40 45 49 50 65 67 69 79]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [41 43 46 55 57 60 66 77]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [47 51 54 61 63 64 75 78]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  2  1  0  3  2  4  1  0
  3  1  3  0  0  3  3  2  1  3  1  1  3  2  2  4  4  2  4  1  4  1  0  4
  0  4  0  4  3  2  0  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [42 47 51 52 70 72 74 78]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 46 49 56 58 59 67 69]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [40 44 55 61 62 65 77 79]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [43 48 50 53 54 57 60 76]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [45 63 64 66 68 71 73 75]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  1  4  1  4  4
  2  1  3  4  4  0  3  0  3  1  4  3  2  0  3  2  3  3  2  1  0  4  2  0
  0  4  1  2  2  0  1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [42 53 55 61 68 71 72 77]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [40 43 45 49 57 67 74 78]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [41 48 60 63 66 70 75 76]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [50 54 56 59 62 64 65 79]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [44 46 47 51 52 58 69 73]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  4  0  3  4  2
  0  2  1  0  2  4  4  2  0  1  3  1  1  1  2  0  2  3  2  4  0  4  3  1
  4  3  1  3  3  4  3  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [42 44 48 51 56 63 68 79]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [40 50 57 59 60 61 71 74]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [41 47 49 52 55 62 64 66]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [45 58 65 70 73 75 76 78]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [43 46 53 54 67 69 72 77]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  2  4  4  1  3  2  0
  2  2  1  3  3  1  0  2  4  0  1  3  3  4  0  1  0  3  4  4  0  3  2  3
  1  0  4  1  4  0  2  2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [47 54 57 62 64 68 73 77]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [40 44 50 53 58 63 72 75]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [41 46 48 49 55 70 78 79]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [45 51 52 59 60 65 69 71]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [42 43 56 61 66 67 74 76]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  3  4  3  0  1  0  2  4
  2  1  2  3  4  0  3  4  4  2  0  0  2  1  4  3  4  0  2  1  1  3  2  0
  3  1  0  1  3  2  1  4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [43 45 53 58 59 65 71 74]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [44 49 61 67 68 73 75 78]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [46 48 50 57 60 66 70 77]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [40 42 51 54 63 69 72 76]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [41 47 52 55 56 62 64 79]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  3  2  1  4  0  4  2  4
  2  1  3  0  4  1  4  3  2  1  0  3  0  3  4  1  1  0  0  2  3  4  1  3
  4  0  2  2  3  1  2  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [44 51 58 60 65 66 73 79]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [42 49 53 57 63 64 70 77]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [41 46 48 56 67 74 75 78]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [40 50 55 59 61 68 71 76]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [43 45 47 52 54 62 69 72]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  4  4  1  4  3  1  3  0
  1  1  0  2  3  3  3  4  3  4  2  0  3  2  0  0  2  1  3  1  2  1  1  2
  0  0  4  4  4  2  2  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [47 50 59 62 63 72 73 79]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [42 45 48 49 65 67 69 70]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [51 58 61 64 68 71 77 78]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [44 46 52 53 54 56 60 66]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [40 41 43 55 57 74 75 76]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_12-47-26.
End of grid search at 16.09.2022_12-47-38.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_12-47-38.
End of grid search at 16.09.2022_12-47-50.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_12-47-50.
End of grid search at 16.09.2022_12-48-03.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_12-48-03.
End of grid search at 16.09.2022_12-48-15.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_12-48-15.
End of grid search at 16.09.2022_12-48-28.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_12-48-39.
End of grid search at 16.09.2022_12-48-52.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_12-48-52.
End of grid search at 16.09.2022_12-49-04.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_12-49-04.
End of grid search at 16.09.2022_12-49-17.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_12-49-17.
End of grid search at 16.09.2022_12-49-29.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_12-49-29.
End of grid search at 16.09.2022_12-49-42.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_12-49-58.
End of grid search at 16.09.2022_12-50-15.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_12-50-15.
End of grid search at 16.09.2022_12-50-33.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_12-50-33.
End of grid search at 16.09.2022_12-50-50.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_12-50-50.
End of grid search at 16.09.2022_12-51-07.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_12-51-07.
End of grid search at 16.09.2022_12-51-24.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_12-51-35.
End of grid search at 16.09.2022_12-51-47.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_12-51-47.
End of grid search at 16.09.2022_12-52-00.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_12-52-00.
End of grid search at 16.09.2022_12-52-12.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_12-52-12.
End of grid search at 16.09.2022_12-52-25.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_12-52-25.
End of grid search at 16.09.2022_12-52-37.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_12-52-57.
End of grid search at 16.09.2022_12-53-14.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_12-53-14.
End of grid search at 16.09.2022_12-53-32.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_12-53-32.
End of grid search at 16.09.2022_12-53-49.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_12-53-49.
End of grid search at 16.09.2022_12-54-07.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_12-54-07.
End of grid search at 16.09.2022_12-54-24.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_12-54-33.
End of grid search at 16.09.2022_12-54-50.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_12-54-50.
End of grid search at 16.09.2022_12-55-07.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_12-55-07.
End of grid search at 16.09.2022_12-55-24.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_12-55-24.
End of grid search at 16.09.2022_12-55-42.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_12-55-42.
End of grid search at 16.09.2022_12-55-59.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_12-56-10.
End of grid search at 16.09.2022_12-56-23.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_12-56-23.
End of grid search at 16.09.2022_12-56-35.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_12-56-35.
End of grid search at 16.09.2022_12-56-48.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_12-56-48.
End of grid search at 16.09.2022_12-57-00.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_12-57-00.
End of grid search at 16.09.2022_12-57-13.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_12-57-22.
End of grid search at 16.09.2022_12-57-35.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_12-57-35.
End of grid search at 16.09.2022_12-57-47.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_12-57-47.
End of grid search at 16.09.2022_12-58-00.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_12-58-00.
End of grid search at 16.09.2022_12-58-12.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_12-58-12.
End of grid search at 16.09.2022_12-58-25.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_12-58-38.
End of grid search at 16.09.2022_12-59-04.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_12-59-04.
End of grid search at 16.09.2022_12-59-29.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_12-59-29.
End of grid search at 16.09.2022_12-59-55.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_12-59-55.
End of grid search at 16.09.2022_13-00-21.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_13-00-21.
End of grid search at 16.09.2022_13-00-46.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_13-00-58.
End of grid search at 16.09.2022_13-01-10.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_13-01-10.
End of grid search at 16.09.2022_13-01-23.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_13-01-23.
End of grid search at 16.09.2022_13-01-35.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_13-01-35.
End of grid search at 16.09.2022_13-01-48.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_13-01-48.
End of grid search at 16.09.2022_13-02-00.

C-1 results:
{'mcc': {'best_inner_indices': array([1, 5, 1, 4, 3, 1, 4, 0, 0, 1, 2, 2, 0, 4, 0, 5, 4, 4, 4, 4, 0, 2,
       3, 0, 1, 5, 3, 0, 0, 3, 4, 2, 4, 1, 0, 0, 5, 4, 1, 2, 4, 1, 3, 1,
       3, 2, 3, 1, 1, 4]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}],
         'best_inner_scores': array([0.53234864, 0.74819006, 0.70481672, 0.62376037, 0.64432423,
       0.74819006, 0.6407648 , 0.50988518, 0.73037345, 0.6659598 ,
       0.63907408, 0.53239714, 0.76690557, 0.62557745, 0.72790833,
       0.66017494, 0.66406377, 0.61807005, 0.77055918, 0.62860218,
       0.63864262, 0.81527096, 0.53452248, 0.71438158, 0.64412032,
       0.70311315, 0.66406377, 0.80965988, 0.56101149, 0.56101149,
       0.81527096, 0.72415125, 0.62015873, 0.58307537, 0.68640255,
       0.46649711, 0.55539062, 0.62015873, 0.8749507 , 0.64432423,
       0.55351172, 0.66144338, 0.53132337, 0.66535948, 0.75308368,
       0.70481672, 0.62015873, 0.48997894, 0.66807953, 0.58954943]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [500, 1000, 100]},
         'max_ncv_average_precision': 0.9192848884877871,
         'max_ncv_balanced_accuracy': 0.8156565656565656,
         'max_ncv_brier_loss': 0.1571558,
         'max_ncv_f1': 0.7878787878787877,
         'max_ncv_informedness': 0.6313131313131313,
         'max_ncv_log_loss': 0.47010393642752046,
         'max_ncv_markedness': 0.6666666666666667,
         'max_ncv_mcc': 0.6487491201346025,
         'max_ncv_negative_predictive_value': 0.8181818181818182,
         'max_ncv_precision': 0.8666666666666667,
         'max_ncv_precision_recall_auc': 0.9185370158029387,
         'max_ncv_roc_auc': 0.922979797979798,
         'max_ncv_sensitivity': 0.7777777777777778,
         'max_ncv_specificity': 0.9090909090909091,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.27394,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 0.8950057833454705,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.015684375,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.108623421565529,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.8896149721458733,
         'mean_ncv_balanced_accuracy': 0.7868686868686868,
         'mean_ncv_brier_loss': 0.138612415,
         'mean_ncv_f1': 0.7558080808080808,
         'mean_ncv_informedness': 0.5737373737373737,
         'mean_ncv_log_loss': 0.41964908236293497,
         'mean_ncv_markedness': 0.5988166555666555,
         'mean_ncv_mcc': 0.5861081505351552,
         'mean_ncv_negative_predictive_value': 0.7832412587412587,
         'mean_ncv_precision': 0.8155753968253968,
         'mean_ncv_precision_recall_auc': 0.8870707835273357,
         'mean_ncv_roc_auc': 0.88270202020202,
         'mean_ncv_sensitivity': 0.7055555555555555,
         'mean_ncv_specificity': 0.8681818181818182,
         'mean_test_average_precision': 0.9166269841269841,
         'mean_test_balanced_accuracy': 0.7891666666666666,
         'mean_test_brier_loss': 0.138612415,
         'mean_test_f1': 0.7452063492063492,
         'mean_test_informedness': 0.5783333333333335,
         'mean_test_log_loss': 0.41964908236293497,
         'mean_test_markedness': 0.6430000000000001,
         'mean_test_mcc': 0.6073750084972221,
         'mean_test_negative_predictive_value': 0.7969999999999999,
         'mean_test_precision': 0.846,
         'mean_test_precision_recall_auc': 0.9067301587301588,
         'mean_test_roc_auc': 0.9019583333333333,
         'mean_test_sensitivity': 0.7083333333333333,
         'mean_test_specificity': 0.8699999999999999,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011474579374999998,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.08311505161557592,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.8592078654823754,
         'min_ncv_balanced_accuracy': 0.7424242424242424,
         'min_ncv_brier_loss': 0.11962142500000002,
         'min_ncv_f1': 0.7058823529411765,
         'min_ncv_informedness': 0.48484848484848486,
         'min_ncv_log_loss': 0.3682690077714896,
         'min_ncv_markedness': 0.5,
         'min_ncv_mcc': 0.4923659639173309,
         'min_ncv_negative_predictive_value': 0.75,
         'min_ncv_precision': 0.75,
         'min_ncv_precision_recall_auc': 0.8539862488637,
         'min_ncv_roc_auc': 0.856060606060606,
         'min_ncv_sensitivity': 0.6666666666666666,
         'min_ncv_specificity': 0.8181818181818182,
         'min_test_average_precision': 0.6984126984126984,
         'min_test_balanced_accuracy': 0.5666666666666667,
         'min_test_brier_loss': 0.018711000000000005,
         'min_test_f1': 0.4,
         'min_test_informedness': 0.1333333333333333,
         'min_test_log_loss': 0.12355404548621873,
         'min_test_markedness': 0.16666666666666652,
         'min_test_mcc': 0.14907119849998599,
         'min_test_negative_predictive_value': 0.5714285714285714,
         'min_test_precision': 0.5,
         'min_test_precision_recall_auc': 0.6547619047619047,
         'min_test_roc_auc': 0.6666666666666666,
         'min_test_sensitivity': 0.25,
         'min_test_specificity': 0.5,
         'min_train_average_precision': 0.9999999999999999,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.004807541666666666,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.04607793263736907,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999999,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.85920787, 0.88929217, 0.90100011, 0.87958045, 0.91928489,
       0.89041841, 0.88294915, 0.90928473, 0.8782911 , 0.88684084]),
         'ncv_balanced_accuracy': array([0.76515152, 0.81565657, 0.79292929, 0.79292929, 0.79292929,
       0.78787879, 0.74242424, 0.81565657, 0.76515152, 0.7979798 ]),
         'ncv_brier_loss': array([0.1571558 , 0.1387871 , 0.13058918, 0.14168823, 0.11962143,
       0.1363724 , 0.138272  , 0.12600963, 0.1493686 , 0.1482598 ]),
         'ncv_f1': array([0.72727273, 0.78787879, 0.76470588, 0.76470588, 0.76470588,
       0.75      , 0.70588235, 0.78787879, 0.72727273, 0.77777778]),
         'ncv_informedness': array([0.53030303, 0.63131313, 0.58585859, 0.58585859, 0.58585859,
       0.57575758, 0.48484848, 0.63131313, 0.53030303, 0.5959596 ]),
         'ncv_log_loss': array([0.47010394, 0.40706116, 0.38355484, 0.42679351, 0.36826901,
       0.41430981, 0.41060221, 0.41776842, 0.45429226, 0.44373566]),
         'ncv_markedness': array([0.56      , 0.66666667, 0.60416667, 0.60416667, 0.60416667,
       0.62637363, 0.5       , 0.66666667, 0.56      , 0.5959596 ]),
         'ncv_mcc': array([0.54494926, 0.64874912, 0.59494221, 0.59494221, 0.59494221,
       0.60053256, 0.49236596, 0.64874912, 0.54494926, 0.5959596 ]),
         'ncv_negative_predictive_value': array([0.76      , 0.8       , 0.79166667, 0.79166667, 0.79166667,
       0.76923077, 0.75      , 0.8       , 0.76      , 0.81818182]),
         'ncv_precision': array([0.8       , 0.86666667, 0.8125    , 0.8125    , 0.8125    ,
       0.85714286, 0.75      , 0.86666667, 0.8       , 0.77777778]),
         'ncv_precision_recall_auc': array([0.85398625, 0.88641409, 0.8995218 , 0.87687836, 0.91853702,
       0.88915484, 0.88027597, 0.90729869, 0.87460579, 0.88403503]),
         'ncv_roc_auc': array([0.85606061, 0.89520202, 0.90277778, 0.86363636, 0.9229798 ,
       0.88005051, 0.87121212, 0.89141414, 0.86616162, 0.87752525]),
         'ncv_sensitivity': array([0.66666667, 0.72222222, 0.72222222, 0.72222222, 0.72222222,
       0.66666667, 0.66666667, 0.72222222, 0.66666667, 0.77777778]),
         'ncv_specificity': array([0.86363636, 0.90909091, 0.86363636, 0.86363636, 0.86363636,
       0.90909091, 0.81818182, 0.90909091, 0.86363636, 0.81818182]),
         'ranked_best_inner_params': [{'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 11, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
         'std_ncv_average_precision': 0.01700724499438829,
         'std_ncv_balanced_accuracy': 0.023119817373875945,
         'std_ncv_brier_loss': 0.011309336108770437,
         'std_ncv_f1': 0.02775304911067184,
         'std_ncv_informedness': 0.04623963474775189,
         'std_ncv_log_loss': 0.030897862024769466,
         'std_ncv_markedness': 0.05037510652279701,
         'std_ncv_mcc': 0.047799028815621036,
         'std_ncv_negative_predictive_value': 0.02205322682885871,
         'std_ncv_precision': 0.03828379742737981,
         'std_ncv_precision_recall_auc': 0.018160786776242336,
         'std_ncv_roc_auc': 0.02046727167808557,
         'std_ncv_sensitivity': 0.03749714209503073,
         'std_ncv_specificity': 0.03353930851693732,
         'std_test_average_precision': 0.07465340702144549,
         'std_test_balanced_accuracy': 0.11042910018559625,
         'std_test_brier_loss': 0.05522801076293295,
         'std_test_f1': 0.14280574967291568,
         'std_test_informedness': 0.2208582003711925,
         'std_test_log_loss': 0.14533815375682235,
         'std_test_markedness': 0.2180510403312735,
         'std_test_mcc': 0.2147320650016201,
         'std_test_negative_predictive_value': 0.12989529168447775,
         'std_test_precision': 0.16928420734712044,
         'std_test_precision_recall_auc': 0.08502446412743116,
         'std_test_roc_auc': 0.08372189386915796,
         'std_test_sensitivity': 0.20220580656503606,
         'std_test_specificity': 0.15118578920369088,
         'std_train_average_precision': 6.913357098761609e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.002279575247865105,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.013501035318075916,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 6.913357098761609e-17,
         'std_train_roc_auc': 2.242989226691107e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([0.91666667, 0.83035714, 0.95      , 0.86666667, 0.91666667,
       0.8875    , 0.91666667, 1.        , 0.7       , 1.        ,
       1.        , 1.        , 0.8875    , 0.86666667, 0.91666667,
       0.89285714, 0.91666667, 0.91666667, 1.        , 1.        ,
       0.95      , 0.8875    , 1.        , 0.91666667, 0.86666667,
       0.91666667, 0.85416667, 0.91666667, 1.        , 1.        ,
       0.91666667, 0.91666667, 0.91666667, 1.        , 0.75555556,
       1.        , 0.91666667, 0.95      , 0.6984127 , 1.        ,
       0.95      , 0.85416667, 1.        , 0.83333333, 0.91666667,
       0.95      , 0.81666667, 1.        , 0.91666667, 0.83333333]),
         'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.83333333, 0.73333333,
       0.75      , 0.875     , 1.        , 0.66666667, 0.8       ,
       0.875     , 0.875     , 0.75      , 0.73333333, 0.73333333,
       0.75      , 0.875     , 0.75      , 0.8       , 0.83333333,
       0.875     , 0.625     , 0.875     , 0.9       , 0.73333333,
       0.875     , 0.625     , 0.625     , 1.        , 0.9       ,
       0.625     , 0.625     , 0.875     , 0.83333333, 0.66666667,
       1.        , 0.875     , 0.75      , 0.56666667, 0.83333333,
       0.75      , 0.625     , 0.75      , 0.83333333, 0.9       ,
       0.75      , 0.75      , 1.        , 0.8       , 0.73333333]),
         'test_brier_loss': array([0.1481135 , 0.260336  , 0.1432565 , 0.114473  , 0.1196    ,
       0.145893  , 0.1352295 , 0.0768    , 0.1839    , 0.152113  ,
       0.0763685 , 0.11009937, 0.15065   , 0.1790905 , 0.1367375 ,
       0.17228662, 0.1319115 , 0.1651505 , 0.158878  , 0.0802145 ,
       0.101525  , 0.17651363, 0.0785    , 0.1149625 , 0.126606  ,
       0.140412  , 0.1748125 , 0.226425  , 0.0206125 , 0.1196    ,
       0.1440275 , 0.1785885 , 0.110144  , 0.0711    , 0.1875    ,
       0.032     , 0.09965762, 0.1342015 , 0.27394   , 0.090249  ,
       0.102422  , 0.258972  , 0.112025  , 0.1509615 , 0.1224625 ,
       0.1411435 , 0.2196625 , 0.018711  , 0.165672  , 0.19611   ]),
         'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.8       , 0.66666667,
       0.66666667, 0.85714286, 1.        , 0.5       , 0.75      ,
       0.88888889, 0.85714286, 0.66666667, 0.66666667, 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.75      , 0.8       ,
       0.85714286, 0.57142857, 0.85714286, 0.85714286, 0.66666667,
       0.85714286, 0.57142857, 0.4       , 1.        , 0.85714286,
       0.66666667, 0.66666667, 0.85714286, 0.8       , 0.5       ,
       1.        , 0.85714286, 0.75      , 0.4       , 0.8       ,
       0.75      , 0.57142857, 0.66666667, 0.8       , 0.85714286,
       0.75      , 0.66666667, 1.        , 0.75      , 0.66666667]),
         'test_informedness': array([0.75      , 0.25      , 0.5       , 0.66666667, 0.46666667,
       0.5       , 0.75      , 1.        , 0.33333333, 0.6       ,
       0.75      , 0.75      , 0.5       , 0.46666667, 0.46666667,
       0.5       , 0.75      , 0.5       , 0.6       , 0.66666667,
       0.75      , 0.25      , 0.75      , 0.8       , 0.46666667,
       0.75      , 0.25      , 0.25      , 1.        , 0.8       ,
       0.25      , 0.25      , 0.75      , 0.66666667, 0.33333333,
       1.        , 0.75      , 0.5       , 0.13333333, 0.66666667,
       0.5       , 0.25      , 0.5       , 0.66666667, 0.8       ,
       0.5       , 0.5       , 1.        , 0.6       , 0.46666667]),
         'test_log_loss': array([0.4501636 , 0.74173904, 0.40148716, 0.38649635, 0.37063354,
       0.41358458, 0.42187564, 0.26810161, 0.51450395, 0.41724002,
       0.25847314, 0.33864046, 0.42963611, 0.52560104, 0.36542347,
       0.50196869, 0.4057458 , 0.48531866, 0.46053198, 0.28040244,
       0.33414071, 0.49195655, 0.29893735, 0.35171632, 0.3645941 ,
       0.43988493, 0.49234794, 0.64331529, 0.12355405, 0.37244685,
       0.42473538, 0.48364637, 0.36430611, 0.24172644, 0.53859673,
       0.14814066, 0.31936088, 0.41993252, 0.89500578, 0.30640227,
       0.32898219, 0.71842774, 0.36665686, 0.46162914, 0.39576539,
       0.41973369, 0.6399792 , 0.12924455, 0.46101864, 0.56870222]),
         'test_markedness': array([0.8       , 0.26666667, 0.5       , 0.83333333, 0.46666667,
       0.66666667, 0.8       , 1.        , 0.71428571, 0.6       ,
       0.8       , 0.8       , 0.66666667, 0.46666667, 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.6       , 0.83333333,
       0.8       , 0.26666667, 0.8       , 0.75      , 0.46666667,
       0.8       , 0.26666667, 0.57142857, 1.        , 0.75      ,
       0.26666667, 0.26666667, 0.8       , 0.83333333, 0.71428571,
       1.        , 0.8       , 0.5       , 0.16666667, 0.83333333,
       0.5       , 0.26666667, 0.66666667, 0.83333333, 0.75      ,
       0.5       , 0.66666667, 1.        , 0.6       , 0.46666667]),
         'test_mcc': array([0.77459667, 0.25819889, 0.5       , 0.74535599, 0.46666667,
       0.57735027, 0.77459667, 1.        , 0.48795004, 0.6       ,
       0.77459667, 0.77459667, 0.57735027, 0.46666667, 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.6       , 0.74535599,
       0.77459667, 0.25819889, 0.77459667, 0.77459667, 0.46666667,
       0.77459667, 0.25819889, 0.37796447, 1.        , 0.77459667,
       0.25819889, 0.25819889, 0.77459667, 0.74535599, 0.48795004,
       1.        , 0.77459667, 0.5       , 0.1490712 , 0.74535599,
       0.5       , 0.25819889, 0.57735027, 0.74535599, 0.77459667,
       0.5       , 0.57735027, 1.        , 0.6       , 0.46666667]),
         'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.83333333, 0.8       ,
       0.66666667, 0.8       , 1.        , 0.71428571, 1.        ,
       1.        , 0.8       , 0.66666667, 0.8       , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 0.83333333,
       0.8       , 0.6       , 0.8       , 1.        , 0.8       ,
       0.8       , 0.6       , 0.57142857, 1.        , 1.        ,
       0.66666667, 0.66666667, 0.8       , 0.83333333, 0.71428571,
       1.        , 0.8       , 0.75      , 0.66666667, 0.83333333,
       0.75      , 0.6       , 0.66666667, 0.83333333, 1.        ,
       0.75      , 0.66666667, 1.        , 1.        , 0.8       ]),
         'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.66666667, 0.66666667,
       1.        , 1.        , 0.75      , 0.6       , 1.        ,
       1.        , 0.66666667, 1.        , 0.75      , 0.66666667,
       1.        , 0.66666667, 1.        , 1.        , 0.75      ,
       0.6       , 0.6       , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.75      , 0.5       , 1.        ,
       0.75      , 0.66666667, 1.        , 1.        , 0.75      ,
       0.75      , 1.        , 1.        , 0.6       , 0.66666667]),
         'test_precision_recall_auc': array([0.90833333, 0.8110119 , 0.94375   , 0.85      , 0.90277778,
       0.87083333, 0.90833333, 1.        , 0.65555556, 1.        ,
       1.        , 1.        , 0.9125    , 0.85      , 0.90277778,
       0.88392857, 0.90833333, 0.90833333, 1.        , 1.        ,
       0.94375   , 0.87083333, 1.        , 0.90277778, 0.85      ,
       0.90833333, 0.83541667, 0.90833333, 1.        , 1.        ,
       0.90833333, 0.90833333, 0.90833333, 1.        , 0.71111111,
       1.        , 0.90833333, 0.94375   , 0.6547619 , 1.        ,
       0.94375   , 0.83541667, 1.        , 0.81666667, 0.90277778,
       0.94375   , 0.79583333, 1.        , 0.90277778, 0.81666667]),
         'test_roc_auc': array([0.875     , 0.75      , 0.9375    , 0.86666667, 0.93333333,
       0.875     , 0.875     , 1.        , 0.73333333, 1.        ,
       1.        , 1.        , 0.90625   , 0.86666667, 0.93333333,
       0.8125    , 0.875     , 0.875     , 1.        , 1.        ,
       0.9375    , 0.875     , 1.        , 0.93333333, 0.86666667,
       0.875     , 0.8125    , 0.875     , 1.        , 1.        ,
       0.875     , 0.875     , 0.875     , 1.        , 0.8       ,
       1.        , 0.875     , 0.9375    , 0.66666667, 1.        ,
       0.9375    , 0.8125    , 1.        , 0.8       , 0.93333333,
       0.9375    , 0.75      , 1.        , 0.93333333, 0.8       ]),
         'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 0.66666667,
       0.5       , 0.75      , 1.        , 0.33333333, 1.        ,
       1.        , 0.75      , 0.5       , 0.66666667, 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.33333333,
       1.        , 0.75      , 0.75      , 0.33333333, 0.66666667,
       0.75      , 0.5       , 0.5       , 0.66666667, 1.        ,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.8 , 0.8 , 1.  , 1.  , 0.75, 0.6 , 1.  , 1.  , 0.75,
       1.  , 0.8 , 0.8 , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.5 , 0.5 , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 0.75, 0.75, 1.  , 1.  ,
       0.8 , 0.75, 1.  , 1.  , 0.6 , 0.8 ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01106637, 0.01087189, 0.00885596, 0.01348383, 0.01445208,
       0.01098133, 0.01353563, 0.01315521, 0.00930729, 0.00835712,
       0.01180361, 0.01206155, 0.00912708, 0.01222192, 0.00884688,
       0.01305695, 0.01283008, 0.01292846, 0.01068717, 0.01461229,
       0.01382396, 0.00809135, 0.01568438, 0.00813646, 0.01095617,
       0.01440523, 0.00912813, 0.00778021, 0.01440625, 0.01134583,
       0.011192  , 0.00819191, 0.01278442, 0.01262054, 0.01261042,
       0.01292187, 0.01380631, 0.01126229, 0.00480754, 0.01114838,
       0.01367937, 0.00912979, 0.01430521, 0.01039175, 0.01092813,
       0.01033167, 0.01274687, 0.01359763, 0.00925483, 0.01201738]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.07924957, 0.0824453 , 0.06700696, 0.0974161 , 0.10049249,
       0.07480397, 0.09374146, 0.0894884 , 0.06603368, 0.0701803 ,
       0.08322312, 0.08556499, 0.06544917, 0.09023215, 0.06733265,
       0.09438113, 0.09353277, 0.09322936, 0.08332383, 0.10333612,
       0.0880956 , 0.06670497, 0.10862342, 0.06368263, 0.07897597,
       0.0986444 , 0.07210275, 0.06123879, 0.09945778, 0.08465041,
       0.08381333, 0.0640062 , 0.09471297, 0.0867814 , 0.08178815,
       0.08641882, 0.10176697, 0.08716726, 0.04607793, 0.08081945,
       0.09683201, 0.06844626, 0.10186112, 0.07297361, 0.08696115,
       0.07281552, 0.08538267, 0.09604014, 0.06908641, 0.08936099]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([0, 0, 2, 4, 3, 2, 5, 1, 2, 2, 5, 3, 0, 0, 0, 2, 2, 4, 2, 5, 0, 0,
       3, 0, 2, 0, 5, 0, 0, 2, 0, 3, 0, 0, 2, 0, 3, 1, 1, 3, 2, 1, 0, 0,
       1, 1, 3, 0, 0, 2]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}],
                          'best_inner_scores': array([0.83260696, 0.92686503, 0.92934035, 0.8658129 , 0.88704262,
       0.9005469 , 0.87880174, 0.78462223, 0.8817767 , 0.87203052,
       0.84929527, 0.77895993, 0.89838464, 0.91292653, 0.90797755,
       0.84859933, 0.87764671, 0.82268232, 0.95498094, 0.81889643,
       0.86083456, 0.92809662, 0.84659401, 0.95709206, 0.8334297 ,
       0.8797649 , 0.88798514, 0.89807195, 0.82924557, 0.87120517,
       0.95533208, 0.82137676, 0.85605297, 0.86063046, 0.90689166,
       0.79346441, 0.83516514, 0.79798607, 0.97324107, 0.85174032,
       0.84460702, 0.86043267, 0.82198437, 0.89327461, 0.92964511,
       0.90566499, 0.83179641, 0.80896848, 0.93927356, 0.85452337]),
                          'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [100, 1000, 500]},
                          'max_ncv_average_precision': 0.9146090534979425,
                          'max_ncv_balanced_accuracy': 0.8434343434343434,
                          'max_ncv_brier_loss': 0.15541264999999999,
                          'max_ncv_f1': 0.823529411764706,
                          'max_ncv_informedness': 0.6868686868686869,
                          'max_ncv_log_loss': 0.46178218998698217,
                          'max_ncv_markedness': 0.7083333333333335,
                          'max_ncv_mcc': 0.6975184488828855,
                          'max_ncv_negative_predictive_value': 0.8333333333333334,
                          'max_ncv_precision': 0.875,
                          'max_ncv_precision_recall_auc': 0.913243906299462,
                          'max_ncv_roc_auc': 0.9116161616161617,
                          'max_ncv_sensitivity': 0.7777777777777778,
                          'max_ncv_specificity': 0.9090909090909091,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.2661874999999999,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 0.8555067811017509,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.01580416666666667,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.10309826689225264,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.8877991311547421,
                          'mean_ncv_balanced_accuracy': 0.7924242424242424,
                          'mean_ncv_brier_loss': 0.13903163749999997,
                          'mean_ncv_f1': 0.7629904082845259,
                          'mean_ncv_informedness': 0.5848484848484848,
                          'mean_ncv_log_loss': 0.41734751081226057,
                          'mean_ncv_markedness': 0.6084804461665075,
                          'mean_ncv_mcc': 0.5964900284622645,
                          'mean_ncv_negative_predictive_value': 0.790033900881727,
                          'mean_ncv_precision': 0.8184465452847807,
                          'mean_ncv_precision_recall_auc': 0.8857210731742253,
                          'mean_ncv_roc_auc': 0.8821969696969697,
                          'mean_ncv_sensitivity': 0.7166666666666666,
                          'mean_ncv_specificity': 0.8681818181818182,
                          'mean_test_average_precision': 0.9121269841269841,
                          'mean_test_balanced_accuracy': 0.7943333333333332,
                          'mean_test_brier_loss': 0.1390316375,
                          'mean_test_f1': 0.7495714285714284,
                          'mean_test_informedness': 0.5886666666666668,
                          'mean_test_log_loss': 0.4173475108122606,
                          'mean_test_markedness': 0.6563333333333334,
                          'mean_test_mcc': 0.619155302612278,
                          'mean_test_negative_predictive_value': 0.8093333333333332,
                          'mean_test_precision': 0.847,
                          'mean_test_precision_recall_auc': 0.9027718253968254,
                          'mean_test_roc_auc': 0.8985416666666667,
                          'mean_test_sensitivity': 0.7166666666666666,
                          'mean_test_specificity': 0.8719999999999999,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.011154291458333333,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.07963021451889485,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.8526425538630122,
                          'min_ncv_balanced_accuracy': 0.7424242424242424,
                          'min_ncv_brier_loss': 0.125862125,
                          'min_ncv_f1': 0.7058823529411765,
                          'min_ncv_informedness': 0.48484848484848486,
                          'min_ncv_log_loss': 0.38064637366059706,
                          'min_ncv_markedness': 0.5,
                          'min_ncv_mcc': 0.4923659639173309,
                          'min_ncv_negative_predictive_value': 0.75,
                          'min_ncv_precision': 0.75,
                          'min_ncv_precision_recall_auc': 0.8524482877807391,
                          'min_ncv_roc_auc': 0.845959595959596,
                          'min_ncv_sensitivity': 0.6666666666666666,
                          'min_ncv_specificity': 0.8181818181818182,
                          'min_test_average_precision': 0.6805555555555556,
                          'min_test_balanced_accuracy': 0.5666666666666667,
                          'min_test_brier_loss': 0.0181,
                          'min_test_f1': 0.4,
                          'min_test_informedness': 0.1333333333333333,
                          'min_test_log_loss': 0.11801401055035038,
                          'min_test_markedness': 0.16666666666666652,
                          'min_test_mcc': 0.14907119849998599,
                          'min_test_negative_predictive_value': 0.5714285714285714,
                          'min_test_precision': 0.5,
                          'min_test_precision_recall_auc': 0.6458333333333333,
                          'min_test_roc_auc': 0.6333333333333333,
                          'min_test_sensitivity': 0.25,
                          'min_test_specificity': 0.4,
                          'min_train_average_precision': 0.9999999999999998,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.005439208333333333,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.04927550412732803,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999998,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.85264255, 0.88486101, 0.8948011 , 0.88293587, 0.91460905,
       0.88231292, 0.88994495, 0.90295463, 0.88206267, 0.89086655]),
                          'ncv_balanced_accuracy': array([0.76515152, 0.81565657, 0.74242424, 0.77020202, 0.79292929,
       0.78787879, 0.78787879, 0.84343434, 0.82070707, 0.7979798 ]),
                          'ncv_brier_loss': array([0.15541265, 0.14156245, 0.1359914 , 0.14568568, 0.12586212,
       0.1373243 , 0.13358735, 0.1261286 , 0.1466908 , 0.14207102]),
                          'ncv_f1': array([0.72727273, 0.78787879, 0.70588235, 0.74285714, 0.76470588,
       0.75      , 0.75      , 0.82352941, 0.8       , 0.77777778]),
                          'ncv_informedness': array([0.53030303, 0.63131313, 0.48484848, 0.54040404, 0.58585859,
       0.57575758, 0.57575758, 0.68686869, 0.64141414, 0.5959596 ]),
                          'ncv_log_loss': array([0.46178219, 0.41453674, 0.40126288, 0.42611845, 0.38064637,
       0.40887815, 0.39717874, 0.41404392, 0.43525608, 0.43377159]),
                          'ncv_markedness': array([0.56      , 0.66666667, 0.5       , 0.54731458, 0.60416667,
       0.62637363, 0.62637363, 0.70833333, 0.64961637, 0.5959596 ]),
                          'ncv_mcc': array([0.54494926, 0.64874912, 0.49236596, 0.54384833, 0.59494221,
       0.60053256, 0.60053256, 0.69751845, 0.64550223, 0.5959596 ]),
                          'ncv_negative_predictive_value': array([0.76      , 0.8       , 0.75      , 0.7826087 , 0.79166667,
       0.76923077, 0.76923077, 0.83333333, 0.82608696, 0.81818182]),
                          'ncv_precision': array([0.8       , 0.86666667, 0.75      , 0.76470588, 0.8125    ,
       0.85714286, 0.85714286, 0.875     , 0.82352941, 0.77777778]),
                          'ncv_precision_recall_auc': array([0.85244829, 0.88108403, 0.89332669, 0.88025166, 0.91324391,
       0.87963239, 0.88854119, 0.90181882, 0.87909396, 0.88776979]),
                          'ncv_roc_auc': array([0.8459596 , 0.89141414, 0.90025253, 0.87121212, 0.91161616,
       0.87121212, 0.88257576, 0.88636364, 0.88005051, 0.88131313]),
                          'ncv_sensitivity': array([0.66666667, 0.72222222, 0.66666667, 0.72222222, 0.72222222,
       0.66666667, 0.66666667, 0.77777778, 0.77777778, 0.77777778]),
                          'ncv_specificity': array([0.86363636, 0.90909091, 0.81818182, 0.81818182, 0.86363636,
       0.90909091, 0.90909091, 0.90909091, 0.86363636, 0.81818182]),
                          'ranked_best_inner_params': [{'frequency': 19, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 7, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 2, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
                          'std_ncv_average_precision': 0.016134078792632255,
                          'std_ncv_balanced_accuracy': 0.029348026669394272,
                          'std_ncv_brier_loss': 0.009241465684952026,
                          'std_ncv_f1': 0.035206776370281724,
                          'std_ncv_informedness': 0.058696053338788544,
                          'std_ncv_log_loss': 0.022960955636064463,
                          'std_ncv_markedness': 0.06121341164642545,
                          'std_ncv_mcc': 0.059296553153066554,
                          'std_ncv_negative_predictive_value': 0.02885669697612286,
                          'std_ncv_precision': 0.04490321873996109,
                          'std_ncv_precision_recall_auc': 0.016076640155561407,
                          'std_ncv_roc_auc': 0.017807059505368417,
                          'std_ncv_sensitivity': 0.04864416865393964,
                          'std_ncv_specificity': 0.03979977435322329,
                          'std_test_average_precision': 0.07963355182388342,
                          'std_test_balanced_accuracy': 0.11193565936168283,
                          'std_test_brier_loss': 0.056470238660669886,
                          'std_test_f1': 0.15006697616726522,
                          'std_test_informedness': 0.22387131872336566,
                          'std_test_log_loss': 0.14750708046378913,
                          'std_test_markedness': 0.21905744791401824,
                          'std_test_mcc': 0.21713684532521,
                          'std_test_negative_predictive_value': 0.1332333722195658,
                          'std_test_precision': 0.1724404659171225,
                          'std_test_precision_recall_auc': 0.08725774192457086,
                          'std_test_roc_auc': 0.08721431537056032,
                          'std_test_sensitivity': 0.21028002062685353,
                          'std_test_specificity': 0.14920195873310754,
                          'std_train_average_precision': 7.930164461608261e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.002431745970885657,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.012841001465251013,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 7.930164461608261e-17,
                          'std_train_roc_auc': 3.172065784643304e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([0.89285714, 0.73333333, 0.95      , 0.86666667, 0.91666667,
       0.8875    , 0.91666667, 1.        , 0.7       , 1.        ,
       0.95      , 1.        , 0.8875    , 0.83333333, 0.91666667,
       1.        , 0.91666667, 0.91666667, 1.        , 1.        ,
       0.95      , 0.83035714, 1.        , 0.91666667, 0.86666667,
       0.95      , 0.85416667, 0.89285714, 1.        , 1.        ,
       0.91666667, 0.91666667, 0.91666667, 1.        , 0.75555556,
       1.        , 0.95      , 0.95      , 0.68055556, 0.91666667,
       0.95      , 0.85416667, 1.        , 0.83333333, 0.91666667,
       0.95      , 0.85416667, 1.        , 0.86666667, 0.83333333]),
                          'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.83333333, 0.73333333,
       0.75      , 0.875     , 1.        , 0.66666667, 0.8       ,
       0.875     , 0.75      , 0.75      , 0.63333333, 0.73333333,
       0.75      , 0.875     , 0.75      , 0.7       , 0.83333333,
       0.875     , 0.625     , 0.875     , 0.9       , 0.73333333,
       0.875     , 0.625     , 0.625     , 1.        , 0.9       ,
       0.75      , 0.75      , 0.875     , 0.83333333, 0.66666667,
       1.        , 0.875     , 0.875     , 0.56666667, 0.83333333,
       0.875     , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.75      , 0.75      , 1.        , 0.8       , 0.73333333]),
                          'test_brier_loss': array([0.13195   , 0.2661875 , 0.13679575, 0.1209175 , 0.1212125 ,
       0.1553635 , 0.14059325, 0.074861  , 0.1746095 , 0.162385  ,
       0.084582  , 0.1247    , 0.1515125 , 0.1975625 , 0.1216    ,
       0.17291375, 0.1308765 , 0.167356  , 0.18223763, 0.0750445 ,
       0.1048375 , 0.1882    , 0.08915   , 0.1195125 , 0.12761063,
       0.100725  , 0.18894237, 0.2328625 , 0.022425  , 0.14166662,
       0.169125  , 0.154175  , 0.1056125 , 0.0659625 , 0.17306175,
       0.0224875 , 0.087825  , 0.1564565 , 0.2624365 , 0.1014375 ,
       0.080309  , 0.265252  , 0.1161    , 0.146225  , 0.125568  ,
       0.129999  , 0.2123625 , 0.0181    , 0.1591375 , 0.19075612]),
                          'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.8       , 0.66666667,
       0.66666667, 0.85714286, 1.        , 0.5       , 0.75      ,
       0.88888889, 0.66666667, 0.66666667, 0.57142857, 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.66666667, 0.8       ,
       0.85714286, 0.57142857, 0.85714286, 0.85714286, 0.66666667,
       0.85714286, 0.57142857, 0.4       , 1.        , 0.85714286,
       0.75      , 0.75      , 0.85714286, 0.8       , 0.5       ,
       1.        , 0.85714286, 0.88888889, 0.4       , 0.8       ,
       0.88888889, 0.57142857, 1.        , 0.8       , 0.66666667,
       0.75      , 0.66666667, 1.        , 0.75      , 0.66666667]),
                          'test_informedness': array([0.75      , 0.25      , 0.5       , 0.66666667, 0.46666667,
       0.5       , 0.75      , 1.        , 0.33333333, 0.6       ,
       0.75      , 0.5       , 0.5       , 0.26666667, 0.46666667,
       0.5       , 0.75      , 0.5       , 0.4       , 0.66666667,
       0.75      , 0.25      , 0.75      , 0.8       , 0.46666667,
       0.75      , 0.25      , 0.25      , 1.        , 0.8       ,
       0.5       , 0.5       , 0.75      , 0.66666667, 0.33333333,
       1.        , 0.75      , 0.75      , 0.13333333, 0.66666667,
       0.75      , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.5       , 0.5       , 1.        , 0.6       , 0.46666667]),
                          'test_log_loss': array([0.41096548, 0.73644545, 0.38476445, 0.40320673, 0.37352883,
       0.43966481, 0.43216145, 0.26098902, 0.49322107, 0.44664734,
       0.28963189, 0.38335278, 0.42855273, 0.56761998, 0.33715702,
       0.48760992, 0.39637432, 0.48817768, 0.49486762, 0.26356273,
       0.34465705, 0.51880105, 0.31695886, 0.35820655, 0.36460835,
       0.31715723, 0.53613474, 0.65821604, 0.1236263 , 0.40925643,
       0.46892386, 0.44257434, 0.34623143, 0.23172752, 0.49643656,
       0.11801401, 0.28650493, 0.45495589, 0.85550678, 0.35523797,
       0.25522447, 0.72939454, 0.37218076, 0.4432686 , 0.37621202,
       0.39042425, 0.6494405 , 0.12291534, 0.45220798, 0.55386986]),
                          'test_markedness': array([0.8       , 0.26666667, 0.5       , 0.83333333, 0.46666667,
       0.66666667, 0.8       , 1.        , 0.71428571, 0.6       ,
       0.8       , 0.66666667, 0.66666667, 0.25      , 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.5       , 0.83333333,
       0.8       , 0.26666667, 0.8       , 0.75      , 0.46666667,
       0.8       , 0.26666667, 0.57142857, 1.        , 0.75      ,
       0.5       , 0.5       , 0.8       , 0.83333333, 0.71428571,
       1.        , 0.8       , 0.8       , 0.16666667, 0.83333333,
       0.8       , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.5       , 0.66666667, 1.        , 0.6       , 0.46666667]),
                          'test_mcc': array([0.77459667, 0.25819889, 0.5       , 0.74535599, 0.46666667,
       0.57735027, 0.77459667, 1.        , 0.48795004, 0.6       ,
       0.77459667, 0.57735027, 0.57735027, 0.25819889, 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.4472136 , 0.74535599,
       0.77459667, 0.25819889, 0.77459667, 0.77459667, 0.46666667,
       0.77459667, 0.25819889, 0.37796447, 1.        , 0.77459667,
       0.5       , 0.5       , 0.77459667, 0.74535599, 0.48795004,
       1.        , 0.77459667, 0.77459667, 0.1490712 , 0.74535599,
       0.77459667, 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.5       , 0.57735027, 1.        , 0.6       , 0.46666667]),
                          'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.83333333, 0.8       ,
       0.66666667, 0.8       , 1.        , 0.71428571, 1.        ,
       1.        , 0.66666667, 0.66666667, 0.75      , 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 0.83333333,
       0.8       , 0.6       , 0.8       , 1.        , 0.8       ,
       0.8       , 0.6       , 0.57142857, 1.        , 1.        ,
       0.75      , 0.75      , 0.8       , 0.83333333, 0.71428571,
       1.        , 0.8       , 1.        , 0.66666667, 0.83333333,
       1.        , 0.6       , 1.        , 0.83333333, 0.8       ,
       0.75      , 0.66666667, 1.        , 1.        , 0.8       ]),
                          'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.5       , 0.66666667,
       1.        , 1.        , 0.75      , 0.5       , 1.        ,
       1.        , 0.66666667, 1.        , 0.75      , 0.66666667,
       1.        , 0.66666667, 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 0.5       , 1.        ,
       0.8       , 0.66666667, 1.        , 1.        , 0.66666667,
       0.75      , 1.        , 1.        , 0.6       , 0.66666667]),
                          'test_precision_recall_auc': array([0.88392857, 0.75416667, 0.94375   , 0.85      , 0.90277778,
       0.87083333, 0.90833333, 1.        , 0.65555556, 1.        ,
       0.94375   , 1.        , 0.87083333, 0.81666667, 0.90277778,
       1.        , 0.90833333, 0.90833333, 1.        , 1.        ,
       0.94375   , 0.8422619 , 1.        , 0.90277778, 0.85      ,
       0.94375   , 0.83541667, 0.88392857, 1.        , 1.        ,
       0.90833333, 0.90833333, 0.90833333, 1.        , 0.71111111,
       1.        , 0.94375   , 0.94375   , 0.64583333, 0.90277778,
       0.94375   , 0.83541667, 1.        , 0.81666667, 0.90277778,
       0.94375   , 0.83541667, 1.        , 0.85      , 0.81666667]),
                          'test_roc_auc': array([0.8125    , 0.71875   , 0.9375    , 0.86666667, 0.93333333,
       0.875     , 0.875     , 1.        , 0.73333333, 1.        ,
       0.9375    , 1.        , 0.875     , 0.8       , 0.93333333,
       1.        , 0.875     , 0.875     , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 0.93333333, 0.86666667,
       0.9375    , 0.8125    , 0.8125    , 1.        , 1.        ,
       0.875     , 0.875     , 0.875     , 1.        , 0.8       ,
       1.        , 0.9375    , 0.9375    , 0.63333333, 0.93333333,
       0.9375    , 0.8125    , 1.        , 0.8       , 0.93333333,
       0.9375    , 0.8125    , 1.        , 0.86666667, 0.8       ]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 0.66666667,
       0.5       , 0.75      , 1.        , 0.33333333, 1.        ,
       1.        , 0.5       , 0.5       , 0.66666667, 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 0.66666667, 0.33333333,
       1.        , 0.75      , 1.        , 0.33333333, 0.66666667,
       1.        , 0.5       , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  , 0.75, 0.4 , 1.  , 1.  , 0.75,
       1.  , 0.8 , 0.8 , 1.  , 0.75, 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 0.75, 0.75, 1.  , 1.  ,
       0.8 , 0.75, 1.  , 1.  , 0.6 , 0.8 ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.0125625 , 0.00936563, 0.00887364, 0.01297317, 0.0144875 ,
       0.01083289, 0.01277892, 0.01255496, 0.00822343, 0.00863478,
       0.01400422, 0.01359063, 0.0086125 , 0.01007188, 0.00851771,
       0.01042603, 0.01045044, 0.01249137, 0.00735026, 0.01445615,
       0.0129125 , 0.00851042, 0.01531042, 0.00932708, 0.01077141,
       0.01348542, 0.01102581, 0.0091    , 0.01491458, 0.00915985,
       0.00849062, 0.01132813, 0.01191354, 0.01259479, 0.0105044 ,
       0.01271875, 0.01340313, 0.00894558, 0.00543921, 0.01580417,
       0.01180136, 0.00920729, 0.01386042, 0.01258229, 0.00802092,
       0.01046683, 0.01122083, 0.01557188, 0.00848438, 0.00958   ]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.08090269, 0.06626428, 0.06916372, 0.09433073, 0.09667028,
       0.07549811, 0.09112175, 0.08932788, 0.06604235, 0.07107324,
       0.09852898, 0.09444626, 0.06397333, 0.07056938, 0.06913368,
       0.07501177, 0.07657956, 0.0875313 , 0.06260174, 0.10189689,
       0.08435925, 0.06904129, 0.10187017, 0.06910528, 0.07679181,
       0.0846855 , 0.08259617, 0.06700926, 0.09389831, 0.07052272,
       0.06315999, 0.08297228, 0.08328927, 0.08314118, 0.07641487,
       0.08442158, 0.09962558, 0.07060901, 0.0492755 , 0.10309827,
       0.08260726, 0.06914118, 0.09456652, 0.07991872, 0.0626436 ,
       0.0725774 , 0.08806752, 0.09795067, 0.06414676, 0.0733359 ]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([2, 0, 2, 0, 3, 1, 5, 0, 2, 1, 0, 4, 2, 0, 0, 5, 5, 1, 2, 4, 0, 1,
       3, 0, 2, 1, 0, 2, 0, 2, 0, 3, 3, 0, 2, 2, 5, 0, 1, 2, 0, 5, 2, 0,
       1, 1, 3, 0, 0, 3]),
             'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}],
             'best_inner_scores': array([0.86111111, 0.94488536, 0.93342152, 0.87864924, 0.90239651,
       0.92526455, 0.88866843, 0.83641975, 0.91111111, 0.88583878,
       0.90365961, 0.8260582 , 0.92107584, 0.9248366 , 0.91111111,
       0.89087302, 0.91732804, 0.87257496, 0.95795207, 0.8416122 ,
       0.89550265, 0.92570547, 0.87676367, 0.96143791, 0.89956427,
       0.91909171, 0.91137566, 0.91137566, 0.85054466, 0.8745098 ,
       0.94951499, 0.88073192, 0.90652557, 0.83921569, 0.9204793 ,
       0.81216931, 0.87698413, 0.88800705, 0.97037037, 0.86928105,
       0.86265432, 0.86199295, 0.85471781, 0.89019608, 0.91328976,
       0.91666667, 0.84744268, 0.85868607, 0.94270153, 0.8583878 ]),
             'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [1000, 100, 500]},
             'max_ncv_average_precision': 0.931158769755261,
             'max_ncv_balanced_accuracy': 0.8156565656565656,
             'max_ncv_brier_loss': 0.15331,
             'max_ncv_f1': 0.7878787878787877,
             'max_ncv_informedness': 0.6313131313131313,
             'max_ncv_log_loss': 0.4544987178924343,
             'max_ncv_markedness': 0.6666666666666667,
             'max_ncv_mcc': 0.6487491201346025,
             'max_ncv_negative_predictive_value': 0.8,
             'max_ncv_precision': 0.8666666666666667,
             'max_ncv_precision_recall_auc': 0.9293832468032674,
             'max_ncv_roc_auc': 0.9343434343434344,
             'max_ncv_sensitivity': 0.7777777777777778,
             'max_ncv_specificity': 0.9090909090909091,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.27313212500000006,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 0.8784922113572259,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.015316666666666666,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.10136589993464394,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.8905147724260696,
             'mean_ncv_balanced_accuracy': 0.7750000000000001,
             'mean_ncv_brier_loss': 0.1393312,
             'mean_ncv_f1': 0.7435264113362584,
             'mean_ncv_informedness': 0.55,
             'mean_ncv_log_loss': 0.41840616023936006,
             'mean_ncv_markedness': 0.5737740707951705,
             'mean_ncv_mcc': 0.5616896415450494,
             'mean_ncv_negative_predictive_value': 0.776487117552335,
             'mean_ncv_precision': 0.7972869532428356,
             'mean_ncv_precision_recall_auc': 0.8880741485284954,
             'mean_ncv_roc_auc': 0.8868686868686868,
             'mean_ncv_sensitivity': 0.7,
             'mean_ncv_specificity': 0.85,
             'mean_test_average_precision': 0.9155992063492064,
             'mean_test_balanced_accuracy': 0.7786666666666666,
             'mean_test_brier_loss': 0.1393312,
             'mean_test_f1': 0.7334920634920634,
             'mean_test_informedness': 0.5573333333333333,
             'mean_test_log_loss': 0.41840616023936,
             'mean_test_markedness': 0.618,
             'mean_test_mcc': 0.5845001551079049,
             'mean_test_negative_predictive_value': 0.7909999999999999,
             'mean_test_precision': 0.8270000000000001,
             'mean_test_precision_recall_auc': 0.9009742063492062,
             'mean_test_roc_auc': 0.9011666666666666,
             'mean_test_sensitivity': 0.7033333333333333,
             'mean_test_specificity': 0.8540000000000001,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.010999754583333332,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.0797707264290042,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.8605152287608429,
             'min_ncv_balanced_accuracy': 0.7196969696969697,
             'min_ncv_brier_loss': 0.11448885,
             'min_ncv_f1': 0.6857142857142857,
             'min_ncv_informedness': 0.43939393939393945,
             'min_ncv_log_loss': 0.35201679981135137,
             'min_ncv_markedness': 0.44501278772378505,
             'min_ncv_mcc': 0.44219443899559935,
             'min_ncv_negative_predictive_value': 0.7391304347826086,
             'min_ncv_precision': 0.7,
             'min_ncv_precision_recall_auc': 0.8583579918772772,
             'min_ncv_roc_auc': 0.8611111111111112,
             'min_ncv_sensitivity': 0.6111111111111112,
             'min_ncv_specificity': 0.7272727272727273,
             'min_test_average_precision': 0.6111111111111112,
             'min_test_balanced_accuracy': 0.5333333333333333,
             'min_test_brier_loss': 0.0140375,
             'min_test_f1': 0.4,
             'min_test_informedness': 0.06666666666666665,
             'min_test_log_loss': 0.10179619984778092,
             'min_test_markedness': 0.06666666666666665,
             'min_test_mcc': 0.06666666666666667,
             'min_test_negative_predictive_value': 0.5714285714285714,
             'min_test_precision': 0.4,
             'min_test_precision_recall_auc': 0.37222222222222223,
             'min_test_roc_auc': 0.6,
             'min_test_sensitivity': 0.25,
             'min_test_specificity': 0.4,
             'min_train_average_precision': 0.9999999999999998,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.005731833333333333,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.05033080633027848,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999998,
             'min_train_roc_auc': 0.9999999999999999,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.86051523, 0.88557646, 0.88884872, 0.88218182, 0.93115877,
       0.89479324, 0.90288539, 0.90265781, 0.87731989, 0.87921041]),
             'ncv_balanced_accuracy': array([0.76515152, 0.76010101, 0.71969697, 0.79292929, 0.79292929,
       0.74242424, 0.81565657, 0.81565657, 0.79292929, 0.75252525]),
             'ncv_brier_loss': array([0.15269095, 0.141067  , 0.14420995, 0.14408993, 0.11448885,
       0.13726912, 0.12686148, 0.12930147, 0.15002325, 0.15331   ]),
             'ncv_f1': array([0.72727273, 0.70967742, 0.68571429, 0.76470588, 0.76470588,
       0.70588235, 0.78787879, 0.78787879, 0.76470588, 0.73684211]),
             'ncv_informedness': array([0.53030303, 0.52020202, 0.43939394, 0.58585859, 0.58585859,
       0.48484848, 0.63131313, 0.63131313, 0.58585859, 0.50505051]),
             'ncv_log_loss': array([0.45238224, 0.41455382, 0.42337426, 0.42479377, 0.3520168 ,
       0.40405426, 0.38653296, 0.42281344, 0.44904133, 0.45449872]),
             'ncv_markedness': array([0.56      , 0.58689459, 0.44501279, 0.60416667, 0.60416667,
       0.5       , 0.66666667, 0.66666667, 0.60416667, 0.5       ]),
             'ncv_mcc': array([0.54494926, 0.55254298, 0.44219444, 0.59494221, 0.59494221,
       0.49236596, 0.64874912, 0.64874912, 0.59494221, 0.50251891]),
             'ncv_negative_predictive_value': array([0.76      , 0.74074074, 0.73913043, 0.79166667, 0.79166667,
       0.75      , 0.8       , 0.8       , 0.79166667, 0.8       ]),
             'ncv_precision': array([0.8       , 0.84615385, 0.70588235, 0.8125    , 0.8125    ,
       0.75      , 0.86666667, 0.86666667, 0.8125    , 0.7       ]),
             'ncv_precision_recall_auc': array([0.85835799, 0.88177935, 0.88592708, 0.87949787, 0.92938325,
       0.89222353, 0.90401802, 0.90046215, 0.87348698, 0.87560527]),
             'ncv_roc_auc': array([0.86111111, 0.89393939, 0.89393939, 0.86868687, 0.93434343,
       0.89393939, 0.8989899 , 0.88383838, 0.87121212, 0.86868687]),
             'ncv_sensitivity': array([0.66666667, 0.61111111, 0.66666667, 0.72222222, 0.72222222,
       0.66666667, 0.72222222, 0.72222222, 0.72222222, 0.77777778]),
             'ncv_specificity': array([0.86363636, 0.90909091, 0.77272727, 0.86363636, 0.86363636,
       0.81818182, 0.90909091, 0.90909091, 0.86363636, 0.72727273]),
             'ranked_best_inner_params': [{'frequency': 17, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 2, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
             'std_ncv_average_precision': 0.019058950013178203,
             'std_ncv_balanced_accuracy': 0.03199649853588768,
             'std_ncv_brier_loss': 0.012539512224752691,
             'std_ncv_f1': 0.0357365515348663,
             'std_ncv_informedness': 0.06399299707177535,
             'std_ncv_log_loss': 0.03184115688311552,
             'std_ncv_markedness': 0.07291986958106136,
             'std_ncv_mcc': 0.06784447736100149,
             'std_ncv_negative_predictive_value': 0.025812444675359692,
             'std_ncv_precision': 0.060343775951262474,
             'std_ncv_precision_recall_auc': 0.019721460772259374,
             'std_ncv_roc_auc': 0.021420863777666655,
             'std_ncv_sensitivity': 0.04684855792842043,
             'std_ncv_specificity': 0.06079515953860265,
             'std_test_average_precision': 0.08947421783155188,
             'std_test_balanced_accuracy': 0.11602300577247912,
             'std_test_brier_loss': 0.058490104764789455,
             'std_test_f1': 0.1502601682779795,
             'std_test_informedness': 0.23204601154495824,
             'std_test_log_loss': 0.1535617602345012,
             'std_test_markedness': 0.2345045869791617,
             'std_test_mcc': 0.22873622272131972,
             'std_test_negative_predictive_value': 0.1320387747934715,
             'std_test_precision': 0.18104289716043792,
             'std_test_precision_recall_auc': 0.11691045037295007,
             'std_test_roc_auc': 0.09843244169597386,
             'std_test_sensitivity': 0.2042352029905461,
             'std_test_specificity': 0.15709090050161456,
             'std_train_average_precision': 8.68705992069731e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.0021272938145771737,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.012369577664591805,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 8.68705992069731e-17,
             'std_train_roc_auc': 2.242989226691107e-17,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([0.89285714, 0.83035714, 0.95      , 0.91666667, 0.91666667,
       0.8875    , 0.91666667, 1.        , 0.7       , 1.        ,
       0.95      , 1.        , 0.8875    , 0.83333333, 0.91666667,
       0.91666667, 0.91666667, 0.91666667, 1.        , 1.        ,
       0.95      , 0.8875    , 1.        , 0.91666667, 0.86666667,
       0.95      , 0.85416667, 1.        , 1.        , 1.        ,
       0.91666667, 0.89285714, 1.        , 1.        , 0.75555556,
       1.        , 0.91666667, 0.95      , 0.68055556, 1.        ,
       0.95      , 0.81666667, 1.        , 0.83333333, 0.91666667,
       0.95      , 0.81666667, 1.        , 1.        , 0.61111111]),
             'test_balanced_accuracy': array([0.875     , 0.625     , 0.75      , 0.83333333, 0.73333333,
       0.75      , 0.875     , 0.75      , 0.66666667, 0.8       ,
       0.875     , 0.75      , 0.75      , 0.53333333, 0.73333333,
       0.75      , 0.875     , 0.75      , 0.8       , 0.83333333,
       0.875     , 0.625     , 0.875     , 0.9       , 0.73333333,
       0.75      , 0.625     , 0.625     , 1.        , 0.8       ,
       0.75      , 0.75      , 0.875     , 1.        , 0.66666667,
       1.        , 0.875     , 0.75      , 0.56666667, 0.83333333,
       0.75      , 0.625     , 1.        , 0.83333333, 0.73333333,
       0.75      , 0.625     , 1.        , 0.8       , 0.63333333]),
             'test_brier_loss': array([0.14816663, 0.2434375 , 0.13692562, 0.099525  , 0.1354    ,
       0.154845  , 0.13533138, 0.085     , 0.17206213, 0.1580965 ,
       0.0763625 , 0.137552  , 0.15004775, 0.2291625 , 0.127925  ,
       0.17025987, 0.131145  , 0.1642895 , 0.18059325, 0.074162  ,
       0.0963875 , 0.169011  , 0.0648375 , 0.1151    , 0.12710825,
       0.127029  , 0.180725  , 0.2137125 , 0.0140375 , 0.15084163,
       0.1360375 , 0.180875  , 0.10385   , 0.036975  , 0.17656987,
       0.02364962, 0.099655  , 0.1661625 , 0.264852  , 0.09218825,
       0.1122    , 0.27313213, 0.08847663, 0.154025  , 0.1222825 ,
       0.1441    , 0.221725  , 0.01845   , 0.1654    , 0.216875  ]),
             'test_f1': array([0.85714286, 0.57142857, 0.75      , 0.8       , 0.66666667,
       0.66666667, 0.85714286, 0.66666667, 0.5       , 0.75      ,
       0.88888889, 0.66666667, 0.66666667, 0.5       , 0.66666667,
       0.66666667, 0.85714286, 0.75      , 0.75      , 0.8       ,
       0.85714286, 0.57142857, 0.85714286, 0.85714286, 0.66666667,
       0.75      , 0.57142857, 0.4       , 1.        , 0.75      ,
       0.75      , 0.75      , 0.85714286, 1.        , 0.5       ,
       1.        , 0.85714286, 0.75      , 0.4       , 0.8       ,
       0.75      , 0.57142857, 1.        , 0.8       , 0.66666667,
       0.75      , 0.57142857, 1.        , 0.75      , 0.57142857]),
             'test_informedness': array([0.75      , 0.25      , 0.5       , 0.66666667, 0.46666667,
       0.5       , 0.75      , 0.5       , 0.33333333, 0.6       ,
       0.75      , 0.5       , 0.5       , 0.06666667, 0.46666667,
       0.5       , 0.75      , 0.5       , 0.6       , 0.66666667,
       0.75      , 0.25      , 0.75      , 0.8       , 0.46666667,
       0.5       , 0.25      , 0.25      , 1.        , 0.6       ,
       0.5       , 0.5       , 0.75      , 1.        , 0.33333333,
       1.        , 0.75      , 0.5       , 0.13333333, 0.66666667,
       0.5       , 0.25      , 1.        , 0.66666667, 0.46666667,
       0.5       , 0.25      , 1.        , 0.6       , 0.26666667]),
             'test_log_loss': array([0.45594923, 0.68196294, 0.38322163, 0.32934184, 0.41143558,
       0.4403814 , 0.42039529, 0.29023688, 0.48597453, 0.43578101,
       0.25366427, 0.42396481, 0.42789753, 0.65884152, 0.35250315,
       0.49595295, 0.4000896 , 0.47416611, 0.49320351, 0.26055667,
       0.31508024, 0.47436167, 0.25527139, 0.35141449, 0.36395621,
       0.38948598, 0.49358436, 0.60166107, 0.1017962 , 0.4337437 ,
       0.39226238, 0.53004778, 0.35816805, 0.1517345 , 0.50045211,
       0.1265188 , 0.31468429, 0.47770313, 0.87849221, 0.31666875,
       0.33016309, 0.76898151, 0.30777596, 0.4658425 , 0.37244359,
       0.42093098, 0.64903152, 0.13292978, 0.46199136, 0.60760995]),
             'test_markedness': array([0.8       , 0.26666667, 0.5       , 0.83333333, 0.46666667,
       0.66666667, 0.8       , 0.66666667, 0.71428571, 0.6       ,
       0.8       , 0.66666667, 0.66666667, 0.06666667, 0.46666667,
       0.66666667, 0.8       , 0.5       , 0.6       , 0.83333333,
       0.8       , 0.26666667, 0.8       , 0.75      , 0.46666667,
       0.5       , 0.26666667, 0.57142857, 1.        , 0.6       ,
       0.5       , 0.5       , 0.8       , 1.        , 0.71428571,
       1.        , 0.8       , 0.5       , 0.16666667, 0.83333333,
       0.5       , 0.26666667, 1.        , 0.83333333, 0.46666667,
       0.5       , 0.26666667, 1.        , 0.6       , 0.25      ]),
             'test_mcc': array([0.77459667, 0.25819889, 0.5       , 0.74535599, 0.46666667,
       0.57735027, 0.77459667, 0.57735027, 0.48795004, 0.6       ,
       0.77459667, 0.57735027, 0.57735027, 0.06666667, 0.46666667,
       0.57735027, 0.77459667, 0.5       , 0.6       , 0.74535599,
       0.77459667, 0.25819889, 0.77459667, 0.77459667, 0.46666667,
       0.5       , 0.25819889, 0.37796447, 1.        , 0.6       ,
       0.5       , 0.5       , 0.77459667, 1.        , 0.48795004,
       1.        , 0.77459667, 0.5       , 0.1490712 , 0.74535599,
       0.5       , 0.25819889, 1.        , 0.74535599, 0.46666667,
       0.5       , 0.25819889, 1.        , 0.6       , 0.25819889]),
             'test_negative_predictive_value': array([0.8       , 0.6       , 0.75      , 0.83333333, 0.8       ,
       0.66666667, 0.8       , 0.66666667, 0.71428571, 1.        ,
       1.        , 0.66666667, 0.66666667, 0.66666667, 0.8       ,
       0.66666667, 0.8       , 0.75      , 1.        , 0.83333333,
       0.8       , 0.6       , 0.8       , 1.        , 0.8       ,
       0.75      , 0.6       , 0.57142857, 1.        , 1.        ,
       0.75      , 0.75      , 0.8       , 1.        , 0.71428571,
       1.        , 0.8       , 0.75      , 0.66666667, 0.83333333,
       0.75      , 0.6       , 1.        , 0.83333333, 0.8       ,
       0.75      , 0.6       , 1.        , 1.        , 0.75      ]),
             'test_precision': array([1.        , 0.66666667, 0.75      , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 1.        , 0.6       ,
       0.8       , 1.        , 1.        , 0.4       , 0.66666667,
       1.        , 1.        , 0.75      , 0.6       , 1.        ,
       1.        , 0.66666667, 1.        , 0.75      , 0.66666667,
       0.75      , 0.66666667, 1.        , 1.        , 0.6       ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.75      , 0.5       , 1.        ,
       0.75      , 0.66666667, 1.        , 1.        , 0.66666667,
       0.75      , 0.66666667, 1.        , 0.6       , 0.5       ]),
             'test_precision_recall_auc': array([0.88392857, 0.8110119 , 0.94375   , 0.90277778, 0.90277778,
       0.87083333, 0.90833333, 1.        , 0.65555556, 1.        ,
       0.94375   , 1.        , 0.87083333, 0.81666667, 0.90277778,
       0.90833333, 0.90833333, 0.90833333, 1.        , 1.        ,
       0.94375   , 0.87083333, 1.        , 0.90277778, 0.85      ,
       0.94375   , 0.83541667, 1.        , 1.        , 1.        ,
       0.90833333, 0.88392857, 1.        , 1.        , 0.71111111,
       1.        , 0.90833333, 0.94375   , 0.63789683, 1.        ,
       0.94375   , 0.79583333, 1.        , 0.81666667, 0.90277778,
       0.94375   , 0.79583333, 1.        , 1.        , 0.37222222]),
             'test_roc_auc': array([0.8125    , 0.75      , 0.9375    , 0.93333333, 0.93333333,
       0.875     , 0.875     , 1.        , 0.73333333, 1.        ,
       0.9375    , 1.        , 0.875     , 0.8       , 0.93333333,
       0.875     , 0.875     , 0.875     , 1.        , 1.        ,
       0.9375    , 0.875     , 1.        , 0.93333333, 0.86666667,
       0.9375    , 0.8125    , 1.        , 1.        , 1.        ,
       0.875     , 0.8125    , 1.        , 1.        , 0.8       ,
       1.        , 0.875     , 0.9375    , 0.6       , 1.        ,
       0.9375    , 0.75      , 1.        , 0.8       , 0.93333333,
       0.9375    , 0.75      , 1.        , 1.        , 0.66666667]),
             'test_sensitivity': array([0.75      , 0.5       , 0.75      , 0.66666667, 0.66666667,
       0.5       , 0.75      , 0.5       , 0.33333333, 1.        ,
       1.        , 0.5       , 0.5       , 0.66666667, 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.75      , 1.        , 0.66666667,
       0.75      , 0.5       , 0.25      , 1.        , 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.33333333,
       1.        , 0.75      , 0.75      , 0.33333333, 0.66666667,
       0.75      , 0.5       , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.5       , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 0.75, 0.75, 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 0.6 , 0.75,
       1.  , 1.  , 0.4 , 0.8 , 1.  , 1.  , 0.75, 0.6 , 1.  , 1.  , 0.75,
       1.  , 0.8 , 0.8 , 0.75, 0.75, 1.  , 1.  , 0.6 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 0.75, 0.75, 1.  , 1.  ,
       0.8 , 0.75, 0.75, 1.  , 0.6 , 0.6 ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01088101, 0.01008542, 0.00856988, 0.01128333, 0.01290729,
       0.01118058, 0.0126099 , 0.01445   , 0.00827711, 0.00888096,
       0.01188125, 0.01385221, 0.00788953, 0.01026042, 0.00882292,
       0.01285804, 0.01308141, 0.01036712, 0.00729506, 0.01406783,
       0.01267813, 0.00822325, 0.01531667, 0.00936875, 0.01036882,
       0.01207083, 0.00945833, 0.00848753, 0.01387083, 0.00891037,
       0.00876979, 0.01146979, 0.01259583, 0.01298229, 0.01036987,
       0.01275402, 0.01273051, 0.01082708, 0.00573183, 0.0126505 ,
       0.01092396, 0.01137337, 0.01233324, 0.0089625 , 0.00852946,
       0.01062263, 0.01181979, 0.01387708, 0.00962708, 0.01278229]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.07840435, 0.07075992, 0.06757215, 0.08118321, 0.09447942,
       0.07628913, 0.09044745, 0.09567592, 0.06653584, 0.07141597,
       0.0815493 , 0.09999351, 0.06510947, 0.07243779, 0.07087046,
       0.09521423, 0.09452448, 0.07582581, 0.06102515, 0.1013659 ,
       0.08256251, 0.06636629, 0.09964127, 0.0665009 , 0.07602973,
       0.08280847, 0.06587146, 0.06679074, 0.0950184 , 0.07004425,
       0.06622192, 0.08751771, 0.09445881, 0.08381319, 0.07535979,
       0.08892791, 0.09695101, 0.07620534, 0.05033081, 0.08608983,
       0.0793882 , 0.08613764, 0.08814078, 0.06725456, 0.06500873,
       0.07584051, 0.08354127, 0.09624768, 0.06668778, 0.09209942]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

C-1 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.917 ± 0.074653'],
 'mean_test_balanced_accuracy': ['0.789 ± 0.110429'],
 'mean_test_brier_loss': ['0.13861 ± 0.055228'],
 'mean_test_f1': ['0.745 ± 0.142806'],
 'mean_test_informedness': ['0.578 ± 0.220858'],
 'mean_test_log_loss': ['0.4196 ± 0.145338'],
 'mean_test_markedness': ['0.643 ± 0.218051'],
 'mean_test_mcc': ['0.607 ± 0.214732'],
 'mean_test_negative_predictive_value': ['0.797 ± 0.129895'],
 'mean_test_precision': ['0.846 ± 0.169284'],
 'mean_test_precision_recall_auc': ['0.907 ± 0.085024'],
 'mean_test_roc_auc': ['0.902 ± 0.083722'],
 'mean_test_sensitivity': ['0.708 ± 0.202206'],
 'mean_test_specificity': ['0.870 ± 0.151186'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01147 ± 0.002280'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0831 ± 0.013501'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.912 ± 0.079634'],
 'mean_test_balanced_accuracy': ['0.794 ± 0.111936'],
 'mean_test_brier_loss': ['0.13903 ± 0.056470'],
 'mean_test_f1': ['0.750 ± 0.150067'],
 'mean_test_informedness': ['0.589 ± 0.223871'],
 'mean_test_log_loss': ['0.4173 ± 0.147507'],
 'mean_test_markedness': ['0.656 ± 0.219057'],
 'mean_test_mcc': ['0.619 ± 0.217137'],
 'mean_test_negative_predictive_value': ['0.809 ± 0.133233'],
 'mean_test_precision': ['0.847 ± 0.172440'],
 'mean_test_precision_recall_auc': ['0.903 ± 0.087258'],
 'mean_test_roc_auc': ['0.899 ± 0.087214'],
 'mean_test_sensitivity': ['0.717 ± 0.210280'],
 'mean_test_specificity': ['0.872 ± 0.149202'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01115 ± 0.002432'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0796 ± 0.012841'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.916 ± 0.089474'],
 'mean_test_balanced_accuracy': ['0.779 ± 0.116023'],
 'mean_test_brier_loss': ['0.13933 ± 0.058490'],
 'mean_test_f1': ['0.733 ± 0.150260'],
 'mean_test_informedness': ['0.557 ± 0.232046'],
 'mean_test_log_loss': ['0.4184 ± 0.153562'],
 'mean_test_markedness': ['0.618 ± 0.234505'],
 'mean_test_mcc': ['0.585 ± 0.228736'],
 'mean_test_negative_predictive_value': ['0.791 ± 0.132039'],
 'mean_test_precision': ['0.827 ± 0.181043'],
 'mean_test_precision_recall_auc': ['0.901 ± 0.116910'],
 'mean_test_roc_auc': ['0.901 ± 0.098432'],
 'mean_test_sensitivity': ['0.703 ± 0.204235'],
 'mean_test_specificity': ['0.854 ± 0.157091'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01100 ± 0.002127'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0798 ± 0.012370'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C-1 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.890 ± 0.017007'],
 'mean_ncv_balanced_accuracy': ['0.787 ± 0.023120'],
 'mean_ncv_brier_loss': ['0.13861 ± 0.011309'],
 'mean_ncv_f1': ['0.756 ± 0.027753'],
 'mean_ncv_informedness': ['0.574 ± 0.046240'],
 'mean_ncv_log_loss': ['0.4196 ± 0.030898'],
 'mean_ncv_markedness': ['0.599 ± 0.050375'],
 'mean_ncv_mcc': ['0.586 ± 0.047799'],
 'mean_ncv_negative_predictive_value': ['0.783 ± 0.022053'],
 'mean_ncv_precision': ['0.816 ± 0.038284'],
 'mean_ncv_precision_recall_auc': ['0.887 ± 0.018161'],
 'mean_ncv_roc_auc': ['0.883 ± 0.020467'],
 'mean_ncv_sensitivity': ['0.706 ± 0.037497'],
 'mean_ncv_specificity': ['0.868 ± 0.033539']}

C-1 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.888 ± 0.016134'],
 'mean_ncv_balanced_accuracy': ['0.792 ± 0.029348'],
 'mean_ncv_brier_loss': ['0.13903 ± 0.009241'],
 'mean_ncv_f1': ['0.763 ± 0.035207'],
 'mean_ncv_informedness': ['0.585 ± 0.058696'],
 'mean_ncv_log_loss': ['0.4173 ± 0.022961'],
 'mean_ncv_markedness': ['0.608 ± 0.061213'],
 'mean_ncv_mcc': ['0.596 ± 0.059297'],
 'mean_ncv_negative_predictive_value': ['0.790 ± 0.028857'],
 'mean_ncv_precision': ['0.818 ± 0.044903'],
 'mean_ncv_precision_recall_auc': ['0.886 ± 0.016077'],
 'mean_ncv_roc_auc': ['0.882 ± 0.017807'],
 'mean_ncv_sensitivity': ['0.717 ± 0.048644'],
 'mean_ncv_specificity': ['0.868 ± 0.039800']}

C-1 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.891 ± 0.019059'],
 'mean_ncv_balanced_accuracy': ['0.775 ± 0.031996'],
 'mean_ncv_brier_loss': ['0.13933 ± 0.012540'],
 'mean_ncv_f1': ['0.744 ± 0.035737'],
 'mean_ncv_informedness': ['0.550 ± 0.063993'],
 'mean_ncv_log_loss': ['0.4184 ± 0.031841'],
 'mean_ncv_markedness': ['0.574 ± 0.072920'],
 'mean_ncv_mcc': ['0.562 ± 0.067844'],
 'mean_ncv_negative_predictive_value': ['0.776 ± 0.025812'],
 'mean_ncv_precision': ['0.797 ± 0.060344'],
 'mean_ncv_precision_recall_auc': ['0.888 ± 0.019721'],
 'mean_ncv_roc_auc': ['0.887 ± 0.021421'],
 'mean_ncv_sensitivity': ['0.700 ± 0.046849'],
 'mean_ncv_specificity': ['0.850 ± 0.060795']}

C-1 end: 16.09.2022_13-02-10
++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++
C28 start: 16.09.2022_13-02-10

estimator: <class 'sklearn.pipeline.Pipeline'>
parameter grid: {'randomforestclassifier__n_estimators': [100, 500, 1000], 'randomforestclassifier__max_features': ['sqrt', 0.1, 0.333]}

shape of binary response array: 120
number of positives: 54
number of positives divided by total number of samples: 0.45

----------------------------------------
Predefined CV folds:

CV folds for repetition 0:
train_fold: [0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1 0 0 0
 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4 3 1 1
 0 0 0 1 4 3 0 2 1 4 4 4 0 2 2 3 3 4 3 1 2 0 0 1 0 4 4 3 2 2 3 2 1 1 3 2 4
 3 1 1 0 0 0 1 4 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  0  2  1  4  4  4  0  2  2  3  3  4  3  1  2  0
  0  1  0  4  4  3  2  2  3  2  1  1  3  2  4  3  1  1  0  0  0  1  4  3]
TRAIN (len=96): [  1   2   3   4   5   7   8   9  10  11  12  13  14  17  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  41  42  43  44
  45  47  48  49  50  51  52  53  54  57  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  81  82  83  84  85  87  88  89
  90  91  92  93  94  97  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 80  86  95  96  98 114 115 116]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  18  19  20
  21  22  23  24  25  28  29  30  31  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  58  59  60  61  62  63  64
  65  68  69  70  71  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  98  99 100 101 102 103 104 105 108 109 110
 111 114 115 116 118 119] TEST (len=8): [ 82  93  97 106 107 112 113 117]
TRAIN (len=96): [  0   2   3   4   5   6   9  10  11  12  13  15  16  17  18  19  20  21
  24  26  27  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  49  50  51  52  53  55  56  57  58  59  60  61  64  66  67  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  89  90
  91  92  93  95  96  97  98  99 100 101 104 106 107 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  87  88  94 102 103 105 109]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8  11  13  14  15  16  17  18  19  20
  22  23  25  26  27  29  30  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  51  53  54  55  56  57  58  59  60  62  63  65  66
  67  69  70  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  91  93  94  95  96  97  98  99 100 102 103 105 106 107 109 110 112
 113 114 115 116 117 118] TEST (len=8): [ 89  90  92 101 104 108 111 119]
TRAIN (len=96): [  0   1   2   6   7   8   9  10  12  13  14  15  16  17  18  21  22  23
  24  25  26  27  28  29  31  32  33  34  35  36  37  39  40  41  42  46
  47  48  49  50  52  53  54  55  56  57  58  61  62  63  64  65  66  67
  68  69  71  72  73  74  75  76  77  79  80  81  82  86  87  88  89  90
  92  93  94  95  96  97  98 101 102 103 104 105 106 107 108 109 111 112
 113 114 115 116 117 119] TEST (len=8): [ 83  84  85  91  99 100 110 118]

CV folds for repetition 1:
train_fold: [1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4 2 2 1
 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3 2 2 4
 2 2 1 3 2 1 1 0 0 3 0 4 3 3 0 3 3 4 2 1 4 1 0 4 4 1 0 0 2 2 3 1 0 1 4 4 3
 2 2 4 2 2 1 3 2 1] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  0  0  3  0  4  3  3  0  3  3  4  2  1  4  1
  0  4  4  1  0  0  2  2  3  1  0  1  4  4  3  2  2  4  2  2  1  3  2  1]
TRAIN (len=96): [  0   3   5   6   7   9  10  11  12  13  14  15  17  18  19  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  43  45  46
  47  49  50  51  52  53  54  55  57  58  59  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  83  85  86  87  89  90  91
  92  93  94  95  97  98  99 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  82  84  88  96 100 101 106]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  10  11  12  14  16  17  18  20  21
  22  23  24  26  28  29  30  31  32  33  34  35  37  38  41  42  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  60  61  62  63  64  66
  68  69  70  71  72  73  74  75  77  78  81  82  83  84  85  86  87  88
  89  90  91  92  94  96  97  98 100 101 102 103 104 106 108 109 110 111
 112 113 114 115 117 118] TEST (len=8): [ 80  93  95  99 105 107 116 119]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  11  13  14  15  16  17  18
  19  20  21  24  25  26  27  28  29  30  33  36  37  39  40  41  42  43
  44  45  46  47  48  49  50  51  53  54  55  56  57  58  59  60  61  64
  65  66  67  68  69  70  73  76  77  79  80  81  82  83  84  85  86  87
  88  89  90  91  93  94  95  96  97  98  99 100 101 104 105 106 107 108
 109 110 113 116 117 119] TEST (len=8): [ 92 102 103 111 112 114 115 118]
TRAIN (len=96): [  0   1   2   4   5   8  11  12  13  14  15  16  17  18  19  20  21  22
  23  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  42  44
  45  48  51  52  53  54  55  56  57  58  59  60  61  62  63  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  84  85  88  91  92
  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 83  86  87  89  90 104 110 117]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  12  13  15  16  19  20  21  22
  23  24  25  26  27  30  31  32  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  52  53  55  56  59  60  61  62  63  64  65  66
  67  70  71  72  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  92  93  95  96  99 100 101 102 103 104 105 106 107 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 85  91  94  97  98 108 109 113]

CV folds for repetition 2:
train_fold: [2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1 1 4 1
 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1 1 0 1
 1 4 1 3 4 2 2 3 1 3 0 2 3 4 0 2 2 4 0 1 4 3 0 3 0 0 3 4 1 4 4 2 3 2 0 2 1
 1 0 1 1 4 1 3 4 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  2  3  1  3  0  2  3  4  0  2  2  4  0  1  4  3
  0  3  0  0  3  4  1  4  4  2  3  2  0  2  1  1  0  1  1  4  1  3  4  2]
TRAIN (len=96): [  0   1   2   3   5   6   7   9  10  11  13  14  15  17  20  21  22  23
  24  25  26  27  29  30  31  33  34  35  36  37  38  39  40  41  42  43
  45  46  47  49  50  51  53  54  55  57  60  61  62  63  64  65  66  67
  69  70  71  73  74  75  76  77  78  79  80  81  82  83  85  86  87  89
  90  91  93  94  95  97 100 101 102 103 104 105 106 107 109 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 84  88  92  96  98  99 108 112]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  15  16  17  18  19
  20  21  23  24  25  26  27  28  29  32  35  37  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  55  56  57  58  59  60  61  63  64
  65  66  67  68  69  72  75  77  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  95  96  97  98  99 100 101 103 104 105 106 107 108
 109 112 115 117 118 119] TEST (len=8): [ 82  93 102 110 111 113 114 116]
TRAIN (len=96): [  1   2   3   4   6   7   8  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  30  31  32  33  34  35  36  37  38  41  42  43  44
  46  47  48  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  70  71  72  73  74  75  76  77  78  81  82  83  84  86  87  88  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 80  85  89  90 105 107 109 119]
TRAIN (len=96): [  0   2   4   5   7   8   9  10  11  12  13  14  16  18  19  21  22  23
  24  25  27  28  29  30  31  32  33  34  35  36  38  39  40  42  44  45
  47  48  49  50  51  52  53  54  56  58  59  61  62  63  64  65  67  68
  69  70  71  72  73  74  75  76  78  79  80  82  84  85  87  88  89  90
  91  92  93  94  96  98  99 101 102 103 104 105 107 108 109 110 111 112
 113 114 115 116 118 119] TEST (len=8): [ 81  83  86  95  97 100 106 117]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  12  13  15  16  17  18  19  20
  22  25  26  27  28  29  30  31  32  33  34  36  37  39  40  41  42  43
  44  45  46  48  49  50  52  53  55  56  57  58  59  60  62  65  66  67
  68  69  70  71  72  73  74  76  77  79  80  81  82  83  84  85  86  88
  89  90  92  93  95  96  97  98  99 100 102 105 106 107 108 109 110 111
 112 113 114 116 117 119] TEST (len=8): [ 87  91  94 101 103 104 115 118]

CV folds for repetition 3:
train_fold: [2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4 0 4 3
 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0 4 0 4
 0 4 3 2 0 2 2 1 0 3 2 4 1 0 3 1 3 0 0 3 3 2 1 3 1 1 3 2 2 4 4 2 4 1 4 1 0
 4 0 4 0 4 3 2 0 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  2  1  0  3  2  4  1  0  3  1  3  0  0  3  3  2
  1  3  1  1  3  2  2  4  4  2  4  1  4  1  0  4  0  4  0  4  3  2  0  2]
TRAIN (len=96): [  0   1   3   4   5   6   8   9  10  13  14  15  16  17  18  19  20  21
  22  23  24  25  26  27  28  29  31  33  35  36  37  39  40  41  43  44
  45  46  48  49  50  53  54  55  56  57  58  59  60  61  62  63  64  65
  66  67  68  69  71  73  75  76  77  79  80  81  83  84  85  86  88  89
  90  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
 111 113 115 116 117 119] TEST (len=8): [ 82  87  91  92 110 112 114 118]
TRAIN (len=96): [  0   2   3   4   5   7   8  10  11  12  13  14  15  17  20  21  22  23
  24  25  26  28  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  47  48  50  51  52  53  54  55  57  60  61  62  63  64  65  66  68
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  87  88  90
  91  92  93  94  95  97 100 101 102 103 104 105 106 108 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  86  89  96  98  99 107 109]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20
  23  24  26  27  28  29  30  31  32  33  34  35  36  38  41  42  43  45
  46  47  48  49  50  51  52  53  54  56  57  58  59  60  63  64  66  67
  68  69  70  71  72  73  74  75  76  78  81  82  83  85  86  87  88  89
  90  91  92  93  94  96  97  98  99 100 103 104 106 107 108 109 110 111
 112 113 114 115 116 118] TEST (len=8): [ 80  84  95 101 102 105 117 119]
TRAIN (len=96): [  0   1   2   4   5   6   7   9  11  12  15  16  18  19  21  22  23  24
  25  26  27  28  29  30  31  32  33  34  35  37  38  39  40  41  42  44
  45  46  47  49  51  52  55  56  58  59  61  62  63  64  65  66  67  68
  69  70  71  72  73  74  75  77  78  79  80  81  82  84  85  86  87  89
  91  92  95  96  98  99 101 102 103 104 105 106 107 108 109 110 111 112
 113 114 115 117 118 119] TEST (len=8): [ 83  88  90  93  94  97 100 116]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  25  27  29  30  32  34  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
  65  67  69  70  72  74  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  98  99 100 101 102 105 107 109 110
 112 114 116 117 118 119] TEST (len=8): [ 85 103 104 106 108 111 113 115]

CV folds for repetition 4:
train_fold: [1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4 1 2 2
 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2 0 0 4
 1 2 2 0 1 3 1 2 0 1 4 1 4 4 2 1 3 4 4 0 3 0 3 1 4 3 2 0 3 2 3 3 2 1 0 4 2
 0 0 4 1 2 2 0 1 3] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  1  4  1  4  4  2  1  3  4  4  0  3  0
  3  1  4  3  2  0  3  2  3  3  2  1  0  4  2  0  0  4  1  2  2  0  1  3]
TRAIN (len=96): [  0   1   3   4   5   6   7   8   9  10  11  12  14  16  17  18  19  20
  22  23  24  25  26  27  29  30  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  49  50  51  52  54  56  57  58  59  60  62  63  64  65
  66  67  69  70  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  89  90  91  92  94  96  97  98  99 100 102 103 104 105 106 107 109 110
 113 114 115 116 118 119] TEST (len=8): [ 82  93  95 101 108 111 112 117]
TRAIN (len=96): [  1   2   4   6   7   8  10  11  12  13  14  15  16  18  19  20  21  22
  23  24  25  26  28  29  30  31  32  33  35  36  37  39  41  42  44  46
  47  48  50  51  52  53  54  55  56  58  59  60  61  62  63  64  65  66
  68  69  70  71  72  73  75  76  77  79  81  82  84  86  87  88  90  91
  92  93  94  95  96  98  99 100 101 102 103 104 105 106 108 109 110 111
 112 113 115 116 117 119] TEST (len=8): [ 80  83  85  89  97 107 114 118]
TRAIN (len=96): [  0   2   3   4   5   6   7   9  10  11  12  13  14  15  16  17  18  19
  21  22  24  25  27  28  29  31  32  33  34  37  38  39  40  42  43  44
  45  46  47  49  50  51  52  53  54  55  56  57  58  59  61  62  64  65
  67  68  69  71  72  73  74  77  78  79  80  82  83  84  85  86  87  89
  90  91  92  93  94  95  96  97  98  99 101 102 104 105 107 108 109 111
 112 113 114 117 118 119] TEST (len=8): [ 81  88 100 103 106 110 115 116]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  11  12  13  15  17  18  20  21
  23  26  27  28  29  30  31  32  33  34  35  36  37  38  40  41  42  43
  44  45  46  47  48  49  51  52  53  55  57  58  60  61  63  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  81  82  83  84  85  86  87
  88  89  91  92  93  95  97  98 100 101 103 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 90  94  96  99 102 104 105 119]
TRAIN (len=96): [  0   1   2   3   5   8   9  10  13  14  15  16  17  19  20  21  22  23
  24  25  26  27  28  30  31  32  34  35  36  37  38  39  40  41  42  43
  45  48  49  50  53  54  55  56  57  59  60  61  62  63  64  65  66  67
  68  70  71  72  74  75  76  77  78  79  80  81  82  83  85  88  89  90
  93  94  95  96  97  99 100 101 102 103 104 105 106 107 108 110 111 112
 114 115 116 117 118 119] TEST (len=8): [ 84  86  87  91  92  98 109 113]

CV folds for repetition 5:
train_fold: [1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3 1 3 3
 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3 1 4 3
 1 3 3 4 3 0 1 2 0 4 0 3 4 2 0 2 1 0 2 4 4 2 0 1 3 1 1 1 2 0 2 3 2 4 0 4 3
 1 4 3 1 3 3 4 3 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  0  4  0  3  4  2  0  2  1  0  2  4  4  2
  0  1  3  1  1  1  2  0  2  3  2  4  0  4  3  1  4  3  1  3  3  4  3  0]
TRAIN (len=96): [  0   1   3   5   6   7   9  10  12  13  14  15  17  18  19  20  21  22
  24  25  26  27  29  30  31  32  33  34  35  36  37  38  40  41  43  45
  46  47  49  50  52  53  54  55  57  58  59  60  61  62  64  65  66  67
  69  70  71  72  73  74  75  76  77  78  80  81  83  85  86  87  89  90
  92  93  94  95  97  98  99 100 101 102 104 105 106 107 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 82  84  88  91  96 103 108 119]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  15  16  18  22  23
  24  25  26  27  28  29  30  32  33  35  36  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  55  56  58  62  63  64  65  66  67
  68  69  70  72  73  75  76  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  95  96  98 102 103 104 105 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 80  90  97  99 100 101 111 114]
TRAIN (len=96): [  0   2   3   4   5   6   8  10  11  13  14  16  17  18  19  20  21  23
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  42  43  44
  45  46  48  50  51  53  54  56  57  58  59  60  61  63  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  82  83  84  85  86  88  90
  91  93  94  96  97  98  99 100 101 103 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 81  87  89  92  95 102 104 106]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  11  12  13  14  15  16  17  19
  20  21  22  23  24  26  27  28  29  31  32  34  37  39  40  41  42  43
  44  46  47  48  49  50  51  52  53  54  55  56  57  59  60  61  62  63
  64  66  67  68  69  71  72  74  77  79  80  81  82  83  84  86  87  88
  89  90  91  92  93  94  95  96  97  99 100 101 102 103 104 106 107 108
 109 111 112 114 117 119] TEST (len=8): [ 85  98 105 110 113 115 116 118]
TRAIN (len=96): [  0   1   2   4   5   7   8   9  10  11  12  15  16  17  18  19  20  21
  22  23  24  25  26  28  30  31  33  34  35  36  38  39  40  41  42  44
  45  47  48  49  50  51  52  55  56  57  58  59  60  61  62  63  64  65
  66  68  70  71  73  74  75  76  78  79  80  81  82  84  85  87  88  89
  90  91  92  95  96  97  98  99 100 101 102 103 104 105 106 108 110 111
 113 114 115 116 118 119] TEST (len=8): [ 83  86  93  94 107 109 112 117]

CV folds for repetition 6:
train_fold: [1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0 4 1 4
 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2 3 1 0
 4 1 4 0 2 2 1 2 4 4 1 3 2 0 2 2 1 3 3 1 0 2 4 0 1 3 3 4 0 1 0 3 4 4 0 3 2
 3 1 0 4 1 4 0 2 2] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1  2  4  4  1  3  2  0  2  2  1  3  3  1  0  2
  4  0  1  3  3  4  0  1  0  3  4  4  0  3  2  3  1  0  4  1  4  0  2  2]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  10  11  12  13  15  16  18  19  20
  21  23  25  26  27  29  30  31  32  34  35  36  38  39  40  41  42  43
  44  45  46  48  49  50  51  52  53  55  56  58  59  60  61  63  65  66
  67  69  70  71  72  74  75  76  78  79  80  81  82  83  84  85  86  88
  89  90  91  92  93  95  96  98  99 100 101 103 105 106 107 109 110 111
 112 114 115 116 118 119] TEST (len=8): [ 87  94  97 102 104 108 113 117]
TRAIN (len=96): [  1   2   3   5   6   7   8   9  11  12  14  15  16  17  19  20  21  22
  24  25  26  27  28  29  30  31  33  34  36  37  38  39  41  42  43  45
  46  47  48  49  51  52  54  55  56  57  59  60  61  62  64  65  66  67
  68  69  70  71  73  74  76  77  78  79  81  82  83  85  86  87  88  89
  91  92  94  95  96  97  99 100 101 102 104 105 106 107 108 109 110 111
 113 114 116 117 118 119] TEST (len=8): [ 80  84  90  93  98 103 112 115]
TRAIN (len=96): [  0   2   3   4   5   7  10  11  12  13  14  16  17  18  19  20  21  22
  23  24  25  26  27  28  29  31  32  33  34  35  36  37  40  42  43  44
  45  47  50  51  52  53  54  56  57  58  59  60  61  62  63  64  65  66
  67  68  69  71  72  73  74  75  76  77  80  82  83  84  85  87  90  91
  92  93  94  96  97  98  99 100 101 102 103 104 105 106 107 108 109 111
 112 113 114 115 116 117] TEST (len=8): [ 81  86  88  89  95 110 118 119]
TRAIN (len=96): [  0   1   2   3   4   6   7   8   9  10  13  14  15  16  17  18  21  22
  23  24  26  27  28  30  32  33  34  35  36  37  38  39  40  41  42  43
  44  46  47  48  49  50  53  54  55  56  57  58  61  62  63  64  66  67
  68  70  72  73  74  75  76  77  78  79  80  81  82  83  84  86  87  88
  89  90  93  94  95  96  97  98 101 102 103 104 106 107 108 110 112 113
 114 115 116 117 118 119] TEST (len=8): [ 85  91  92  99 100 105 109 111]
TRAIN (len=96): [  0   1   4   5   6   7   8   9  10  11  12  13  14  15  17  18  19  20
  22  23  24  25  28  29  30  31  32  33  35  37  38  39  40  41  44  45
  46  47  48  49  50  51  52  53  54  55  57  58  59  60  62  63  64  65
  68  69  70  71  72  73  75  77  78  79  80  81  84  85  86  87  88  89
  90  91  92  93  94  95  97  98  99 100 102 103 104 105 108 109 110 111
 112 113 115 117 118 119] TEST (len=8): [ 82  83  96 101 106 107 114 116]

CV folds for repetition 7:
train_fold: [3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1 0 1 3
 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2 0 3 1
 0 1 3 2 1 4 3 4 3 0 1 0 2 4 2 1 2 3 4 0 3 4 4 2 0 0 2 1 4 3 4 0 2 1 1 3 2
 0 3 1 0 1 3 2 1 4] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  3  4  3  0  1  0  2  4  2  1  2  3  4  0  3  4
  4  2  0  0  2  1  4  3  4  0  2  1  1  3  2  0  3  1  0  1  3  2  1  4]
TRAIN (len=96): [  0   1   2   4   6   7   8   9  10  11  12  14  15  16  17  20  21  22
  23  24  26  27  28  29  30  32  33  35  36  37  38  39  40  41  42  44
  46  47  48  49  50  51  52  54  55  56  57  60  61  62  63  64  66  67
  68  69  70  72  73  75  76  77  78  79  80  81  82  84  86  87  88  89
  90  91  92  94  95  96  97 100 101 102 103 104 106 107 108 109 110 112
 113 115 116 117 118 119] TEST (len=8): [ 83  85  93  98  99 105 111 114]
TRAIN (len=96): [  0   1   2   3   5   6   7   8  10  11  12  13  14  15  16  17  18  19
  20  22  23  24  25  26  29  30  31  32  34  36  37  39  40  41  42  43
  45  46  47  48  50  51  52  53  54  55  56  57  58  59  60  62  63  64
  65  66  69  70  71  72  74  76  77  79  80  81  82  83  85  86  87  88
  90  91  92  93  94  95  96  97  98  99 100 102 103 104 105 106 109 110
 111 112 114 116 117 119] TEST (len=8): [ 84  89 101 107 108 113 115 118]
TRAIN (len=96): [  0   1   2   3   4   5   7   9  11  12  13  14  15  16  18  19  21  22
  23  24  25  27  28  29  31  32  33  34  35  36  38  39  40  41  42  43
  44  45  47  49  51  52  53  54  55  56  58  59  61  62  63  64  65  67
  68  69  71  72  73  74  75  76  78  79  80  81  82  83  84  85  87  89
  91  92  93  94  95  96  98  99 101 102 103 104 105 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 86  88  90  97 100 106 110 117]
TRAIN (len=96): [  1   3   4   5   6   7   8   9  10  12  13  15  16  17  18  19  20  21
  22  24  25  26  27  28  30  31  33  34  35  37  38  39  41  43  44  45
  46  47  48  49  50  52  53  55  56  57  58  59  60  61  62  64  65  66
  67  68  70  71  73  74  75  77  78  79  81  83  84  85  86  87  88  89
  90  92  93  95  96  97  98  99 100 101 102 104 105 106 107 108 110 111
 113 114 115 117 118 119] TEST (len=8): [ 80  82  91  94 103 109 112 116]
TRAIN (len=96): [  0   2   3   4   5   6   8   9  10  11  13  14  17  18  19  20  21  23
  25  26  27  28  29  30  31  32  33  34  35  36  37  38  40  42  43  44
  45  46  48  49  50  51  53  54  57  58  59  60  61  63  65  66  67  68
  69  70  71  72  73  74  75  76  77  78  80  82  83  84  85  86  88  89
  90  91  93  94  97  98  99 100 101 103 105 106 107 108 109 110 111 112
 113 114 115 116 117 118] TEST (len=8): [ 81  87  92  95  96 102 104 119]

CV folds for repetition 8:
train_fold: [3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0 2 2 3
 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1 3 4 0
 2 2 3 1 2 0 3 2 1 4 0 4 2 4 2 1 3 0 4 1 4 3 2 1 0 3 0 3 4 1 1 0 0 2 3 4 1
 3 4 0 2 2 3 1 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  3  2  1  4  0  4  2  4  2  1  3  0  4  1  4  3
  2  1  0  3  0  3  4  1  1  0  0  2  3  4  1  3  4  0  2  2  3  1  2  0]
TRAIN (len=96): [  0   1   2   3   5   6   7   8   9  10  12  13  14  15  16  17  19  21
  22  23  24  27  28  29  30  31  32  34  35  36  37  38  40  41  42  43
  45  46  47  48  49  50  52  53  54  55  56  57  59  61  62  63  64  67
  68  69  70  71  72  74  75  76  77  78  80  81  82  83  85  86  87  88
  89  90  92  93  94  95  96  97  99 101 102 103 104 107 108 109 110 111
 112 114 115 116 117 118] TEST (len=8): [ 84  91  98 100 105 106 113 119]
TRAIN (len=96): [  0   1   3   4   5   6   7   8  10  11  12  14  15  16  18  19  20  21
  22  25  26  27  28  29  31  32  33  34  35  36  38  39  40  41  43  44
  45  46  47  48  50  51  52  54  55  56  58  59  60  61  62  65  66  67
  68  69  71  72  73  74  75  76  78  79  80  81  83  84  85  86  87  88
  90  91  92  94  95  96  98  99 100 101 102 105 106 107 108 109 111 112
 113 114 115 116 118 119] TEST (len=8): [ 82  89  93  97 103 104 110 117]
TRAIN (len=96): [  0   2   3   4   5   7   9  10  11  12  13  14  15  17  18  19  20  21
  22  23  24  25  26  28  29  30  31  32  33  36  37  39  40  42  43  44
  45  47  49  50  51  52  53  54  55  57  58  59  60  61  62  63  64  65
  66  68  69  70  71  72  73  76  77  79  80  82  83  84  85  87  89  90
  91  92  93  94  95  97  98  99 100 101 102 103 104 105 106 108 109 110
 111 112 113 116 117 119] TEST (len=8): [ 81  86  88  96 107 114 115 118]
TRAIN (len=96): [  1   2   3   4   5   6   7   8   9  11  12  13  14  16  17  18  20  22
  23  24  25  26  27  29  30  32  33  34  35  37  38  39  41  42  43  44
  45  46  47  48  49  51  52  53  54  56  57  58  60  62  63  64  65  66
  67  69  70  72  73  74  75  77  78  79  81  82  83  84  85  86  87  88
  89  91  92  93  94  96  97  98 100 102 103 104 105 106 107 109 110 112
 113 114 115 117 118 119] TEST (len=8): [ 80  90  95  99 101 108 111 116]
TRAIN (len=96): [  0   1   2   4   6   8   9  10  11  13  15  16  17  18  19  20  21  23
  24  25  26  27  28  30  31  33  34  35  36  37  38  39  40  41  42  44
  46  48  49  50  51  53  55  56  57  58  59  60  61  63  64  65  66  67
  68  70  71  73  74  75  76  77  78  79  80  81  82  84  86  88  89  90
  91  93  95  96  97  98  99 100 101 103 104 105 106 107 108 110 111 113
 114 115 116 117 118 119] TEST (len=8): [ 83  85  87  92  94 102 109 112]

CV folds for repetition 9:
train_fold: [4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0 4 4 4
 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1 2 0 0
 4 4 4 2 2 0 4 4 1 4 3 1 3 0 1 1 0 2 3 3 3 4 3 4 2 0 3 2 0 0 2 1 3 1 2 1 1
 2 0 0 4 4 4 2 2 0] test_fold: [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  4  4  1  4  3  1  3  0  1  1  0  2  3  3  3  4
  3  4  2  0  3  2  0  0  2  1  3  1  2  1  1  2  0  0  4  4  4  2  2  0]
TRAIN (len=96): [  0   1   2   3   4   5   6   8   9  11  12  13  14  15  16  17  18  20
  21  24  25  26  27  28  29  30  31  34  35  36  37  38  40  41  42  43
  44  45  46  48  49  51  52  53  54  55  56  57  58  60  61  64  65  66
  67  68  69  70  71  74  75  76  77  78  80  81  82  83  84  85  86  88
  89  91  92  93  94  95  96  97  98 100 101 104 105 106 107 108 109 110
 111 114 115 116 117 118] TEST (len=8): [ 87  90  99 102 103 112 113 119]
TRAIN (len=96): [  0   1   3   4   6   7  10  11  12  13  14  15  16  17  18  19  20  21
  22  23  24  26  28  31  32  33  34  35  36  37  38  39  40  41  43  44
  46  47  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  66
  68  71  72  73  74  75  76  77  78  79  80  81  83  84  86  87  90  91
  92  93  94  95  96  97  98  99 100 101 102 103 104 106 108 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 82  85  88  89 105 107 109 110]
TRAIN (len=96): [  0   1   2   3   4   5   6   7   8   9  10  12  13  14  15  16  17  19
  20  22  23  25  26  27  29  30  32  33  34  35  36  39  40  41  42  43
  44  45  46  47  48  49  50  52  53  54  55  56  57  59  60  62  63  65
  66  67  69  70  72  73  74  75  76  79  80  81  82  83  84  85  86  87
  88  89  90  92  93  94  95  96  97  99 100 102 103 105 106 107 109 110
 112 113 114 115 116 119] TEST (len=8): [ 91  98 101 104 108 111 117 118]
TRAIN (len=96): [  0   1   2   3   5   7   8   9  10  11  15  17  18  19  21  22  23  24
  25  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43
  45  47  48  49  50  51  55  57  58  59  61  62  63  64  65  67  68  69
  70  71  72  73  74  75  76  77  78  79  80  81  82  83  85  87  88  89
  90  91  95  97  98  99 101 102 103 104 105 107 108 109 110 111 112 113
 114 115 116 117 118 119] TEST (len=8): [ 84  86  92  93  94  96 100 106]
TRAIN (len=96): [  2   4   5   6   7   8   9  10  11  12  13  14  16  18  19  20  21  22
  23  24  25  26  27  28  29  30  31  32  33  37  38  39  42  44  45  46
  47  48  49  50  51  52  53  54  56  58  59  60  61  62  63  64  65  66
  67  68  69  70  71  72  73  77  78  79  82  84  85  86  87  88  89  90
  91  92  93  94  96  98  99 100 101 102 103 104 105 106 107 108 109 110
 111 112 113 117 118 119] TEST (len=8): [ 80  81  83  95  97 114 115 116]

----------------------------------------

Repetition 0, outer split 0:
Beginning of grid search at 16.09.2022_13-02-10.
End of grid search at 16.09.2022_13-02-27.

Repetition 0, outer split 1:
Beginning of grid search at 16.09.2022_13-02-27.
End of grid search at 16.09.2022_13-02-45.

Repetition 0, outer split 2:
Beginning of grid search at 16.09.2022_13-02-45.
End of grid search at 16.09.2022_13-03-02.

Repetition 0, outer split 3:
Beginning of grid search at 16.09.2022_13-03-02.
End of grid search at 16.09.2022_13-03-20.

Repetition 0, outer split 4:
Beginning of grid search at 16.09.2022_13-03-20.
End of grid search at 16.09.2022_13-03-37.

Repetition 1, outer split 0:
Beginning of grid search at 16.09.2022_13-03-48.
End of grid search at 16.09.2022_13-04-01.

Repetition 1, outer split 1:
Beginning of grid search at 16.09.2022_13-04-01.
End of grid search at 16.09.2022_13-04-13.

Repetition 1, outer split 2:
Beginning of grid search at 16.09.2022_13-04-13.
End of grid search at 16.09.2022_13-04-26.

Repetition 1, outer split 3:
Beginning of grid search at 16.09.2022_13-04-26.
End of grid search at 16.09.2022_13-04-39.

Repetition 1, outer split 4:
Beginning of grid search at 16.09.2022_13-04-39.
End of grid search at 16.09.2022_13-04-51.

Repetition 2, outer split 0:
Beginning of grid search at 16.09.2022_13-05-05.
End of grid search at 16.09.2022_13-05-22.

Repetition 2, outer split 1:
Beginning of grid search at 16.09.2022_13-05-22.
End of grid search at 16.09.2022_13-05-39.

Repetition 2, outer split 2:
Beginning of grid search at 16.09.2022_13-05-39.
End of grid search at 16.09.2022_13-05-57.

Repetition 2, outer split 3:
Beginning of grid search at 16.09.2022_13-05-57.
End of grid search at 16.09.2022_13-06-14.

Repetition 2, outer split 4:
Beginning of grid search at 16.09.2022_13-06-14.
End of grid search at 16.09.2022_13-06-31.

Repetition 3, outer split 0:
Beginning of grid search at 16.09.2022_13-06-43.
End of grid search at 16.09.2022_13-07-01.

Repetition 3, outer split 1:
Beginning of grid search at 16.09.2022_13-07-01.
End of grid search at 16.09.2022_13-07-18.

Repetition 3, outer split 2:
Beginning of grid search at 16.09.2022_13-07-18.
End of grid search at 16.09.2022_13-07-35.

Repetition 3, outer split 3:
Beginning of grid search at 16.09.2022_13-07-35.
End of grid search at 16.09.2022_13-07-53.

Repetition 3, outer split 4:
Beginning of grid search at 16.09.2022_13-07-53.
End of grid search at 16.09.2022_13-08-10.

Repetition 4, outer split 0:
Beginning of grid search at 16.09.2022_13-08-22.
End of grid search at 16.09.2022_13-08-34.

Repetition 4, outer split 1:
Beginning of grid search at 16.09.2022_13-08-34.
End of grid search at 16.09.2022_13-08-47.

Repetition 4, outer split 2:
Beginning of grid search at 16.09.2022_13-08-47.
End of grid search at 16.09.2022_13-08-59.

Repetition 4, outer split 3:
Beginning of grid search at 16.09.2022_13-08-59.
End of grid search at 16.09.2022_13-09-12.

Repetition 4, outer split 4:
Beginning of grid search at 16.09.2022_13-09-12.
End of grid search at 16.09.2022_13-09-24.

Repetition 5, outer split 0:
Beginning of grid search at 16.09.2022_13-09-38.
End of grid search at 16.09.2022_13-09-51.

Repetition 5, outer split 1:
Beginning of grid search at 16.09.2022_13-09-51.
End of grid search at 16.09.2022_13-10-03.

Repetition 5, outer split 2:
Beginning of grid search at 16.09.2022_13-10-03.
End of grid search at 16.09.2022_13-10-16.

Repetition 5, outer split 3:
Beginning of grid search at 16.09.2022_13-10-16.
End of grid search at 16.09.2022_13-10-28.

Repetition 5, outer split 4:
Beginning of grid search at 16.09.2022_13-10-28.
End of grid search at 16.09.2022_13-10-41.

Repetition 6, outer split 0:
Beginning of grid search at 16.09.2022_13-10-54.
End of grid search at 16.09.2022_13-11-06.

Repetition 6, outer split 1:
Beginning of grid search at 16.09.2022_13-11-06.
End of grid search at 16.09.2022_13-11-19.

Repetition 6, outer split 2:
Beginning of grid search at 16.09.2022_13-11-19.
End of grid search at 16.09.2022_13-11-31.

Repetition 6, outer split 3:
Beginning of grid search at 16.09.2022_13-11-31.
End of grid search at 16.09.2022_13-11-44.

Repetition 6, outer split 4:
Beginning of grid search at 16.09.2022_13-11-44.
End of grid search at 16.09.2022_13-11-56.

Repetition 7, outer split 0:
Beginning of grid search at 16.09.2022_13-12-10.
End of grid search at 16.09.2022_13-12-22.

Repetition 7, outer split 1:
Beginning of grid search at 16.09.2022_13-12-22.
End of grid search at 16.09.2022_13-12-35.

Repetition 7, outer split 2:
Beginning of grid search at 16.09.2022_13-12-35.
End of grid search at 16.09.2022_13-12-47.

Repetition 7, outer split 3:
Beginning of grid search at 16.09.2022_13-12-47.
End of grid search at 16.09.2022_13-13-00.

Repetition 7, outer split 4:
Beginning of grid search at 16.09.2022_13-13-00.
End of grid search at 16.09.2022_13-13-12.

Repetition 8, outer split 0:
Beginning of grid search at 16.09.2022_13-13-25.
End of grid search at 16.09.2022_13-13-37.

Repetition 8, outer split 1:
Beginning of grid search at 16.09.2022_13-13-37.
End of grid search at 16.09.2022_13-13-50.

Repetition 8, outer split 2:
Beginning of grid search at 16.09.2022_13-13-50.
End of grid search at 16.09.2022_13-14-02.

Repetition 8, outer split 3:
Beginning of grid search at 16.09.2022_13-14-02.
End of grid search at 16.09.2022_13-14-15.

Repetition 8, outer split 4:
Beginning of grid search at 16.09.2022_13-14-15.
End of grid search at 16.09.2022_13-14-27.

Repetition 9, outer split 0:
Beginning of grid search at 16.09.2022_13-14-39.
End of grid search at 16.09.2022_13-14-52.

Repetition 9, outer split 1:
Beginning of grid search at 16.09.2022_13-14-52.
End of grid search at 16.09.2022_13-15-04.

Repetition 9, outer split 2:
Beginning of grid search at 16.09.2022_13-15-04.
End of grid search at 16.09.2022_13-15-17.

Repetition 9, outer split 3:
Beginning of grid search at 16.09.2022_13-15-17.
End of grid search at 16.09.2022_13-15-29.

Repetition 9, outer split 4:
Beginning of grid search at 16.09.2022_13-15-29.
End of grid search at 16.09.2022_13-15-41.

C28 results:
{'mcc': {'best_inner_indices': array([0, 0, 0, 5, 0, 0, 0, 0, 0, 1, 0, 4, 0, 0, 1, 5, 4, 3, 1, 3, 2, 0,
       1, 3, 0, 3, 2, 1, 2, 0, 0, 2, 5, 3, 0, 4, 1, 0, 1, 0, 0, 2, 1, 1,
       3, 0, 5, 1, 0, 1]),
         'best_inner_params': [{'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                               {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}],
         'best_inner_scores': array([0.55351172, 0.72536256, 0.74819006, 0.60559177, 0.62557745,
       0.72801788, 0.6407648 , 0.48795004, 0.70704412, 0.62309083,
       0.61723674, 0.55313398, 0.74605136, 0.64432423, 0.72861849,
       0.66144338, 0.68439134, 0.6407648 , 0.81218764, 0.64827666,
       0.61758068, 0.81527096, 0.51362161, 0.73037345, 0.64412032,
       0.74605136, 0.66144338, 0.80965988, 0.53986928, 0.62557745,
       0.85479529, 0.70311315, 0.57469671, 0.56591646, 0.6659598 ,
       0.4884436 , 0.59592984, 0.62015873, 0.8126375 , 0.64569247,
       0.57625369, 0.66144338, 0.53239714, 0.68601433, 0.73364642,
       0.66406377, 0.62015873, 0.46697022, 0.66807953, 0.60335198]),
         'best_params': {'randomforestclassifier__max_features': ['sqrt', 0.1], 'randomforestclassifier__n_estimators': [100, 1000, 500]},
         'max_ncv_average_precision': 0.9837301587301588,
         'max_ncv_balanced_accuracy': 0.9166666666666667,
         'max_ncv_brier_loss': 0.11313257499999999,
         'max_ncv_f1': 0.9090909090909091,
         'max_ncv_informedness': 0.8333333333333335,
         'max_ncv_log_loss': 0.3444815090948829,
         'max_ncv_markedness': 0.8799999999999999,
         'max_ncv_mcc': 0.8563488385776753,
         'max_ncv_negative_predictive_value': 0.88,
         'max_ncv_precision': 1.0,
         'max_ncv_precision_recall_auc': 0.9833124477861321,
         'max_ncv_roc_auc': 0.9848484848484849,
         'max_ncv_sensitivity': 0.8333333333333334,
         'max_ncv_specificity': 1.0,
         'max_test_average_precision': 1.0,
         'max_test_balanced_accuracy': 1.0,
         'max_test_brier_loss': 0.26767699999999994,
         'max_test_f1': 1.0,
         'max_test_informedness': 1.0,
         'max_test_log_loss': 0.823053093654285,
         'max_test_markedness': 1.0,
         'max_test_mcc': 1.0,
         'max_test_negative_predictive_value': 1.0,
         'max_test_precision': 1.0,
         'max_test_precision_recall_auc': 1.0,
         'max_test_roc_auc': 1.0,
         'max_test_sensitivity': 1.0,
         'max_test_specificity': 1.0,
         'max_train_average_precision': 1.0000000000000002,
         'max_train_balanced_accuracy': 1.0,
         'max_train_brier_loss': 0.015585166666666666,
         'max_train_f1': 1.0,
         'max_train_informedness': 1.0,
         'max_train_log_loss': 0.10713637308330026,
         'max_train_markedness': 1.0,
         'max_train_mcc': 1.0,
         'max_train_negative_predictive_value': 1.0,
         'max_train_precision': 1.0,
         'max_train_precision_recall_auc': 1.0000000000000002,
         'max_train_roc_auc': 1.0,
         'max_train_sensitivity': 1.0,
         'max_train_specificity': 1.0,
         'mean_ncv_average_precision': 0.9506195743875054,
         'mean_ncv_balanced_accuracy': 0.8532828282828284,
         'mean_ncv_brier_loss': 0.0950860375,
         'mean_ncv_f1': 0.8311083318958081,
         'mean_ncv_informedness': 0.7065656565656566,
         'mean_ncv_log_loss': 0.3064944735281832,
         'mean_ncv_markedness': 0.7508554097224175,
         'mean_ncv_mcc': 0.728226104855844,
         'mean_ncv_negative_predictive_value': 0.8308651059085841,
         'mean_ncv_precision': 0.9199903038138333,
         'mean_ncv_precision_recall_auc': 0.9492382374594104,
         'mean_ncv_roc_auc': 0.9539141414141415,
         'mean_ncv_sensitivity': 0.7611111111111111,
         'mean_ncv_specificity': 0.9454545454545455,
         'mean_test_average_precision': 0.9640515873015871,
         'mean_test_balanced_accuracy': 0.8544999999999999,
         'mean_test_brier_loss': 0.09508603749999998,
         'mean_test_f1': 0.8134285714285714,
         'mean_test_informedness': 0.709,
         'mean_test_log_loss': 0.3064944735281832,
         'mean_test_markedness': 0.7826190476190478,
         'mean_test_mcc': 0.7416916625130321,
         'mean_test_negative_predictive_value': 0.8472857142857143,
         'mean_test_precision': 0.9353333333333333,
         'mean_test_precision_recall_auc': 0.9583869047619048,
         'mean_test_roc_auc': 0.9650833333333334,
         'mean_test_sensitivity': 0.7599999999999999,
         'mean_test_specificity': 0.949,
         'mean_train_average_precision': 1.0,
         'mean_train_balanced_accuracy': 1.0,
         'mean_train_brier_loss': 0.011056891458333334,
         'mean_train_f1': 1.0,
         'mean_train_informedness': 1.0,
         'mean_train_log_loss': 0.07963767928162793,
         'mean_train_markedness': 1.0,
         'mean_train_mcc': 1.0,
         'mean_train_negative_predictive_value': 1.0,
         'mean_train_precision': 1.0,
         'mean_train_precision_recall_auc': 1.0,
         'mean_train_roc_auc': 1.0,
         'mean_train_sensitivity': 1.0,
         'mean_train_specificity': 1.0,
         'min_ncv_average_precision': 0.9228559614524529,
         'min_ncv_balanced_accuracy': 0.7878787878787878,
         'min_ncv_brier_loss': 0.08253825,
         'min_ncv_f1': 0.75,
         'min_ncv_informedness': 0.5757575757575757,
         'min_ncv_log_loss': 0.28021159115840477,
         'min_ncv_markedness': 0.6263736263736264,
         'min_ncv_mcc': 0.6005325641789633,
         'min_ncv_negative_predictive_value': 0.7692307692307693,
         'min_ncv_precision': 0.8235294117647058,
         'min_ncv_precision_recall_auc': 0.9209046726375589,
         'min_ncv_roc_auc': 0.914141414141414,
         'min_ncv_sensitivity': 0.6666666666666666,
         'min_ncv_specificity': 0.8636363636363636,
         'min_test_average_precision': 0.7,
         'min_test_balanced_accuracy': 0.5666666666666667,
         'min_test_brier_loss': 0.015132500000000004,
         'min_test_f1': 0.4,
         'min_test_informedness': 0.1333333333333333,
         'min_test_log_loss': 0.1102702092080462,
         'min_test_markedness': 0.16666666666666652,
         'min_test_mcc': 0.14907119849998599,
         'min_test_negative_predictive_value': 0.5714285714285714,
         'min_test_precision': 0.5,
         'min_test_precision_recall_auc': 0.6555555555555556,
         'min_test_roc_auc': 0.7333333333333333,
         'min_test_sensitivity': 0.25,
         'min_test_specificity': 0.6,
         'min_train_average_precision': 0.9999999999999998,
         'min_train_balanced_accuracy': 1.0,
         'min_train_brier_loss': 0.005397958333333332,
         'min_train_f1': 1.0,
         'min_train_informedness': 1.0,
         'min_train_log_loss': 0.04925458339819103,
         'min_train_markedness': 1.0,
         'min_train_mcc': 1.0,
         'min_train_negative_predictive_value': 1.0,
         'min_train_precision': 1.0,
         'min_train_precision_recall_auc': 0.9999999999999998,
         'min_train_roc_auc': 0.9999999999999999,
         'min_train_sensitivity': 1.0,
         'min_train_specificity': 1.0,
         'ncv_average_precision': array([0.94860519, 0.96025994, 0.95706169, 0.94976229, 0.96424864,
       0.93778556, 0.92285596, 0.93383428, 0.98373016, 0.94805203]),
         'ncv_balanced_accuracy': array([0.81060606, 0.81060606, 0.89393939, 0.82070707, 0.89393939,
       0.81060606, 0.78787879, 0.89393939, 0.91666667, 0.89393939]),
         'ncv_brier_loss': array([0.10645722, 0.0904177 , 0.0871012 , 0.09341402, 0.08477395,
       0.10226193, 0.11313257, 0.0987548 , 0.08253825, 0.09200872]),
         'ncv_f1': array([0.77419355, 0.77419355, 0.88235294, 0.8       , 0.88235294,
       0.77419355, 0.75      , 0.88235294, 0.90909091, 0.88235294]),
         'ncv_informedness': array([0.62121212, 0.62121212, 0.78787879, 0.64141414, 0.78787879,
       0.62121212, 0.57575758, 0.78787879, 0.83333333, 0.78787879]),
         'ncv_log_loss': array([0.33386709, 0.28360382, 0.28397128, 0.30055829, 0.28021159,
       0.31771344, 0.34448151, 0.33546809, 0.28301969, 0.30204994]),
         'ncv_markedness': array([0.7008547 , 0.7008547 , 0.8125    , 0.64961637, 0.8125    ,
       0.7008547 , 0.62637363, 0.8125    , 0.88      , 0.8125    ]),
         'ncv_mcc': array([0.65983288, 0.65983288, 0.80009469, 0.64550223, 0.80009469,
       0.65983288, 0.60053256, 0.80009469, 0.85634884, 0.80009469]),
         'ncv_negative_predictive_value': array([0.77777778, 0.77777778, 0.875     , 0.82608696, 0.875     ,
       0.77777778, 0.76923077, 0.875     , 0.88      , 0.875     ]),
         'ncv_precision': array([0.92307692, 0.92307692, 0.9375    , 0.82352941, 0.9375    ,
       0.92307692, 0.85714286, 0.9375    , 1.        , 0.9375    ]),
         'ncv_precision_recall_auc': array([0.94763033, 0.95864348, 0.9558636 , 0.9483275 , 0.96320664,
       0.93604388, 0.92090467, 0.93253141, 0.98331245, 0.9459184 ]),
         'ncv_roc_auc': array([0.95328283, 0.96969697, 0.96212121, 0.95707071, 0.96969697,
       0.94444444, 0.92424242, 0.91414141, 0.98484848, 0.95959596]),
         'ncv_sensitivity': array([0.66666667, 0.66666667, 0.83333333, 0.77777778, 0.83333333,
       0.66666667, 0.66666667, 0.83333333, 0.83333333, 0.83333333]),
         'ncv_specificity': array([0.95454545, 0.95454545, 0.95454545, 0.86363636, 0.95454545,
       0.95454545, 0.90909091, 0.95454545, 1.        , 0.95454545]),
         'ranked_best_inner_params': [{'frequency': 21, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 11, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                      {'frequency': 6, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                      {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 4, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                      {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
         'std_ncv_average_precision': 0.01714370831309679,
         'std_ncv_balanced_accuracy': 0.04879904857113669,
         'std_ncv_brier_loss': 0.009896897399825542,
         'std_ncv_f1': 0.06132743615588891,
         'std_ncv_informedness': 0.09759809714227338,
         'std_ncv_log_loss': 0.024688582378483825,
         'std_ncv_markedness': 0.08506456227694943,
         'std_ncv_mcc': 0.09083415161401256,
         'std_ncv_negative_predictive_value': 0.04998022799812118,
         'std_ncv_precision': 0.04820211640043596,
         'std_ncv_precision_recall_auc': 0.01750859563406432,
         'std_ncv_roc_auc': 0.021388174995407277,
         'std_ncv_sensitivity': 0.08302411767207372,
         'std_ncv_specificity': 0.03585502898848253,
         'std_test_average_precision': 0.06194541861462543,
         'std_test_balanced_accuracy': 0.11234979895070146,
         'std_test_brier_loss': 0.044276423517216515,
         'std_test_f1': 0.15863965998049892,
         'std_test_informedness': 0.22469959790140293,
         'std_test_log_loss': 0.11381394921674881,
         'std_test_markedness': 0.17317318315160135,
         'std_test_mcc': 0.1970091029221633,
         'std_test_negative_predictive_value': 0.12804034033033856,
         'std_test_precision': 0.12873182235239194,
         'std_test_precision_recall_auc': 0.07221924421827423,
         'std_test_roc_auc': 0.05872010987604566,
         'std_test_sensitivity': 0.2224885025947365,
         'std_test_specificity': 0.10075733629034925,
         'std_train_average_precision': 9.24808149876991e-17,
         'std_train_balanced_accuracy': 0.0,
         'std_train_brier_loss': 0.0022792477861846286,
         'std_train_f1': 0.0,
         'std_train_informedness': 0.0,
         'std_train_log_loss': 0.013065517892730766,
         'std_train_markedness': 0.0,
         'std_train_mcc': 0.0,
         'std_train_negative_predictive_value': 0.0,
         'std_train_precision': 0.0,
         'std_train_precision_recall_auc': 9.24808149876991e-17,
         'std_train_roc_auc': 2.242989226691107e-17,
         'std_train_sensitivity': 0.0,
         'std_train_specificity': 0.0,
         'test_average_precision': array([1.        , 1.        , 0.95      , 1.        , 0.91666667,
       1.        , 1.        , 1.        , 0.91666667, 1.        ,
       1.        , 1.        , 0.91666667, 1.        , 0.91666667,
       1.        , 1.        , 1.        , 0.91666667, 0.91666667,
       1.        , 0.95      , 1.        , 0.91666667, 1.        ,
       1.        , 0.80416667, 1.        , 1.        , 1.        ,
       0.95      , 0.89285714, 1.        , 0.80555556, 1.        ,
       1.        , 1.        , 1.        , 0.7       , 1.        ,
       1.        , 1.        , 1.        , 0.91666667, 1.        ,
       0.95      , 0.95      , 1.        , 0.91666667, 1.        ]),
         'test_balanced_accuracy': array([0.875     , 0.75      , 0.75      , 1.        , 0.66666667,
       0.75      , 0.875     , 0.75      , 0.83333333, 0.9       ,
       1.        , 0.875     , 0.875     , 1.        , 0.73333333,
       0.75      , 0.875     , 0.875     , 0.8       , 0.9       ,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333,
       0.875     , 0.625     , 0.75      , 1.        , 0.9       ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       1.        , 1.        , 1.        , 0.56666667, 0.83333333,
       1.        , 0.875     , 1.        , 0.83333333, 0.83333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333]),
         'test_brier_loss': array([0.110175  , 0.1395875 , 0.11425   , 0.04923612, 0.1190375 ,
       0.1287125 , 0.087825  , 0.08075   , 0.0960375 , 0.0587635 ,
       0.0399125 , 0.0991255 , 0.105775  , 0.07555   , 0.115143  ,
       0.10726862, 0.0517055 , 0.0953    , 0.119096  , 0.0937    ,
       0.08461475, 0.0914125 , 0.05443   , 0.126975  , 0.0664375 ,
       0.06935   , 0.20279188, 0.1336845 , 0.02473325, 0.08075   ,
       0.102625  , 0.165081  , 0.03923187, 0.1317625 , 0.1269625 ,
       0.058552  , 0.0151325 , 0.0765    , 0.267677  , 0.0759125 ,
       0.072075  , 0.08150075, 0.0462895 , 0.1160135 , 0.0968125 ,
       0.106125  , 0.11024813, 0.0231285 , 0.1305    , 0.090042  ]),
         'test_f1': array([0.85714286, 0.66666667, 0.75      , 1.        , 0.5       ,
       0.66666667, 0.85714286, 0.66666667, 0.8       , 0.85714286,
       1.        , 0.85714286, 0.85714286, 1.        , 0.66666667,
       0.66666667, 0.85714286, 0.85714286, 0.75      , 0.85714286,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ,
       0.85714286, 0.4       , 0.66666667, 1.        , 0.85714286,
       0.75      , 0.75      , 1.        , 0.5       , 0.5       ,
       1.        , 1.        , 1.        , 0.4       , 0.8       ,
       1.        , 0.85714286, 1.        , 0.8       , 0.8       ,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ]),
         'test_informedness': array([0.75      , 0.5       , 0.5       , 1.        , 0.33333333,
       0.5       , 0.75      , 0.5       , 0.66666667, 0.8       ,
       1.        , 0.75      , 0.75      , 1.        , 0.46666667,
       0.5       , 0.75      , 0.75      , 0.6       , 0.8       ,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667,
       0.75      , 0.25      , 0.5       , 1.        , 0.8       ,
       0.5       , 0.5       , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 1.        , 0.13333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667]),
         'test_log_loss': array([0.34060243, 0.41277409, 0.32361491, 0.23276107, 0.35958298,
       0.3822804 , 0.26635955, 0.27261904, 0.31209943, 0.18466065,
       0.16966057, 0.31238591, 0.32699618, 0.27487132, 0.33594243,
       0.32406877, 0.20897435, 0.32417524, 0.34544164, 0.30013145,
       0.29072336, 0.29574368, 0.19452173, 0.39848901, 0.22158017,
       0.25148806, 0.53761758, 0.40369129, 0.11533469, 0.28043558,
       0.31396387, 0.47296859, 0.19254522, 0.35999149, 0.38293839,
       0.21034247, 0.11027021, 0.2672235 , 0.82305309, 0.26645116,
       0.25646437, 0.2782445 , 0.19251143, 0.35444354, 0.33343458,
       0.33908498, 0.34513696, 0.13767563, 0.39671666, 0.29163546]),
         'test_markedness': array([0.8       , 0.66666667, 0.5       , 1.        , 0.71428571,
       0.66666667, 0.8       , 0.66666667, 0.83333333, 0.75      ,
       1.        , 0.8       , 0.8       , 1.        , 0.46666667,
       0.66666667, 0.8       , 0.8       , 0.6       , 0.75      ,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333,
       0.8       , 0.57142857, 0.66666667, 1.        , 0.75      ,
       0.5       , 0.5       , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 1.        , 0.16666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.83333333,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333]),
         'test_mcc': array([0.77459667, 0.57735027, 0.5       , 1.        , 0.48795004,
       0.57735027, 0.77459667, 0.57735027, 0.74535599, 0.77459667,
       1.        , 0.77459667, 0.77459667, 1.        , 0.46666667,
       0.57735027, 0.77459667, 0.77459667, 0.6       , 0.77459667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599,
       0.77459667, 0.37796447, 0.57735027, 1.        , 0.77459667,
       0.5       , 0.5       , 1.        , 0.48795004, 0.48795004,
       1.        , 1.        , 1.        , 0.1490712 , 0.74535599,
       1.        , 0.77459667, 1.        , 0.74535599, 0.74535599,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599]),
         'test_negative_predictive_value': array([0.8       , 0.66666667, 0.75      , 1.        , 0.71428571,
       0.66666667, 0.8       , 0.66666667, 0.83333333, 1.        ,
       1.        , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 0.8       , 0.8       , 1.        , 1.        ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333,
       0.8       , 0.57142857, 0.66666667, 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.83333333,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333]),
         'test_precision': array([1.        , 1.        , 0.75      , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.75      ,
       1.        , 1.        , 1.        , 0.75      , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.75      , 1.        ]),
         'test_precision_recall_auc': array([1.        , 1.        , 0.94375   , 1.        , 0.90277778,
       1.        , 1.        , 1.        , 0.90277778, 1.        ,
       1.        , 1.        , 0.90833333, 1.        , 0.90277778,
       1.        , 1.        , 1.        , 0.90277778, 0.90277778,
       1.        , 0.94375   , 1.        , 0.90277778, 1.        ,
       1.        , 0.76666667, 1.        , 1.        , 1.        ,
       0.94375   , 0.88392857, 1.        , 0.76388889, 1.        ,
       1.        , 1.        , 1.        , 0.65555556, 1.        ,
       1.        , 1.        , 1.        , 0.90277778, 1.        ,
       0.94375   , 0.94375   , 1.        , 0.90277778, 1.        ]),
         'test_roc_auc': array([1.        , 1.        , 0.9375    , 1.        , 0.93333333,
       1.        , 1.        , 1.        , 0.93333333, 1.        ,
       1.        , 1.        , 0.875     , 1.        , 0.93333333,
       1.        , 1.        , 1.        , 0.93333333, 0.93333333,
       1.        , 0.9375    , 1.        , 0.93333333, 1.        ,
       1.        , 0.8125    , 1.        , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 0.86666667, 1.        ,
       1.        , 1.        , 1.        , 0.73333333, 1.        ,
       1.        , 1.        , 1.        , 0.93333333, 1.        ,
       0.9375    , 0.9375    , 1.        , 0.93333333, 1.        ]),
         'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 0.5       , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667,
       0.75      , 0.25      , 0.5       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
         'test_specificity': array([1.  , 1.  , 0.75, 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  ,
       1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ]),
         'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_brier_loss': array([0.01173125, 0.01133958, 0.00978646, 0.01262205, 0.01120208,
       0.01142292, 0.01046979, 0.01286146, 0.01004583, 0.00807329,
       0.01221042, 0.01477325, 0.00916146, 0.00803229, 0.00944613,
       0.01268872, 0.01245142, 0.01252604, 0.00759633, 0.01464271,
       0.01195411, 0.00624062, 0.01221579, 0.01434688, 0.01199271,
       0.01233958, 0.0083772 , 0.00890567, 0.01259736, 0.01090104,
       0.00831146, 0.00781454, 0.01356543, 0.01543958, 0.01096667,
       0.01558517, 0.01074179, 0.01109792, 0.00539796, 0.01139583,
       0.01164688, 0.008768  , 0.01247213, 0.01012796, 0.01164271,
       0.0119625 , 0.01152349, 0.01353863, 0.00873125, 0.00916025]),
         'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_log_loss': array([0.08082228, 0.07181184, 0.07171605, 0.09358465, 0.0821324 ,
       0.07670872, 0.07304563, 0.08456041, 0.07035179, 0.06738717,
       0.08442748, 0.10257799, 0.06735984, 0.06226262, 0.07276093,
       0.09275073, 0.09289411, 0.08692849, 0.06256618, 0.10156192,
       0.08283523, 0.05431992, 0.08608251, 0.09179645, 0.07896323,
       0.09109082, 0.06395402, 0.06807817, 0.0923689 , 0.07632337,
       0.06448047, 0.06161146, 0.09886232, 0.10339574, 0.0775218 ,
       0.10713637, 0.08129378, 0.07712265, 0.04925458, 0.08285524,
       0.08415764, 0.07014591, 0.08911508, 0.07137217, 0.08517063,
       0.0768326 , 0.08671203, 0.09300403, 0.06566951, 0.07214613]),
         'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
         'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'precision_recall_auc': {'best_inner_indices': array([3, 2, 3, 5, 3, 2, 4, 2, 1, 2, 3, 5, 4, 1, 1, 0, 0, 4, 2, 4, 0, 0,
       2, 2, 0, 2, 2, 3, 4, 1, 2, 3, 1, 0, 2, 2, 3, 0, 1, 1, 2, 3, 2, 0,
       0, 2, 0, 2, 2, 1]),
                          'best_inner_params': [{'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                                {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}],
                          'best_inner_scores': array([0.83530128, 0.90567521, 0.93186374, 0.86364711, 0.86101318,
       0.91355479, 0.87898895, 0.77682794, 0.88166986, 0.87404104,
       0.85271644, 0.77333658, 0.90043203, 0.90935033, 0.90270554,
       0.84731215, 0.87742706, 0.83787068, 0.95560911, 0.81668311,
       0.8567684 , 0.90981856, 0.83932256, 0.95512321, 0.85024406,
       0.8721564 , 0.88690783, 0.90384239, 0.81756826, 0.87362381,
       0.95610682, 0.83573635, 0.84376806, 0.84360308, 0.90071175,
       0.7794004 , 0.83948076, 0.81878647, 0.97222513, 0.86149427,
       0.83964596, 0.85738162, 0.82386373, 0.87955286, 0.93485256,
       0.90000577, 0.82373902, 0.79130359, 0.94006164, 0.85388254]),
                          'best_params': {'randomforestclassifier__max_features': [0.1, 'sqrt'], 'randomforestclassifier__n_estimators': [100, 1000, 500]},
                          'max_ncv_average_precision': 0.9765704771187229,
                          'max_ncv_balanced_accuracy': 0.893939393939394,
                          'max_ncv_brier_loss': 0.10328509999999999,
                          'max_ncv_f1': 0.8823529411764706,
                          'max_ncv_informedness': 0.7878787878787881,
                          'max_ncv_log_loss': 0.3430293823868994,
                          'max_ncv_markedness': 0.8125,
                          'max_ncv_mcc': 0.8000946913656627,
                          'max_ncv_negative_predictive_value': 0.875,
                          'max_ncv_precision': 1.0,
                          'max_ncv_precision_recall_auc': 0.9759123264315475,
                          'max_ncv_roc_auc': 0.9797979797979798,
                          'max_ncv_sensitivity': 0.8333333333333334,
                          'max_ncv_specificity': 1.0,
                          'max_test_average_precision': 1.0,
                          'max_test_balanced_accuracy': 1.0,
                          'max_test_brier_loss': 0.2802585,
                          'max_test_f1': 1.0,
                          'max_test_informedness': 1.0,
                          'max_test_log_loss': 0.8813451081665591,
                          'max_test_markedness': 1.0,
                          'max_test_mcc': 1.0,
                          'max_test_negative_predictive_value': 1.0,
                          'max_test_precision': 1.0,
                          'max_test_precision_recall_auc': 1.0,
                          'max_test_roc_auc': 1.0,
                          'max_test_sensitivity': 1.0,
                          'max_test_specificity': 1.0,
                          'max_train_average_precision': 1.0000000000000002,
                          'max_train_balanced_accuracy': 1.0,
                          'max_train_brier_loss': 0.01629375,
                          'max_train_f1': 1.0,
                          'max_train_informedness': 1.0,
                          'max_train_log_loss': 0.1092211041003112,
                          'max_train_markedness': 1.0,
                          'max_train_mcc': 1.0,
                          'max_train_negative_predictive_value': 1.0,
                          'max_train_precision': 1.0,
                          'max_train_precision_recall_auc': 1.0000000000000002,
                          'max_train_roc_auc': 1.0,
                          'max_train_sensitivity': 1.0,
                          'max_train_specificity': 1.0,
                          'mean_ncv_average_precision': 0.9529305787396936,
                          'mean_ncv_balanced_accuracy': 0.858838383838384,
                          'mean_ncv_brier_loss': 0.0932555525,
                          'mean_ncv_f1': 0.8387200789406671,
                          'mean_ncv_informedness': 0.7176767676767677,
                          'mean_ncv_log_loss': 0.3041816409295174,
                          'mean_ncv_markedness': 0.7592769806919424,
                          'mean_ncv_mcc': 0.738022518577419,
                          'mean_ncv_negative_predictive_value': 0.8370535913362002,
                          'mean_ncv_precision': 0.9222233893557423,
                          'mean_ncv_precision_recall_auc': 0.9519533002585403,
                          'mean_ncv_roc_auc': 0.9574494949494949,
                          'mean_ncv_sensitivity': 0.7722222222222221,
                          'mean_ncv_specificity': 0.9454545454545455,
                          'mean_test_average_precision': 0.9656388888888888,
                          'mean_test_balanced_accuracy': 0.86,
                          'mean_test_brier_loss': 0.0932555525,
                          'mean_test_f1': 0.8212380952380951,
                          'mean_test_informedness': 0.7199999999999999,
                          'mean_test_log_loss': 0.30418164092951744,
                          'mean_test_markedness': 0.7886190476190477,
                          'mean_test_mcc': 0.7505157986136115,
                          'mean_test_negative_predictive_value': 0.852952380952381,
                          'mean_test_precision': 0.9356666666666666,
                          'mean_test_precision_recall_auc': 0.9603611111111111,
                          'mean_test_roc_auc': 0.9682916666666667,
                          'mean_test_sensitivity': 0.7699999999999999,
                          'mean_test_specificity': 0.9499999999999998,
                          'mean_train_average_precision': 1.0,
                          'mean_train_balanced_accuracy': 1.0,
                          'mean_train_brier_loss': 0.011237769375000001,
                          'mean_train_f1': 1.0,
                          'mean_train_informedness': 1.0,
                          'mean_train_log_loss': 0.08079522733044353,
                          'mean_train_markedness': 1.0,
                          'mean_train_mcc': 1.0,
                          'mean_train_negative_predictive_value': 1.0,
                          'mean_train_precision': 1.0,
                          'mean_train_precision_recall_auc': 1.0,
                          'mean_train_roc_auc': 1.0,
                          'mean_train_sensitivity': 1.0,
                          'mean_train_specificity': 1.0,
                          'min_ncv_average_precision': 0.9333861113037316,
                          'min_ncv_balanced_accuracy': 0.7878787878787878,
                          'min_ncv_brier_loss': 0.082785425,
                          'min_ncv_f1': 0.75,
                          'min_ncv_informedness': 0.5757575757575757,
                          'min_ncv_log_loss': 0.27652925180081395,
                          'min_ncv_markedness': 0.6263736263736264,
                          'min_ncv_mcc': 0.6005325641789633,
                          'min_ncv_negative_predictive_value': 0.7692307692307693,
                          'min_ncv_precision': 0.8571428571428571,
                          'min_ncv_precision_recall_auc': 0.9319362661737141,
                          'min_ncv_roc_auc': 0.9267676767676768,
                          'min_ncv_sensitivity': 0.6666666666666666,
                          'min_ncv_specificity': 0.9090909090909091,
                          'min_test_average_precision': 0.7,
                          'min_test_balanced_accuracy': 0.5666666666666667,
                          'min_test_brier_loss': 0.024850000000000004,
                          'min_test_f1': 0.4,
                          'min_test_informedness': 0.1333333333333333,
                          'min_test_log_loss': 0.14951350286892062,
                          'min_test_markedness': 0.16666666666666652,
                          'min_test_mcc': 0.14907119849998599,
                          'min_test_negative_predictive_value': 0.5714285714285714,
                          'min_test_precision': 0.5,
                          'min_test_precision_recall_auc': 0.6555555555555556,
                          'min_test_roc_auc': 0.7333333333333333,
                          'min_test_sensitivity': 0.25,
                          'min_test_specificity': 0.6,
                          'min_train_average_precision': 0.9999999999999999,
                          'min_train_balanced_accuracy': 1.0,
                          'min_train_brier_loss': 0.005792875,
                          'min_train_f1': 1.0,
                          'min_train_informedness': 1.0,
                          'min_train_log_loss': 0.05115583660855597,
                          'min_train_markedness': 1.0,
                          'min_train_mcc': 1.0,
                          'min_train_negative_predictive_value': 1.0,
                          'min_train_precision': 1.0,
                          'min_train_precision_recall_auc': 0.9999999999999999,
                          'min_train_roc_auc': 0.9999999999999999,
                          'min_train_sensitivity': 1.0,
                          'min_train_specificity': 1.0,
                          'ncv_average_precision': array([0.96042955, 0.96035151, 0.95706169, 0.95875453, 0.95465755,
       0.94464286, 0.93338611, 0.93884142, 0.97657048, 0.9446101 ]),
                          'ncv_balanced_accuracy': array([0.83333333, 0.86616162, 0.86616162, 0.84343434, 0.87121212,
       0.83838384, 0.78787879, 0.89393939, 0.89393939, 0.89393939]),
                          'ncv_brier_loss': array([0.1032851 , 0.08951422, 0.09055225, 0.0894565 , 0.08278542,
       0.10177047, 0.10296395, 0.09868265, 0.08403925, 0.0895057 ]),
                          'ncv_f1': array([0.8       , 0.84848485, 0.84848485, 0.82352941, 0.85714286,
       0.8125    , 0.75      , 0.88235294, 0.88235294, 0.88235294]),
                          'ncv_informedness': array([0.66666667, 0.73232323, 0.73232323, 0.68686869, 0.74242424,
       0.67676768, 0.57575758, 0.78787879, 0.78787879, 0.78787879]),
                          'ncv_log_loss': array([0.3324976 , 0.29054451, 0.29584563, 0.28582859, 0.27652925,
       0.3207715 , 0.31458953, 0.34302938, 0.28487188, 0.29730854]),
                          'ncv_markedness': array([0.78571429, 0.77333333, 0.77333333, 0.70833333, 0.75191816,
       0.73626374, 0.62637363, 0.8125    , 0.8125    , 0.8125    ]),
                          'ncv_mcc': array([0.72374686, 0.75254898, 0.75254898, 0.69751845, 0.74715612,
       0.70588915, 0.60053256, 0.80009469, 0.80009469, 0.80009469]),
                          'ncv_negative_predictive_value': array([0.78571429, 0.84      , 0.84      , 0.83333333, 0.86956522,
       0.80769231, 0.76923077, 0.875     , 0.875     , 0.875     ]),
                          'ncv_precision': array([1.        , 0.93333333, 0.93333333, 0.875     , 0.88235294,
       0.92857143, 0.85714286, 0.9375    , 0.9375    , 0.9375    ]),
                          'ncv_precision_recall_auc': array([0.9592567 , 0.95863146, 0.95708192, 0.95758934, 0.95351039,
       0.94270437, 0.93193627, 0.93755608, 0.97591233, 0.94535415]),
                          'ncv_roc_auc': array([0.96717172, 0.96969697, 0.96338384, 0.96464646, 0.95454545,
       0.9469697 , 0.94065657, 0.92676768, 0.97979798, 0.96085859]),
                          'ncv_sensitivity': array([0.66666667, 0.77777778, 0.77777778, 0.77777778, 0.83333333,
       0.72222222, 0.66666667, 0.83333333, 0.83333333, 0.83333333]),
                          'ncv_specificity': array([1.        , 0.95454545, 0.95454545, 0.90909091, 0.90909091,
       0.95454545, 0.90909091, 0.95454545, 0.95454545, 0.95454545]),
                          'ranked_best_inner_params': [{'frequency': 17, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                                       {'frequency': 10, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                                       {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}},
                                                       {'frequency': 2, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}}],
                          'std_ncv_average_precision': 0.012660190314678596,
                          'std_ncv_balanced_accuracy': 0.03382644645964262,
                          'std_ncv_brier_loss': 0.007754321151635478,
                          'std_ncv_f1': 0.04285677184292682,
                          'std_ncv_informedness': 0.06765289291928524,
                          'std_ncv_log_loss': 0.022289869194692266,
                          'std_ncv_markedness': 0.05815160361429421,
                          'std_ncv_mcc': 0.061323130800875765,
                          'std_ncv_negative_predictive_value': 0.03873807065855634,
                          'std_ncv_precision': 0.04094937496099291,
                          'std_ncv_precision_recall_auc': 0.012778095527564608,
                          'std_ncv_roc_auc': 0.015578645572416295,
                          'std_ncv_sensitivity': 0.06651216665210363,
                          'std_ncv_specificity': 0.02874797872880347,
                          'std_test_average_precision': 0.06484593856441066,
                          'std_test_balanced_accuracy': 0.11246062551066233,
                          'std_test_brier_loss': 0.04408563842322952,
                          'std_test_f1': 0.15940652462934227,
                          'std_test_informedness': 0.22492125102132465,
                          'std_test_log_loss': 0.11590008081491071,
                          'std_test_markedness': 0.17713891888785013,
                          'std_test_mcc': 0.1994379968232704,
                          'std_test_negative_predictive_value': 0.1225373452883981,
                          'std_test_precision': 0.13535918455552773,
                          'std_test_precision_recall_auc': 0.07597287254050578,
                          'std_test_roc_auc': 0.05673416910361472,
                          'std_test_sensitivity': 0.21597219943711557,
                          'std_test_specificity': 0.10690449676496974,
                          'std_train_average_precision': 6.539381140746054e-17,
                          'std_train_balanced_accuracy': 0.0,
                          'std_train_brier_loss': 0.002189263440446442,
                          'std_train_f1': 0.0,
                          'std_train_informedness': 0.0,
                          'std_train_log_loss': 0.012555836673386112,
                          'std_train_markedness': 0.0,
                          'std_train_mcc': 0.0,
                          'std_train_negative_predictive_value': 0.0,
                          'std_train_precision': 0.0,
                          'std_train_precision_recall_auc': 6.539381140746054e-17,
                          'std_train_roc_auc': 1.586032892321652e-17,
                          'std_train_sensitivity': 0.0,
                          'std_train_specificity': 0.0,
                          'test_average_precision': array([1.        , 1.        , 0.95      , 1.        , 0.80555556,
       1.        , 1.        , 1.        , 0.91666667, 1.        ,
       1.        , 1.        , 0.91666667, 1.        , 0.91666667,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 0.91666667, 1.        , 1.        , 1.        ,
       1.        , 0.80416667, 1.        , 1.        , 1.        ,
       0.95      , 0.95      , 1.        , 0.80555556, 1.        ,
       1.        , 1.        , 1.        , 0.7       , 1.        ,
       1.        , 1.        , 1.        , 0.91666667, 0.91666667,
       0.95      , 0.95      , 1.        , 0.91666667, 1.        ]),
                          'test_balanced_accuracy': array([0.875     , 0.75      , 0.875     , 1.        , 0.66666667,
       0.75      , 0.875     , 1.        , 0.83333333, 0.9       ,
       0.875     , 0.875     , 0.875     , 1.        , 0.73333333,
       0.75      , 0.875     , 0.875     , 0.8       , 1.        ,
       0.875     , 0.875     , 1.        , 0.8       , 0.83333333,
       0.875     , 0.625     , 0.875     , 1.        , 0.9       ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       1.        , 1.        , 1.        , 0.56666667, 0.83333333,
       1.        , 0.875     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333]),
                          'test_brier_loss': array([0.1029625 , 0.12731462, 0.0916    , 0.04941087, 0.1451375 ,
       0.12659462, 0.096763  , 0.06529587, 0.0992945 , 0.05962312,
       0.0489375 , 0.09168575, 0.118399  , 0.0723745 , 0.1213645 ,
       0.1255125 , 0.0505    , 0.098017  , 0.105521  , 0.067732  ,
       0.072325  , 0.1151375 , 0.05632487, 0.10243975, 0.0677    ,
       0.0737    , 0.20781437, 0.114     , 0.0366325 , 0.0767055 ,
       0.107141  , 0.1200375 , 0.0308185 , 0.132     , 0.12482275,
       0.04828375, 0.02485   , 0.064725  , 0.2802585 , 0.075296  ,
       0.06384338, 0.091225  , 0.04915288, 0.1038875 , 0.1120875 ,
       0.109751  , 0.102575  , 0.02809525, 0.11140525, 0.095702  ]),
                          'test_f1': array([0.85714286, 0.66666667, 0.85714286, 1.        , 0.5       ,
       0.66666667, 0.85714286, 1.        , 0.8       , 0.85714286,
       0.85714286, 0.85714286, 0.85714286, 1.        , 0.66666667,
       0.66666667, 0.85714286, 0.85714286, 0.75      , 1.        ,
       0.85714286, 0.85714286, 1.        , 0.75      , 0.8       ,
       0.85714286, 0.4       , 0.85714286, 1.        , 0.85714286,
       0.75      , 0.75      , 1.        , 0.5       , 0.5       ,
       1.        , 1.        , 1.        , 0.4       , 0.8       ,
       1.        , 0.85714286, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ]),
                          'test_informedness': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 1.        , 0.66666667, 0.8       ,
       0.75      , 0.75      , 0.75      , 1.        , 0.46666667,
       0.5       , 0.75      , 0.75      , 0.6       , 1.        ,
       0.75      , 0.75      , 1.        , 0.6       , 0.66666667,
       0.75      , 0.25      , 0.75      , 1.        , 0.8       ,
       0.5       , 0.5       , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 1.        , 0.13333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667]),
                          'test_log_loss': array([0.33225263, 0.38460607, 0.29040189, 0.23206641, 0.42316102,
       0.37446622, 0.31430676, 0.24519398, 0.33298713, 0.18576843,
       0.1996438 , 0.29266282, 0.3685426 , 0.27148158, 0.34689733,
       0.35204592, 0.18720072, 0.33274067, 0.31916625, 0.23798936,
       0.25512673, 0.37066924, 0.20053674, 0.3239184 , 0.23239515,
       0.25519272, 0.54557118, 0.37341252, 0.15473524, 0.27494582,
       0.31670226, 0.37179547, 0.15479364, 0.35320256, 0.37645372,
       0.18129901, 0.1495135 , 0.24841388, 0.88134511, 0.25457541,
       0.24122971, 0.31709284, 0.19817338, 0.32412721, 0.34373627,
       0.3510925 , 0.31901087, 0.15483628, 0.35226784, 0.30933522]),
                          'test_markedness': array([0.8       , 0.66666667, 0.8       , 1.        , 0.71428571,
       0.66666667, 0.8       , 1.        , 0.83333333, 0.75      ,
       0.8       , 0.8       , 0.8       , 1.        , 0.46666667,
       0.66666667, 0.8       , 0.8       , 0.6       , 1.        ,
       0.8       , 0.8       , 1.        , 0.6       , 0.83333333,
       0.8       , 0.57142857, 0.8       , 1.        , 0.75      ,
       0.5       , 0.5       , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 1.        , 0.16666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.46666667,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333]),
                          'test_mcc': array([0.77459667, 0.57735027, 0.77459667, 1.        , 0.48795004,
       0.57735027, 0.77459667, 1.        , 0.74535599, 0.77459667,
       0.77459667, 0.77459667, 0.77459667, 1.        , 0.46666667,
       0.57735027, 0.77459667, 0.77459667, 0.6       , 1.        ,
       0.77459667, 0.77459667, 1.        , 0.6       , 0.74535599,
       0.77459667, 0.37796447, 0.77459667, 1.        , 0.77459667,
       0.5       , 0.5       , 1.        , 0.48795004, 0.48795004,
       1.        , 1.        , 1.        , 0.1490712 , 0.74535599,
       1.        , 0.77459667, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599]),
                          'test_negative_predictive_value': array([0.8       , 0.66666667, 0.8       , 1.        , 0.71428571,
       0.66666667, 0.8       , 1.        , 0.83333333, 1.        ,
       0.8       , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 0.8       , 0.8       , 1.        , 1.        ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333,
       0.8       , 0.57142857, 0.8       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333]),
                          'test_precision': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 1.        ]),
                          'test_precision_recall_auc': array([1.        , 1.        , 0.94375   , 1.        , 0.76388889,
       1.        , 1.        , 1.        , 0.90277778, 1.        ,
       1.        , 1.        , 0.92708333, 1.        , 0.90277778,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 0.90833333, 1.        , 1.        , 1.        ,
       1.        , 0.76666667, 1.        , 1.        , 1.        ,
       0.94375   , 0.94375   , 1.        , 0.76388889, 1.        ,
       1.        , 1.        , 1.        , 0.65555556, 1.        ,
       1.        , 1.        , 1.        , 0.90277778, 0.90277778,
       0.94375   , 0.94375   , 1.        , 0.90277778, 1.        ]),
                          'test_roc_auc': array([1.        , 1.        , 0.9375    , 1.        , 0.86666667,
       1.        , 1.        , 1.        , 0.93333333, 1.        ,
       1.        , 1.        , 0.90625   , 1.        , 0.93333333,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 0.875     , 1.        , 1.        , 1.        ,
       1.        , 0.8125    , 1.        , 1.        , 1.        ,
       0.9375    , 0.9375    , 1.        , 0.86666667, 1.        ,
       1.        , 1.        , 1.        , 0.73333333, 1.        ,
       1.        , 1.        , 1.        , 0.93333333, 0.93333333,
       0.9375    , 0.9375    , 1.        , 0.93333333, 1.        ]),
                          'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 1.        , 0.66666667, 1.        ,
       0.75      , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667,
       0.75      , 0.25      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
                          'test_specificity': array([1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 0.6 , 1.  , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 1.  ]),
                          'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_brier_loss': array([0.01491875, 0.00955927, 0.01119479, 0.0129844 , 0.01290521,
       0.01106499, 0.01315308, 0.01268043, 0.00884454, 0.00840549,
       0.01443646, 0.0142182 , 0.01108217, 0.00999117, 0.00869717,
       0.01284479, 0.01114375, 0.01230779, 0.00697293, 0.01470054,
       0.01248438, 0.00872813, 0.01249303, 0.00926949, 0.01118646,
       0.01169009, 0.00794656, 0.01093438, 0.01541233, 0.00988746,
       0.00831458, 0.01095104, 0.01062233, 0.01213542, 0.01061965,
       0.01271064, 0.01629375, 0.01034583, 0.00579288, 0.01165808,
       0.01123257, 0.01228125, 0.01283585, 0.01140417, 0.0094875 ,
       0.01097729, 0.01033542, 0.01324971, 0.00888205, 0.00962025]),
                          'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_log_loss': array([0.09896649, 0.07045622, 0.08327595, 0.0956927 , 0.09219794,
       0.07556755, 0.09302194, 0.08983235, 0.06857288, 0.06985154,
       0.09846337, 0.09980628, 0.08354289, 0.07460932, 0.07032616,
       0.08248882, 0.07411906, 0.09019895, 0.06064144, 0.10254863,
       0.08530268, 0.06623457, 0.08644467, 0.06986152, 0.07812669,
       0.08207834, 0.06240487, 0.08039022, 0.10903972, 0.07204282,
       0.06647312, 0.08265021, 0.07978317, 0.0788909 , 0.07677334,
       0.08865849, 0.1092211 , 0.06979432, 0.05115584, 0.08121069,
       0.08049174, 0.08921999, 0.09028455, 0.07771698, 0.06843941,
       0.07581138, 0.07222894, 0.0944469 , 0.06694618, 0.07345752]),
                          'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
                          'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])},
 'roc_auc': {'best_inner_indices': array([3, 2, 3, 2, 1, 0, 1, 2, 1, 2, 1, 5, 4, 1, 4, 4, 2, 0, 2, 3, 2, 1,
       1, 2, 2, 3, 2, 3, 3, 1, 2, 3, 1, 0, 2, 2, 3, 2, 1, 1, 2, 0, 2, 0,
       1, 2, 5, 5, 2, 2]),
             'best_inner_params': [{'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000},
                                   {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}],
             'best_inner_scores': array([0.85074956, 0.93694885, 0.93849206, 0.87407407, 0.89847495,
       0.92945326, 0.89219577, 0.81856261, 0.9087146 , 0.88779956,
       0.89792769, 0.83046737, 0.92350088, 0.92244009, 0.90588235,
       0.89638448, 0.91798942, 0.88051146, 0.9583878 , 0.83507625,
       0.89462081, 0.92107584, 0.8686067 , 0.95969499, 0.90152505,
       0.92063492, 0.91291887, 0.91027337, 0.84575163, 0.87755991,
       0.94929453, 0.87918871, 0.90255732, 0.82636166, 0.91808279,
       0.80864198, 0.88447972, 0.88117284, 0.97037037, 0.87538126,
       0.85648148, 0.86265432, 0.85868607, 0.883878  , 0.91982571,
       0.90939153, 0.85273369, 0.85119048, 0.94248366, 0.85054466]),
             'best_params': {'randomforestclassifier__max_features': [0.1, 'sqrt'], 'randomforestclassifier__n_estimators': [100, 1000, 500]},
             'max_ncv_average_precision': 0.9734165324745037,
             'max_ncv_balanced_accuracy': 0.893939393939394,
             'max_ncv_brier_loss': 0.113016575,
             'max_ncv_f1': 0.8823529411764706,
             'max_ncv_informedness': 0.7878787878787881,
             'max_ncv_log_loss': 0.36202126037309257,
             'max_ncv_markedness': 0.8125,
             'max_ncv_mcc': 0.8000946913656627,
             'max_ncv_negative_predictive_value': 0.875,
             'max_ncv_precision': 1.0,
             'max_ncv_precision_recall_auc': 0.9727411961556307,
             'max_ncv_roc_auc': 0.9747474747474747,
             'max_ncv_sensitivity': 0.8333333333333334,
             'max_ncv_specificity': 1.0,
             'max_test_average_precision': 1.0,
             'max_test_balanced_accuracy': 1.0,
             'max_test_brier_loss': 0.277645,
             'max_test_f1': 1.0,
             'max_test_informedness': 1.0,
             'max_test_log_loss': 0.9037189577942577,
             'max_test_markedness': 1.0,
             'max_test_mcc': 1.0,
             'max_test_negative_predictive_value': 1.0,
             'max_test_precision': 1.0,
             'max_test_precision_recall_auc': 1.0,
             'max_test_roc_auc': 1.0,
             'max_test_sensitivity': 1.0,
             'max_test_specificity': 1.0,
             'max_train_average_precision': 1.0000000000000002,
             'max_train_balanced_accuracy': 1.0,
             'max_train_brier_loss': 0.016721875,
             'max_train_f1': 1.0,
             'max_train_informedness': 1.0,
             'max_train_log_loss': 0.10969627581288459,
             'max_train_markedness': 1.0,
             'max_train_mcc': 1.0,
             'max_train_negative_predictive_value': 1.0,
             'max_train_precision': 1.0,
             'max_train_precision_recall_auc': 1.0000000000000002,
             'max_train_roc_auc': 1.0,
             'max_train_sensitivity': 1.0,
             'max_train_specificity': 1.0,
             'mean_ncv_average_precision': 0.9511032989202489,
             'mean_ncv_balanced_accuracy': 0.8570707070707073,
             'mean_ncv_brier_loss': 0.094446195,
             'mean_ncv_f1': 0.8372329386299976,
             'mean_ncv_informedness': 0.7141414141414142,
             'mean_ncv_log_loss': 0.30749756346414847,
             'mean_ncv_markedness': 0.7512637667106976,
             'mean_ncv_mcc': 0.7322816105636248,
             'mean_ncv_negative_predictive_value': 0.8392854753941711,
             'mean_ncv_precision': 0.9119782913165266,
             'mean_ncv_precision_recall_auc': 0.949941599606202,
             'mean_ncv_roc_auc': 0.9539141414141413,
             'mean_ncv_sensitivity': 0.7777777777777777,
             'mean_ncv_specificity': 0.9363636363636365,
             'mean_test_average_precision': 0.9641626984126982,
             'mean_test_balanced_accuracy': 0.858,
             'mean_test_brier_loss': 0.09444619500000001,
             'mean_test_f1': 0.8190158730158729,
             'mean_test_informedness': 0.716,
             'mean_test_log_loss': 0.30749756346414847,
             'mean_test_markedness': 0.7836190476190477,
             'mean_test_mcc': 0.7460077319984413,
             'mean_test_negative_predictive_value': 0.8569523809523809,
             'mean_test_precision': 0.9266666666666667,
             'mean_test_precision_recall_auc': 0.9584146825396824,
             'mean_test_roc_auc': 0.9650833333333334,
             'mean_test_sensitivity': 0.7749999999999999,
             'mean_test_specificity': 0.941,
             'mean_train_average_precision': 1.0,
             'mean_train_balanced_accuracy': 1.0,
             'mean_train_brier_loss': 0.011099220625000003,
             'mean_train_f1': 1.0,
             'mean_train_informedness': 1.0,
             'mean_train_log_loss': 0.08042165153005489,
             'mean_train_markedness': 1.0,
             'mean_train_mcc': 1.0,
             'mean_train_negative_predictive_value': 1.0,
             'mean_train_precision': 1.0,
             'mean_train_precision_recall_auc': 1.0,
             'mean_train_roc_auc': 1.0,
             'mean_train_sensitivity': 1.0,
             'mean_train_specificity': 1.0,
             'min_ncv_average_precision': 0.9168923451276392,
             'min_ncv_balanced_accuracy': 0.7878787878787878,
             'min_ncv_brier_loss': 0.08422987500000001,
             'min_ncv_f1': 0.75,
             'min_ncv_informedness': 0.5757575757575757,
             'min_ncv_log_loss': 0.2804719611845565,
             'min_ncv_markedness': 0.6263736263736264,
             'min_ncv_mcc': 0.6005325641789633,
             'min_ncv_negative_predictive_value': 0.7692307692307693,
             'min_ncv_precision': 0.8235294117647058,
             'min_ncv_precision_recall_auc': 0.9148515958442429,
             'min_ncv_roc_auc': 0.9116161616161617,
             'min_ncv_sensitivity': 0.6666666666666666,
             'min_ncv_specificity': 0.8636363636363636,
             'min_test_average_precision': 0.6666666666666667,
             'min_test_balanced_accuracy': 0.5666666666666667,
             'min_test_brier_loss': 0.020021500000000005,
             'min_test_f1': 0.4,
             'min_test_informedness': 0.1333333333333333,
             'min_test_log_loss': 0.12260386623647426,
             'min_test_markedness': 0.16666666666666652,
             'min_test_mcc': 0.14907119849998599,
             'min_test_negative_predictive_value': 0.5714285714285714,
             'min_test_precision': 0.5,
             'min_test_precision_recall_auc': 0.6222222222222222,
             'min_test_roc_auc': 0.6666666666666666,
             'min_test_sensitivity': 0.25,
             'min_test_specificity': 0.6,
             'min_train_average_precision': 0.9999999999999999,
             'min_train_balanced_accuracy': 1.0,
             'min_train_brier_loss': 0.005474499999999999,
             'min_train_f1': 1.0,
             'min_train_informedness': 1.0,
             'min_train_log_loss': 0.04915643999040061,
             'min_train_markedness': 1.0,
             'min_train_mcc': 1.0,
             'min_train_negative_predictive_value': 1.0,
             'min_train_precision': 1.0,
             'min_train_precision_recall_auc': 0.9999999999999999,
             'min_train_roc_auc': 0.9999999999999999,
             'min_train_sensitivity': 1.0,
             'min_train_specificity': 1.0,
             'ncv_average_precision': array([0.96259405, 0.95526704, 0.97341653, 0.95461374, 0.95931333,
       0.93290625, 0.91689235, 0.93011126, 0.97070227, 0.95521617]),
             'ncv_balanced_accuracy': array([0.83333333, 0.86616162, 0.89393939, 0.82070707, 0.87121212,
       0.83838384, 0.78787879, 0.87121212, 0.89393939, 0.89393939]),
             'ncv_brier_loss': array([0.09825665, 0.0911115 , 0.08422988, 0.0868119 , 0.08535123,
       0.10329743, 0.11301657, 0.10404173, 0.08656725, 0.09177783]),
             'ncv_f1': array([0.8       , 0.84848485, 0.88235294, 0.8       , 0.85714286,
       0.8125    , 0.75      , 0.85714286, 0.88235294, 0.88235294]),
             'ncv_informedness': array([0.66666667, 0.73232323, 0.78787879, 0.64141414, 0.74242424,
       0.67676768, 0.57575758, 0.74242424, 0.78787879, 0.78787879]),
             'ncv_log_loss': array([0.31521192, 0.28911568, 0.28454102, 0.28354755, 0.28047196,
       0.32436084, 0.33791799, 0.36202126, 0.29225485, 0.30553256]),
             'ncv_markedness': array([0.78571429, 0.77333333, 0.8125    , 0.64961637, 0.75191816,
       0.73626374, 0.62637363, 0.75191816, 0.8125    , 0.8125    ]),
             'ncv_mcc': array([0.72374686, 0.75254898, 0.80009469, 0.64550223, 0.74715612,
       0.70588915, 0.60053256, 0.74715612, 0.80009469, 0.80009469]),
             'ncv_negative_predictive_value': array([0.78571429, 0.84      , 0.875     , 0.82608696, 0.86956522,
       0.80769231, 0.76923077, 0.86956522, 0.875     , 0.875     ]),
             'ncv_precision': array([1.        , 0.93333333, 0.9375    , 0.82352941, 0.88235294,
       0.92857143, 0.85714286, 0.88235294, 0.9375    , 0.9375    ]),
             'ncv_precision_recall_auc': array([0.96146329, 0.95342802, 0.9727412 , 0.95337248, 0.95817414,
       0.93342094, 0.9148516 , 0.92865962, 0.96986976, 0.95343496]),
             'ncv_roc_auc': array([0.96969697, 0.96464646, 0.97474747, 0.95959596, 0.96464646,
       0.93813131, 0.91666667, 0.91161616, 0.97474747, 0.96464646]),
             'ncv_sensitivity': array([0.66666667, 0.77777778, 0.83333333, 0.77777778, 0.83333333,
       0.72222222, 0.66666667, 0.83333333, 0.83333333, 0.83333333]),
             'ncv_specificity': array([1.        , 0.95454545, 0.95454545, 0.86363636, 0.90909091,
       0.95454545, 0.90909091, 0.90909091, 0.95454545, 0.95454545]),
             'ranked_best_inner_params': [{'frequency': 19, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 12, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 500}},
                                          {'frequency': 8, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 5, 'parameters': {'randomforestclassifier__max_features': 'sqrt', 'randomforestclassifier__n_estimators': 100}},
                                          {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 1000}},
                                          {'frequency': 3, 'parameters': {'randomforestclassifier__max_features': 0.1, 'randomforestclassifier__n_estimators': 500}}],
             'std_ncv_average_precision': 0.01846981186637994,
             'std_ncv_balanced_accuracy': 0.03587478491537059,
             'std_ncv_brier_loss': 0.009749583161736252,
             'std_ncv_f1': 0.044747124486745594,
             'std_ncv_informedness': 0.07174956983074118,
             'std_ncv_log_loss': 0.027176791359155104,
             'std_ncv_markedness': 0.06589480755429676,
             'std_ncv_mcc': 0.06692199971175196,
             'std_ncv_negative_predictive_value': 0.04029155034788057,
             'std_ncv_precision': 0.05057306698921349,
             'std_ncv_precision_recall_auc': 0.018591426459959988,
             'std_ncv_roc_auc': 0.023382271790018252,
             'std_ncv_sensitivity': 0.06928995160692487,
             'std_ncv_specificity': 0.03833063830507128,
             'std_test_average_precision': 0.06769760106565278,
             'std_test_balanced_accuracy': 0.11079694814759503,
             'std_test_brier_loss': 0.04579071492247865,
             'std_test_f1': 0.15762817669576157,
             'std_test_informedness': 0.22159389629519005,
             'std_test_log_loss': 0.12190581115913458,
             'std_test_markedness': 0.17456015608114345,
             'std_test_mcc': 0.19620489096160515,
             'std_test_negative_predictive_value': 0.124028773500438,
             'std_test_precision': 0.13838229606400373,
             'std_test_precision_recall_auc': 0.0789047853613851,
             'std_test_roc_auc': 0.06477377561021683,
             'std_test_sensitivity': 0.21838019437909692,
             'std_test_specificity': 0.11189006995753482,
             'std_train_average_precision': 6.539381140746054e-17,
             'std_train_balanced_accuracy': 0.0,
             'std_train_brier_loss': 0.0023649039036456945,
             'std_train_f1': 0.0,
             'std_train_informedness': 0.0,
             'std_train_log_loss': 0.012926724352809506,
             'std_train_markedness': 0.0,
             'std_train_mcc': 0.0,
             'std_train_negative_predictive_value': 0.0,
             'std_train_precision': 0.0,
             'std_train_precision_recall_auc': 6.539381140746054e-17,
             'std_train_roc_auc': 1.586032892321652e-17,
             'std_train_sensitivity': 0.0,
             'std_train_specificity': 0.0,
             'test_average_precision': array([1.        , 1.        , 0.95      , 1.        , 0.80555556,
       1.        , 1.        , 1.        , 0.91666667, 1.        ,
       1.        , 1.        , 0.95      , 1.        , 0.91666667,
       1.        , 1.        , 0.95      , 1.        , 1.        ,
       1.        , 0.95      , 1.        , 1.        , 1.        ,
       1.        , 0.80416667, 1.        , 1.        , 1.        ,
       0.95      , 0.89285714, 1.        , 0.80555556, 1.        ,
       1.        , 1.        , 1.        , 0.66666667, 1.        ,
       1.        , 1.        , 1.        , 0.91666667, 0.91666667,
       0.95      , 0.95      , 1.        , 0.91666667, 1.        ]),
             'test_balanced_accuracy': array([0.875     , 0.75      , 0.875     , 1.        , 0.66666667,
       0.75      , 0.875     , 1.        , 0.83333333, 0.9       ,
       1.        , 0.875     , 0.875     , 1.        , 0.73333333,
       0.75      , 0.875     , 0.875     , 0.8       , 0.9       ,
       0.875     , 0.875     , 1.        , 0.8       , 0.83333333,
       0.875     , 0.625     , 0.875     , 1.        , 0.9       ,
       0.75      , 0.75      , 1.        , 0.66666667, 0.66666667,
       1.        , 1.        , 0.875     , 0.56666667, 0.83333333,
       1.        , 0.875     , 1.        , 0.83333333, 0.73333333,
       0.875     , 0.875     , 1.        , 0.9       , 0.83333333]),
             'test_brier_loss': array([0.115875  , 0.11833187, 0.0932875 , 0.03585788, 0.127931  ,
       0.140075  , 0.094681  , 0.06142263, 0.0952635 , 0.06411538,
       0.0323685 , 0.09789038, 0.118763  , 0.069796  , 0.1023315 ,
       0.1197105 , 0.046604  , 0.0984875 , 0.1041825 , 0.065075  ,
       0.0796465 , 0.108352  , 0.0557925 , 0.104978  , 0.07798713,
       0.061275  , 0.21138763, 0.124225  , 0.034225  , 0.0853745 ,
       0.11557437, 0.146125  , 0.0200215 , 0.1546875 , 0.1286745 ,
       0.04151887, 0.02815   , 0.08996375, 0.277645  , 0.082931  ,
       0.063085  , 0.0776    , 0.05124925, 0.1289125 , 0.1119895 ,
       0.11187437, 0.111592  , 0.04219875, 0.10129113, 0.09193287]),
             'test_f1': array([0.85714286, 0.66666667, 0.85714286, 1.        , 0.5       ,
       0.66666667, 0.85714286, 1.        , 0.8       , 0.85714286,
       1.        , 0.85714286, 0.85714286, 1.        , 0.66666667,
       0.66666667, 0.85714286, 0.85714286, 0.75      , 0.85714286,
       0.85714286, 0.85714286, 1.        , 0.75      , 0.8       ,
       0.85714286, 0.4       , 0.85714286, 1.        , 0.85714286,
       0.75      , 0.75      , 1.        , 0.5       , 0.5       ,
       1.        , 1.        , 0.88888889, 0.4       , 0.8       ,
       1.        , 0.85714286, 1.        , 0.8       , 0.66666667,
       0.85714286, 0.85714286, 1.        , 0.85714286, 0.8       ]),
             'test_informedness': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 1.        , 0.66666667, 0.8       ,
       1.        , 0.75      , 0.75      , 1.        , 0.46666667,
       0.5       , 0.75      , 0.75      , 0.6       , 0.8       ,
       0.75      , 0.75      , 1.        , 0.6       , 0.66666667,
       0.75      , 0.25      , 0.75      , 1.        , 0.8       ,
       0.5       , 0.5       , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 0.75      , 0.13333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.46666667,
       0.75      , 0.75      , 1.        , 0.8       , 0.66666667]),
             'test_log_loss': array([0.35813503, 0.35866903, 0.29521599, 0.18704965, 0.37698989,
       0.40661011, 0.28311413, 0.23424416, 0.32172214, 0.19988787,
       0.15482599, 0.31350733, 0.36653836, 0.26834225, 0.31949118,
       0.35619019, 0.18300771, 0.3303174 , 0.32054647, 0.22767596,
       0.27457723, 0.34092963, 0.1998991 , 0.33148887, 0.25546497,
       0.23208253, 0.55553405, 0.38890985, 0.15343345, 0.29184433,
       0.33732596, 0.43477404, 0.12260387, 0.41292108, 0.38196502,
       0.16375038, 0.16144647, 0.30508428, 0.90371896, 0.27610621,
       0.2394388 , 0.27476015, 0.20478784, 0.39115192, 0.35113554,
       0.35598012, 0.34984352, 0.20097899, 0.32735474, 0.29350545]),
             'test_markedness': array([0.8       , 0.66666667, 0.8       , 1.        , 0.71428571,
       0.66666667, 0.8       , 1.        , 0.83333333, 0.75      ,
       1.        , 0.8       , 0.8       , 1.        , 0.46666667,
       0.66666667, 0.8       , 0.8       , 0.6       , 0.75      ,
       0.8       , 0.8       , 1.        , 0.6       , 0.83333333,
       0.8       , 0.57142857, 0.8       , 1.        , 0.75      ,
       0.5       , 0.5       , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 0.8       , 0.16666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.46666667,
       0.8       , 0.8       , 1.        , 0.75      , 0.83333333]),
             'test_mcc': array([0.77459667, 0.57735027, 0.77459667, 1.        , 0.48795004,
       0.57735027, 0.77459667, 1.        , 0.74535599, 0.77459667,
       1.        , 0.77459667, 0.77459667, 1.        , 0.46666667,
       0.57735027, 0.77459667, 0.77459667, 0.6       , 0.77459667,
       0.77459667, 0.77459667, 1.        , 0.6       , 0.74535599,
       0.77459667, 0.37796447, 0.77459667, 1.        , 0.77459667,
       0.5       , 0.5       , 1.        , 0.48795004, 0.48795004,
       1.        , 1.        , 0.77459667, 0.1490712 , 0.74535599,
       1.        , 0.77459667, 1.        , 0.74535599, 0.46666667,
       0.77459667, 0.77459667, 1.        , 0.77459667, 0.74535599]),
             'test_negative_predictive_value': array([0.8       , 0.66666667, 0.8       , 1.        , 0.71428571,
       0.66666667, 0.8       , 1.        , 0.83333333, 1.        ,
       1.        , 0.8       , 0.8       , 1.        , 0.8       ,
       0.66666667, 0.8       , 0.8       , 1.        , 1.        ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333,
       0.8       , 0.57142857, 0.8       , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.71428571, 0.71428571,
       1.        , 1.        , 1.        , 0.66666667, 0.83333333,
       1.        , 0.8       , 1.        , 0.83333333, 0.8       ,
       0.8       , 0.8       , 1.        , 1.        , 0.83333333]),
             'test_precision': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.6       , 0.75      ,
       1.        , 1.        , 1.        , 0.6       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.75      ,
       0.75      , 0.75      , 1.        , 1.        , 1.        ,
       1.        , 1.        , 0.8       , 0.5       , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.66666667,
       1.        , 1.        , 1.        , 0.75      , 1.        ]),
             'test_precision_recall_auc': array([1.        , 1.        , 0.94375   , 1.        , 0.76388889,
       1.        , 1.        , 1.        , 0.90277778, 1.        ,
       1.        , 1.        , 0.94375   , 1.        , 0.90277778,
       1.        , 1.        , 0.94375   , 1.        , 1.        ,
       1.        , 0.94375   , 1.        , 1.        , 1.        ,
       1.        , 0.76666667, 1.        , 1.        , 1.        ,
       0.94375   , 0.88392857, 1.        , 0.76388889, 1.        ,
       1.        , 1.        , 1.        , 0.62222222, 1.        ,
       1.        , 1.        , 1.        , 0.90277778, 0.90277778,
       0.94375   , 0.94375   , 1.        , 0.90277778, 1.        ]),
             'test_roc_auc': array([1.        , 1.        , 0.9375    , 1.        , 0.86666667,
       1.        , 1.        , 1.        , 0.93333333, 1.        ,
       1.        , 1.        , 0.9375    , 1.        , 0.93333333,
       1.        , 1.        , 0.9375    , 1.        , 1.        ,
       1.        , 0.9375    , 1.        , 1.        , 1.        ,
       1.        , 0.8125    , 1.        , 1.        , 1.        ,
       0.9375    , 0.8125    , 1.        , 0.86666667, 1.        ,
       1.        , 1.        , 1.        , 0.66666667, 1.        ,
       1.        , 1.        , 1.        , 0.93333333, 0.93333333,
       0.9375    , 0.9375    , 1.        , 0.93333333, 1.        ]),
             'test_sensitivity': array([0.75      , 0.5       , 0.75      , 1.        , 0.33333333,
       0.5       , 0.75      , 1.        , 0.66666667, 1.        ,
       1.        , 0.75      , 0.75      , 1.        , 0.66666667,
       0.5       , 0.75      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667,
       0.75      , 0.25      , 0.75      , 1.        , 1.        ,
       0.75      , 0.75      , 1.        , 0.33333333, 0.33333333,
       1.        , 1.        , 1.        , 0.33333333, 0.66666667,
       1.        , 0.75      , 1.        , 0.66666667, 0.66666667,
       0.75      , 0.75      , 1.        , 1.        , 0.66666667]),
             'test_specificity': array([1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 1.  ,
       1.  , 1.  , 1.  , 0.8 , 1.  , 1.  , 1.  , 0.6 , 0.8 , 1.  , 1.  ,
       1.  , 0.6 , 1.  , 1.  , 1.  , 1.  , 1.  , 0.8 , 0.75, 0.75, 1.  ,
       1.  , 1.  , 1.  , 1.  , 0.75, 0.8 , 1.  , 1.  , 1.  , 1.  , 1.  ,
       0.8 , 1.  , 1.  , 1.  , 0.8 , 1.  ]),
             'train_average_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_balanced_accuracy': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_brier_loss': array([0.01503333, 0.00897081, 0.01294479, 0.01046593, 0.01141496,
       0.01125   , 0.01098863, 0.01303614, 0.00864821, 0.00871676,
       0.01214579, 0.0145244 , 0.01059879, 0.00997275, 0.01181708,
       0.01255392, 0.00981218, 0.01152604, 0.00727646, 0.0147875 ,
       0.01223731, 0.00738829, 0.01273329, 0.00927525, 0.0107948 ,
       0.01588125, 0.007969  , 0.01027396, 0.01672188, 0.00917138,
       0.00780243, 0.01168125, 0.01122983, 0.01206979, 0.01056938,
       0.01289586, 0.01283438, 0.00983913, 0.0054745 , 0.012147  ,
       0.01185379, 0.00890104, 0.01246717, 0.01126875, 0.00860104,
       0.01069124, 0.01164481, 0.01584834, 0.0087365 , 0.00947394]),
             'train_f1': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_informedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_log_loss': array([0.10126817, 0.06800768, 0.08767673, 0.07769701, 0.08130037,
       0.07349062, 0.07725284, 0.09054384, 0.06615895, 0.07158179,
       0.08424792, 0.10192417, 0.08313993, 0.07429091, 0.09120684,
       0.09250357, 0.07358817, 0.07796338, 0.06259866, 0.09939968,
       0.08376669, 0.06380358, 0.08845278, 0.07032192, 0.07823285,
       0.10415832, 0.06272408, 0.08203736, 0.10761085, 0.07043781,
       0.06506486, 0.08442039, 0.08059348, 0.08196271, 0.0759258 ,
       0.08877258, 0.09802853, 0.07312306, 0.04915644, 0.08438999,
       0.08307847, 0.06863786, 0.08948283, 0.0732399 , 0.06603623,
       0.07520637, 0.08854075, 0.10969628, 0.06652007, 0.07181852]),
             'train_markedness': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_mcc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_negative_predictive_value': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_precision_recall_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_roc_auc': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_sensitivity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]),
             'train_specificity': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}

C28 mean outer cross-validation train- and test-split performance scores (mcc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.964 ± 0.061945'],
 'mean_test_balanced_accuracy': ['0.854 ± 0.112350'],
 'mean_test_brier_loss': ['0.09509 ± 0.044276'],
 'mean_test_f1': ['0.813 ± 0.158640'],
 'mean_test_informedness': ['0.709 ± 0.224700'],
 'mean_test_log_loss': ['0.3065 ± 0.113814'],
 'mean_test_markedness': ['0.783 ± 0.173173'],
 'mean_test_mcc': ['0.742 ± 0.197009'],
 'mean_test_negative_predictive_value': ['0.847 ± 0.128040'],
 'mean_test_precision': ['0.935 ± 0.128732'],
 'mean_test_precision_recall_auc': ['0.958 ± 0.072219'],
 'mean_test_roc_auc': ['0.965 ± 0.058720'],
 'mean_test_sensitivity': ['0.760 ± 0.222489'],
 'mean_test_specificity': ['0.949 ± 0.100757'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01106 ± 0.002279'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0796 ± 0.013066'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean outer cross-validation train- and test-split performance scores (precision_recall_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.966 ± 0.064846'],
 'mean_test_balanced_accuracy': ['0.860 ± 0.112461'],
 'mean_test_brier_loss': ['0.09326 ± 0.044086'],
 'mean_test_f1': ['0.821 ± 0.159407'],
 'mean_test_informedness': ['0.720 ± 0.224921'],
 'mean_test_log_loss': ['0.3042 ± 0.115900'],
 'mean_test_markedness': ['0.789 ± 0.177139'],
 'mean_test_mcc': ['0.751 ± 0.199438'],
 'mean_test_negative_predictive_value': ['0.853 ± 0.122537'],
 'mean_test_precision': ['0.936 ± 0.135359'],
 'mean_test_precision_recall_auc': ['0.960 ± 0.075973'],
 'mean_test_roc_auc': ['0.968 ± 0.056734'],
 'mean_test_sensitivity': ['0.770 ± 0.215972'],
 'mean_test_specificity': ['0.950 ± 0.106904'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01124 ± 0.002189'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0808 ± 0.012556'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean outer cross-validation train- and test-split performance scores (roc_auc optimized hyperparameters):
{'mean_best_threshold': ['nan'],
 'mean_best_threshold_tuning_score': ['nan'],
 'mean_test_average_precision': ['0.964 ± 0.067698'],
 'mean_test_balanced_accuracy': ['0.858 ± 0.110797'],
 'mean_test_brier_loss': ['0.09445 ± 0.045791'],
 'mean_test_f1': ['0.819 ± 0.157628'],
 'mean_test_informedness': ['0.716 ± 0.221594'],
 'mean_test_log_loss': ['0.3075 ± 0.121906'],
 'mean_test_markedness': ['0.784 ± 0.174560'],
 'mean_test_mcc': ['0.746 ± 0.196205'],
 'mean_test_negative_predictive_value': ['0.857 ± 0.124029'],
 'mean_test_precision': ['0.927 ± 0.138382'],
 'mean_test_precision_recall_auc': ['0.958 ± 0.078905'],
 'mean_test_roc_auc': ['0.965 ± 0.064774'],
 'mean_test_sensitivity': ['0.775 ± 0.218380'],
 'mean_test_specificity': ['0.941 ± 0.111890'],
 'mean_train_average_precision': ['1.000 ± 0.000000'],
 'mean_train_balanced_accuracy': ['1.000 ± 0.000000'],
 'mean_train_brier_loss': ['0.01110 ± 0.002365'],
 'mean_train_f1': ['1.000 ± 0.000000'],
 'mean_train_informedness': ['1.000 ± 0.000000'],
 'mean_train_log_loss': ['0.0804 ± 0.012927'],
 'mean_train_markedness': ['1.000 ± 0.000000'],
 'mean_train_mcc': ['1.000 ± 0.000000'],
 'mean_train_negative_predictive_value': ['1.000 ± 0.000000'],
 'mean_train_precision': ['1.000 ± 0.000000'],
 'mean_train_precision_recall_auc': ['1.000 ± 0.000000'],
 'mean_train_roc_auc': ['1.000 ± 0.000000'],
 'mean_train_sensitivity': ['1.000 ± 0.000000'],
 'mean_train_specificity': ['1.000 ± 0.000000']}

C28 mean nested cross-validation performance scores (mcc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.951 ± 0.017144'],
 'mean_ncv_balanced_accuracy': ['0.853 ± 0.048799'],
 'mean_ncv_brier_loss': ['0.09509 ± 0.009897'],
 'mean_ncv_f1': ['0.831 ± 0.061327'],
 'mean_ncv_informedness': ['0.707 ± 0.097598'],
 'mean_ncv_log_loss': ['0.3065 ± 0.024689'],
 'mean_ncv_markedness': ['0.751 ± 0.085065'],
 'mean_ncv_mcc': ['0.728 ± 0.090834'],
 'mean_ncv_negative_predictive_value': ['0.831 ± 0.049980'],
 'mean_ncv_precision': ['0.920 ± 0.048202'],
 'mean_ncv_precision_recall_auc': ['0.949 ± 0.017509'],
 'mean_ncv_roc_auc': ['0.954 ± 0.021388'],
 'mean_ncv_sensitivity': ['0.761 ± 0.083024'],
 'mean_ncv_specificity': ['0.945 ± 0.035855']}

C28 mean nested cross-validation performance scores (precision_recall_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.953 ± 0.012660'],
 'mean_ncv_balanced_accuracy': ['0.859 ± 0.033826'],
 'mean_ncv_brier_loss': ['0.09326 ± 0.007754'],
 'mean_ncv_f1': ['0.839 ± 0.042857'],
 'mean_ncv_informedness': ['0.718 ± 0.067653'],
 'mean_ncv_log_loss': ['0.3042 ± 0.022290'],
 'mean_ncv_markedness': ['0.759 ± 0.058152'],
 'mean_ncv_mcc': ['0.738 ± 0.061323'],
 'mean_ncv_negative_predictive_value': ['0.837 ± 0.038738'],
 'mean_ncv_precision': ['0.922 ± 0.040949'],
 'mean_ncv_precision_recall_auc': ['0.952 ± 0.012778'],
 'mean_ncv_roc_auc': ['0.957 ± 0.015579'],
 'mean_ncv_sensitivity': ['0.772 ± 0.066512'],
 'mean_ncv_specificity': ['0.945 ± 0.028748']}

C28 mean nested cross-validation performance scores (roc_auc optimized hyperparameters):
{'mean_ncv_average_precision': ['0.951 ± 0.018470'],
 'mean_ncv_balanced_accuracy': ['0.857 ± 0.035875'],
 'mean_ncv_brier_loss': ['0.09445 ± 0.009750'],
 'mean_ncv_f1': ['0.837 ± 0.044747'],
 'mean_ncv_informedness': ['0.714 ± 0.071750'],
 'mean_ncv_log_loss': ['0.3075 ± 0.027177'],
 'mean_ncv_markedness': ['0.751 ± 0.065895'],
 'mean_ncv_mcc': ['0.732 ± 0.066922'],
 'mean_ncv_negative_predictive_value': ['0.839 ± 0.040292'],
 'mean_ncv_precision': ['0.912 ± 0.050573'],
 'mean_ncv_precision_recall_auc': ['0.950 ± 0.018591'],
 'mean_ncv_roc_auc': ['0.954 ± 0.023382'],
 'mean_ncv_sensitivity': ['0.778 ± 0.069290'],
 'mean_ncv_specificity': ['0.936 ± 0.038331']}

C28 end: 16.09.2022_13-16-00
++++++++++++++++++++++++++++++++++++++++
End: 16.09.2022_13-16-00
========================================

